------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)
3. Day of the week (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

**Classes:**
1. Person
    - Attributes:
      - name: String
      - email: String
2. Tutor extends Person
    - Attributes:
      - bankAccount: String
      - subjects: List<Subject>
      - expertise: List<LevelOfExpertise>
      - hourlyPrice: Map<Subject, Double>
      - availability: Map<DayOfWeek, TimeSlot>
3. Student extends Person
    - Attributes:
      - creditCard: String
4. TutoringSession
    - Attributes:
      - tutor: Tutor
      - student: Student
      - subject: Subject
      - levelOfTutoring: LevelOfExpertise
      - dateTime: LocalDateTime
      - status: SessionStatus
5. SessionStatus
    - Enumerations:
      - REQUESTED
      - CONFIRMED
      - CANCELLED
6. TimeSlot
    - Attributes:
      - startTime: LocalTime
      - endTime: LocalTime

**Attributes:**
- Person
  - name: String
  - email: String
- Tutor
  - bankAccount: String
- Student
  - creditCard: String
- TutoringSession
  - status: SessionStatus"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. Level of expertise (primary school level, high school level, university level): Represents the expertise levels in a subject.
3. Day of the week (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability.

**Classes:**
1. Person(name: String, email: String): Represents a generic person with name and email attributes.
2. Tutor extends Person(bankAccount: String, subjects: List<Subject>, expertise: List<LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, availability: Map<DayOfWeek, TimeSlot): Represents a tutor with specific attributes for tutoring services.
3. Student extends Person(creditCard: String): Represents a student with a credit card attribute.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: LevelOfExpertise, dateTime: LocalDateTime, status: SessionStatus): Represents a tutoring session with details such as tutor, student, subject, and status.
5. SessionStatus: Represents the status of a tutoring session.
6. TimeSlot(startTime: LocalTime, endTime: LocalTime): Represents a time slot for availability."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateTime 
   X  Attribute:status 
 X  Class:Level of expertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Day of the week 
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:availability 
   X  Attribute:TimeSlot 
 X  Class:Student extends Person
   X  Attribute:creditCard 
 X  Class:TimeSlot
   X  Attribute:startTime 
   X  Attribute:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

**Classes:**
1. Person
   - Attributes: name, email

2. Tutor (inherits from Person)
   - Attributes: bank account, hourly price
   - Methods: offerTutoring, specifyAvailability, cancelSession, offerNextSession

3. Student (inherits from Person)
   - Methods: browseTutoringOffers, makeTutoringRequest, payForSession

4. TutoringSession
   - Attributes: subject, expertise level, date, time, price
   - Methods: confirmSession, rescheduleSession, agreeFollowUpSession, cancelSession

**Attributes:**
- Person: name, email
- Tutor: bank account, hourly price
- Student: 
- TutoringSession: subject, expertise level, date, time, price"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide in a subject.

**Classes:**
1. Person(name: string, email: string): Represents a generic person with a name and email.
2. Tutor(name: string, email: string, bankAccount: string, hourlyPrice: decimal): Represents a tutor with additional attributes like bank account and hourly price for tutoring sessions.
3. Student(name: string, email: string): Represents a student with a name and email.
4. TutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, date: date, time: time, price: decimal): Represents a tutoring session with attributes like subject, expertise level, date, time, and price."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.)
2. ExpertiseLevel (primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email
   
2. Tutor (inherits from User)
   - Attributes: bank_account
   - Associations: List of SubjectExpertise, List of WeeklyAvailability, List of TutoringSession
   
3. Student (inherits from User)
   - Associations: List of TutoringRequest, List of TutoringSession

4. SubjectExpertise
   - Attributes: subject, expertise_level, hourly_price

5. WeeklyAvailability
   - Attributes: day, start_time, end_time

6. TutoringRequest
   - Attributes: subject, level, target_date, target_time
   - Associations: Tutor

7. TutoringSession
   - Attributes: date, time, status (confirmed, pending, cancelled)
   - Associations: Tutor, Student

### Attributes:
- User:
   - name (String)
   - email (String)
   
- Tutor:
   - bank_account (String)
   
- SubjectExpertise:
   - subject (Subject)
   - expertise_level (ExpertiseLevel)
   - hourly_price (double)
   
- WeeklyAvailability:
   - day (String)
   - start_time (Time)
   - end_time (Time)
   
- TutoringRequest:
   - subject (Subject)
   - level (ExpertiseLevel)
   - target_date (Date)
   - target_time (Time)
   
- TutoringSession:
   - date (Date)
   - time (Time)
   - status (String)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor can provide in a subject.

### Classes:
1. User(name: String, email: String): Represents a general user with a name and email address.
2. Tutor(name: String, email: String, bank_account: String): Represents a tutor who is also a user and provides bank account information.
3. Student(name: String, email: String): Represents a student who is also a user.
4. SubjectExpertise(subject: Subject, expertise_level: ExpertiseLevel, hourly_price: double): Represents the expertise of a tutor in a specific subject.
5. WeeklyAvailability(day: String, start_time: Time, end_time: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, level: ExpertiseLevel, target_date: Date, target_time: Time): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(date: Date, time: Time, status: String): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bank_account  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:target_date 
   X  Attribute:target_time 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertise_level 
   X  Attribute:hourly_price 
 X  Class:WeeklyAvailability
   X  Attribute:day 
   X  Attribute:start_time 
   X  Attribute:end_time 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - Name
     - Email address

2. Tutor
   - Attributes:
     - Bank account
     - List of subjects they offer tutoring in
     - List of expertise levels for each subject
     - List of hourly prices for each subject
     - Weekly availability for tutoring sessions

3. Student
   - Attributes:
     - Name
     - Email address
     - List of tutoring requests made

4. TutoringSession
   - Attributes:
     - Tutor
     - Student
     - Subject
     - Level of tutoring
     - Date and time
     - Status (confirmed, pending, cancelled)
     - Payment details

### Attributes:
1. Tutor
   - Name
   - Email address
   - Bank account
   - List of subjects they offer tutoring in
   - List of expertise levels for each subject
   - List of hourly prices for each subject
   - Weekly availability for tutoring sessions

2. Student
   - Name
   - Email address
   - List of tutoring requests made

3. TutoringSession
   - Tutor (reference to Tutor class)
   - Student (reference to Student class)
   - Subject
   - Level of tutoring
   - Date and time
   - Status
   - Payment details"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. Level of expertise (primary school level, high school level, university level): Represents the expertise levels in a subject.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, subjects: List<Subject>, expertiseLevels: List<Level of expertise>, hourlyPrices: List<Double>, availability: List<String>): Represents a tutor with specific attributes for tutoring offers.
3. Student(name: String, email: String, tutoringRequests: List<TutoringSession>): Represents a student with attributes for making tutoring requests.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: Level of expertise, dateTime: Date, status: String, paymentDetails: String): Represents a tutoring session with relevant details."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPrices 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateTime 
   X  Attribute:status 
   X  Attribute:paymentDetails 
 X  Class:Level of expertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount, hourlyPrice
   - Associations: availability (weekly schedule), expertise (subject, level)

3. Student
   - Attributes: name, email
   - Associations: tutoringRequests

4. TutoringRequest
   - Attributes: subject, level, targetDateTime
   - Associations: tutor, student

5. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: tutor, student

### Attributes (in addition to those mentioned in classes):
- User: name (String), email (String)
- Tutor: bankAccount (String), hourlyPrice (double)
- TutoringRequest: subject (Subject), level (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: dateTime (DateTime), isConfirmed (boolean), isCancelled (boolean)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: double): Represents a tutor with additional attributes like bank account and hourly price for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email for registration.
4. TutoringRequest(subject: Subject, level: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(dateTime: DateTime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session with date and confirmation status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary school level, High school level, University level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - tutoringSubjects: List<Subject>
     - expertiseLevels: Map<Subject, LevelOfExpertise>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

3. Student extends Person

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - isConfirmed: Boolean

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - tutoringSubjects: List<Subject>
  - expertiseLevels: Map<Subject, LevelOfExpertise>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

- Student:
  - None specific to this class

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - levelOfTutoring: LevelOfExpertise
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - isConfirmed: Boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. LevelOfExpertise (Primary school level, High school level, University level): Represents the different levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, tutoringSubjects: List<Subject>, expertiseLevels: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor who provides tutoring services.
3. Student(name: String, email: String): Represents a student who can browse and request tutoring sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: LevelOfExpertise, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, isConfirmed: Boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevels 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:isConfirmed 
 X  Class:LevelOfExpertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. **Subject**  
   - Mathematics
   - Science
   - Literature
   - etc.

2. **ExpertiseLevel**  
   - Primary school level
   - High school level
   - University level

### Classes:
1. **Person**
   - Attributes:
     - name: String
     - email: String

2. **Tutor** (inherits from Person)
   - Attributes:
     - bankAccount: String
     - tutoringSubjects: List\<Subject>
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double
     - weeklyAvailability: List\<String> (e.g., ""Thursdays from 10:00 to 11:30"")

3. **Student** (inherits from Person)
   - Attributes:
     - creditCardInfo: String
     - tutoringRequests: List\<TutoringRequest>

4. **TutoringRequest**
   - Attributes:
     - subject: Subject
     - levelOfTutoring: ExpertiseLevel
     - targetDateTime: DateTime

5. **TutoringSession**
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: DateTime
     - isConfirmed: Boolean

### Attributes:
- **Tutor**
  - name: String
  - email: String
  - bankAccount: String
  - tutoringSubjects: List\<Subject>
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: Double
  - weeklyAvailability: List\<String>

- **Student**
  - name: String
  - email: String
  - creditCardInfo: String
  - tutoringRequests: List\<TutoringRequest>

- **TutoringRequest**
  - subject: Subject
  - levelOfTutoring: ExpertiseLevel
  - targetDateTime: DateTime

- **TutoringSession**
  - tutor: Tutor
  - student: Student
  - dateTime: DateTime
  - isConfirmed: Boolean

### Note:
- This is a high-level class model based on the provided description. Additional attributes and methods may be required depending on the detailed functionality and requirements of the system."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel (Primary school level, High school level, University level): Indicates the level of expertise a tutor has in a subject.

### Classes:
1. Person(name: String, email: String): Represents a general person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, tutoringSubjects: List\<Subject>, expertiseLevel: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: List\<String>): Represents a tutor with specific attributes like bank account, expertise level, and hourly price for tutoring.
3. Student(name: String, email: String, creditCardInfo: String, tutoringRequests: List\<TutoringRequest>): Represents a student with attributes including credit card information and a list of tutoring requests.
4. TutoringRequest(subject: Subject, levelOfTutoring: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request with subject, expertise level, and target date/time.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: DateTime, isConfirmed: Boolean): Represents a tutoring session between a tutor and a student with date/time and confirmation status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCardInfo 
   X  Attribute:tutoringRequests 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - tutoringSubjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends Person

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - price: Double
     - paymentMethod: PaymentMethod

### Attributes:
1. Person
   - name: String
   - email: String

2. Tutor
   - bankAccount: String
   - tutoringSubjects: List<Subject>
   - expertiseLevels: Map<Subject, ExpertiseLevel>
   - hourlyPrice: Map<Subject, Double>
   - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - levelOfTutoring: ExpertiseLevel
   - scheduledDateTime: LocalDateTime
   - actualDateTime: LocalDateTime
   - price: Double
   - paymentMethod: PaymentMethod"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor extends Person(bankAccount: String, tutoringSubjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor who can offer tutoring services in specific subjects with expertise levels and hourly prices.
3. Student extends Person: Represents a student who can browse and request tutoring sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, price: Double, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student with specific details and payment information."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:price 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes: name, email address

2. Tutor extends Person
   - Attributes: bank account, hourly price

3. Student extends Person

4. TutoringSession
   - Attributes: subject, level of tutoring, target date, target time, actual time, payment method

### Associations:
1. Tutor - offers -> Subject
2. Tutor - has -> ExpertiseLevel
3. Tutor - is available at -> WeeklyAvailability
4. Student - makes -> TutoringRequest
5. Tutor - confirms/declines -> TutoringRequest
6. Tutor - offers -> TutoringSession
7. Student - attends -> TutoringSession

### Aggregations:
1. TutoringSession - includes -> Student

### Generalization:
1. Tutor extends Person
2. Student extends Person

### Specialization:
1. Tutor - may also be a Student

### Note:
- The attributes and associations may need further refinement based on the specific requirements and constraints of the system."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. Person(name: string, email: string): Represents a general person with a name and email address.
2. Tutor(name: string, email: string, bankAccount: string, hourlyPrice: double): Represents a tutor with additional attributes like bank account and hourly price for tutoring sessions.
3. Student(name: string, email: string): Represents a student with a name and email address.
4. TutoringSession(subject: Subject, levelOfTutoring: ExpertiseLevel, targetDate: Date, targetTime: Time, paymentMethod: string): Represents a tutoring session with details such as subject, expertise level, date, time, and payment method.

### Associations:
1. Tutor - offers -> Subject: Relationship between a tutor and the subjects they offer.
2. Tutor - has -> ExpertiseLevel: Relationship between a tutor and their level of expertise in a subject.
3. Tutor - is available at -> WeeklyAvailability: Relationship between a tutor and their availability for tutoring sessions.
4. Student - makes -> TutoringRequest: Relationship between a student and a tutoring request.
5. Tutor - confirms/declines -> TutoringRequest: Relationship between a tutor and confirming/declining a tutoring request.
6. Tutor - offers -> TutoringSession: Relationship between a tutor and offering a tutoring session.
7. Student - attends -> TutoringSession: Relationship between a student and attending a tutoring session.

### Aggregations:
1. TutoringSession - includes -> Student: Aggregation between a tutoring session and the students attending it.

### Generalization:
1. Tutor extends Person: Inheritance relationship where a tutor is a specialized type of person.
2. Student extends Person: Inheritance relationship where a student is a specialized type of person.

### Specialization:
1. Tutor - may also be a Student: Specialization relationship indicating that a tutor can also be a student in the system."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------OTS:
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session’s price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

**Classes:**
1. Person
   - Attributes: name, email

2. Tutor
   - Inherits from Person
   - Attributes: bankAccount
   - Associations: List of tutoring offers, availability

3. Student
   - Inherits from Person

4. TutoringOffer
   - Attributes: subject, levelOfExpertise, hourlyPrice
   - Associations: Tutor

5. TutoringSession
   - Attributes: date, time
   - Associations: Tutor, Student

6. Payment
   - Attributes: paymentMethod

**Associations:**
- Tutor has List of tutoring offers
- Tutor has availability for sessions
- Student can make TutoringRequest
- Tutor can confirm TutoringSession
- Tutor and Student participate in TutoringSession
- Tutor and Student can schedule follow-up TutoringSession
- Student pays Payment for TutoringSession

**Notes:**
- There can be additional attributes and methods in each class based on the implementation requirements.
- Error handling and business logic for payment, cancellation policies, and scheduling need to be considered in the implementation."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. LevelOfExpertise(Primary School Level, High School Level, University Level): Indicates the expertise level of tutors in a specific subject.

**Classes:**
1. Person(name: String, email: String): Represents a generic person with name and email attributes for both tutors and students.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account details for payment.
3. Student(name: String, email: String): Represents a student inheriting from Person class.
4. TutoringOffer(subject: Subject, levelOfExpertise: LevelOfExpertise, hourlyPrice: Double): Represents an offer made by a tutor with subject expertise and pricing.
5. TutoringSession(date: Date, time: Time): Represents a scheduled tutoring session with date and time details.
6. Payment(paymentMethod: String): Represents the payment method for a tutoring session.

**Associations:**
- Tutor has List of tutoring offers.
- Tutor has availability for sessions.
- Student can make TutoringRequest.
- Tutor can confirm TutoringSession.
- Tutor and Student participate in TutoringSession.
- Tutor and Student can schedule follow-up TutoringSession.
- Student pays Payment for TutoringSession."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:levelOfExpertise 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:Person
   X  Attribute:name 
   X  Attribute:email 
