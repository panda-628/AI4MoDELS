------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (list of TutoringOffer), availability (list of WeeklyAvailability)

3. Student
   - Associations: requests (list of TutoringRequest), payments (list of Payment)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor (Tutor)

6. TutoringRequest
   - Attributes: level, targetDateTime
   - Associations: student (Student), tutor (Tutor)

7. Payment
   - Attributes: paymentMethod
   - Associations: student (Student)

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- WeeklyAvailability
  - dayOfWeek: DayOfWeek
  - startTime: Time
  - endTime: Time

- TutoringRequest
  - level: ExpertiseLevel
  - targetDateTime: DateTime

- Payment
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the expertise levels for tutoring offers.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for specifying availability.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email for registration.
2. Tutor(bankAccount: String): Represents a tutor who offers tutoring services and provides bank account details.
3. Student: Represents a student who can browse tutoring offers and make requests.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring services in a specific subject.
5. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(level: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session.
7. Payment(paymentMethod: String): Represents a payment made by a student for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.)
2. ExpertiseLevel (primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends Person
   - Attributes:
     - requests: List<TutoringRequest>
     - payments: List<Payment>

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime
     - status: RequestStatus

5. Payment
   - Attributes:
     - amount: Double
     - paymentMethod: PaymentMethod

### Attributes:
- RequestStatus: {PENDING, CONFIRMED, REJECTED}
- PaymentMethod: {CREDIT_CARD, WIRE_TRANSFER}
- DayOfWeek: {MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY}
- LocalTime: Represents a time without a date (e.g., 10:00)
- LocalDateTime: Represents a date-time (e.g., 2023-01-01T10:00)

This class model captures the main entities and their attributes based on the provided description of an Online Tutoring System (OTS)."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.): Represents the different subjects that tutors can offer online tutoring in.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the different levels of expertise a tutor can have in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor extends Person (bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor who can offer online tutoring in specific subjects with expertise levels, hourly prices, and weekly availability.
3. Student extends Person (requests: List<TutoringRequest>, payments: List<Payment): Represents a student who can make tutoring requests and payments.
4. TutoringRequest (student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime, status: RequestStatus): Represents a tutoring request made by a student to a tutor for a specific subject and expertise level at a target date and time.
5. Payment (amount: Double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session with a specific amount and payment method.

### Attributes:
- RequestStatus: {PENDING, CONFIRMED, REJECTED}: Represents the status of a tutoring request.
- PaymentMethod: {CREDIT_CARD, WIRE_TRANSFER}: Represents the different payment methods available.
- DayOfWeek: {MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY}: Represents the days of the week.
- LocalTime: Represents a time without a date (e.g., 10:00).
- LocalDateTime: Represents a date-time (e.g., 2023-01-01T10:00).

This class model defines the main classes and enumerations for an Online Tutoring System (OTS) based on the provided description."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringRequest   Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
   X  Attribute:status 
 O  Class:Payment   Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person 
   X  Attribute:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 X  Class:Student extends Person 
   X  Attribute:requests 
   X  Attribute:payments 
 X  Class:This class model defines the main classes and enumerations for an Online Tutoring System 
   X  Attribute:OTS 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: Double
     - weeklyAvailability: List\<String>
   - Methods:
     - offerTutoring(subject: Subject)

3. Student
   - Attributes:
     - name: String
     - email: String
   - Methods:
     - browseTutoringOffers(subject: Subject)
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, targetDate: Date, targetTime: String)
     - payForSession(paymentMethod: String)

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - date: Date
     - time: String
   - Methods:
     - confirmSession()
     - rescheduleSession(newDate: Date, newTime: String)

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPrice: Double
  - weeklyAvailability: List\<String>

- Student:
  - name: String
  - email: String

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - date: Date
  - time: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: List<String>): Represents a tutor with bank account details, expertise level, hourly price, and weekly availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, date: Date, time: String): Represents a tutoring session between a tutor and a student for a specific subject at a given date and time."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:date 
   X  Attribute:time 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)

**Classes:**
1. User
   - Attributes: name, email address

2. Tutor
   - Attributes: name, email address, bank account, hourly price, weekly availability
   - Relationships: User
   - Methods: offerTutoringSession(), confirmTutoringSession(), cancelTutoringSession()

3. Student
   - Attributes: name, email address
   - Relationships: User
   - Methods: browseTutoringOffers(), makeTutoringRequest(), payForSession()

4. TutoringSession
   - Attributes: subject, level of tutoring, target date, target time
   - Relationships: Tutor, Student
   - Methods: scheduleFollowUpSession()

**Additional Attributes:**
1. Tutor
   - subjectExpertise: Map<Subject, Level of Expertise>
   - hourlyPricePerSubject: Map<Subject, Double>

2. TutoringSession
   - actualDate
   - actualTime
   - paymentMethod (credit card, wire transfer)
   - sessionPrice
   - cancellationPolicy

Feel free to let me know if you need further elaboration or modifications."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. Level of expertise(primary school level, high school level, university level): Represents the levels of expertise in a subject.

**Classes:**
1. User(name: String, email: String): Represents a general user with a name and email address for registration.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: Double, weeklyAvailability: String): Represents a tutor with additional attributes like bank account, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address for registration.
4. TutoringSession(subject: Subject, levelOfTutoring: Level of expertise, targetDate: Date, targetTime: Time): Represents a tutoring session with subject, level of tutoring, target date, and time.

Feel free to ask if you need more details or have any specific requirements."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 X  Class:Level of expertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Expertise Level (e.g. primary school level, high school level, university level)
3. Day of the Week (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List of Subject
     - expertiseLevels: Map<Subject, Expertise Level>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<Day of the Week, Time Range>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: Expertise Level
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: String

### Attributes (Additional to the classes above):
- TutoringSession:
  - status: String
  - price: Double

- Tutor:
  - tutoringRequests: List of TutoringSession

- Student:
  - tutoringRequests: List of TutoringSession
  - creditCardInfo: String
  - wireTransferInfo: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. Expertise Level (primary school level, high school level, university level): Describes the level of expertise a tutor has in a subject.
3. Day of the Week (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Specifies the days of the week for availability.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(bankAccount: String, subjectsOffered: List of Subject, expertiseLevels: Map<Subject, Expertise Level>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<Day of the Week, Time Range>): Represents a tutor with specific subject offerings, expertise levels, pricing, and availability.
3. Student(name: String, email: String): Represents a student with a name and an email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: Expertise Level, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: String): Represents a tutoring session between a tutor and a student, including scheduling details and payment information."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:Level> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:Range> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:Expertise Level 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Day of the Week 
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. Person
    - Attributes: name, email
2. Tutor
    - Attributes: bankAccount
    - Associations: List<Subject> subjects, List<Availability> availabilities, List<TutoringSession> tutoringSessions
3. Student
    - Associations: List<TutoringSession> tutoringSessions
4. SubjectOffer
    - Attributes: subject, expertiseLevel, hourlyPrice
    - Associations: Tutor tutor
5. Availability
    - Attributes: dayOfWeek, startTime, endTime
    - Associations: Tutor tutor
6. TutoringSession
    - Attributes: targetDate, targetTime, status, paymentStatus
    - Associations: Tutor tutor, Student student
7. Payment
    - Attributes: amount, paymentMethod
    - Associations: TutoringSession tutoringSession

### Attributes:
- Person: name (String), email (String)
- Tutor: bankAccount (String)
- SubjectOffer: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- Availability: dayOfWeek (DayOfWeek), startTime (LocalTime), endTime (LocalTime)
- TutoringSession: targetDate (LocalDate), targetTime (LocalTime), status (String), paymentStatus (String)
- Payment: amount (double), paymentMethod (PaymentMethod)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide.
3. PaymentMethod(credit card, wire transfer): Represents different methods of payment.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor with a bank account for payment.
3. Student: Represents a student.
4. SubjectOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer for tutoring in a specific subject.
5. Availability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the availability of a tutor for tutoring sessions.
6. TutoringSession(targetDate: LocalDate, targetTime: LocalTime, status: String, paymentStatus: String): Represents a tutoring session with target date, time, and payment status.
7. Payment(amount: double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:targetDate 
   X  Attribute:targetTime 
   X  Attribute:status 
   X  Attribute:paymentStatus 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:SubjectOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - Others

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - creditCardInfo: String
     - tutoringRequests: List<TutoringRequest>

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: String

### Additional Notes:
- The `Person` class can be used as a base class for both `Tutor` and `Student`.
- The `Tutor` class contains information about the tutor's bank account, expertise in different subjects, hourly price for tutoring sessions, and weekly availability schedule.
- The `Student` class includes the credit card information and a list of tutoring requests made by the student.
- The `TutoringRequest` class represents a specific tutoring request made by a student to a tutor, specifying the subject, expertise level, and target date/time for the tutoring session.
- The `TutoringSession` class captures the details of an agreed tutoring session, including the tutor, student, date/time, follow-up scheduling, and payment method.

This class model provides a structured representation of the entities and their relationships in the Online Tutoring System described in the provided description."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, Others):Represent different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level):Captures the level of expertise a tutor can offer.

### Classes:
1. Person(name: String, email: String):Base class representing common attributes for both tutors and students.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>):Represents a tutor with specific attributes related to tutoring services.
3. Student(name: String, email: String, creditCardInfo: String, tutoringRequests: List<TutoringRequest>):Represents a student with attributes related to tutoring requests and payments.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime):Represents a tutoring request made by a student to a tutor.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: String):Represents a tutoring session with details of tutor, student, date/time, and payment method.

This structured format provides a clear overview of the enumerations and classes in the Online Tutoring System based on the given description."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
   X  Attribute:Others 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCardInfo 
   X  Attribute:tutoringRequests 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
2. ExpertiseLevel

### Classes:
1. User
2. Tutor
3. Student
4. TutoringOffer
5. TutoringRequest
6. TutoringSession

### Attributes:
1. User
   - name: String
   - email: String

2. Tutor
   - bankAccount: String
   - tutoringSubjects: List<Subject>
   - expertiseLevels: Map<Subject, ExpertiseLevel>
   - hourlyPrices: Map<Subject, Double>
   - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - name: String
   - email: String

4. TutoringOffer
   - tutor: Tutor
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - hourlyPrice: Double

5. TutoringRequest
   - student: Student
   - tutor: Tutor
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - targetDateTime: LocalDateTime

6. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - dateTime: LocalDateTime
   - followUpScheduled: Boolean
   - paymentMethod: String
   - sessionPrice: Double
   - isCancelled: Boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(MATHEMATICS, SCIENCE, LITERATURE): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(PRIMARY_SCHOOL_LEVEL, HIGH_SCHOOL_LEVEL, UNIVERSITY_LEVEL): Represents the level of expertise a tutor can provide in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(bankAccount: String, tutoringSubjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrices: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes related to tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents a tutoring offer made by a tutor for a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor for a specific subject.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpScheduled: Boolean, paymentMethod: String, sessionPrice: Double, isCancelled: Boolean): Represents a tutoring session with relevant details and status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:MATHEMATICS 
   X  Attribute:SCIENCE 
   X  Attribute:LITERATURE 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrices 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
   X  Attribute:sessionPrice 
   X  Attribute:isCancelled 
 X  Class:ExpertiseLevel
   X  Attribute:PRIMARY_SCHOOL_LEVEL 
   X  Attribute:HIGH_SCHOOL_LEVEL 
   X  Attribute:UNIVERSITY_LEVEL 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - Others

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<SubjectExpertise>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>
   - Methods:
     - offerTutoring(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double)
     - specifyAvailability(day: DayOfWeek, startTime: LocalTime, endTime: LocalTime)

3. Student
   - Attributes:
     - creditCardInfo: CreditCard
   - Methods:
     - browseTutoringOffers(subject: Subject)
     - makeTutoringRequest(tutor: Tutor, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime)
     - payForSession(session: TutoringSession)

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - isConfirmed: boolean
   - Methods:
     - confirmSession()
     - rescheduleSession(newDateTime: LocalDateTime)
     - cancelSession(canceller: Person)

5. CreditCard
   - Attributes:
     - cardNumber: String
     - expiryDate: LocalDate
     - cvv: String

6. WeeklyAvailability
   - Attributes:
     - day: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

### Attributes (Additional to those mentioned in classes):
- SubjectExpertise
  - subject: Subject
  - expertiseLevel: ExpertiseLevel

- DayOfWeek
  - MONDAY
  - TUESDAY
  - WEDNESDAY
  - THURSDAY
  - FRIDAY
  - SATURDAY
  - SUNDAY

- LocalTime
  - hour: int
  - minute: int

- LocalDateTime
  - date: LocalDate
  - time: LocalTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, Others):Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level):Denotes the expertise levels in a subject for tutors.

Classes:
1. Person(name: String, email: String):Represents a generic person with name and email attributes.
2. Tutor(bankAccount: String, subjectsOffered: List<SubjectExpertise>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>):Models a tutor with bank account details, subjects offered, hourly prices, and weekly availability.
3. Student(creditCardInfo: CreditCard):Represents a student with credit card information for payments.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, scheduledDateTime: LocalDateTime, isConfirmed: boolean):Represents a tutoring session between a tutor and a student with details like subject, expertise level, and scheduled date/time.
5. CreditCard(cardNumber: String, expiryDate: LocalDate, cvv: String):Models credit card details for payment processing.
6. WeeklyAvailability(day: DayOfWeek, startTime: LocalTime, endTime: LocalTime):Represents the weekly availability of a tutor for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
   X  Attribute:Others 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCardInfo 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:scheduledDateTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:CreditCard
   X  Attribute:cardNumber 
   X  Attribute:expiryDate 
   X  Attribute:cvv 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:day 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: Double
     - weeklyAvailability: String
   - Methods:
     - offerTutoring(subject: Subject): void
     - confirmTutoringRequest(request: TutoringRequest): void
     - scheduleFollowUpSession(): void
     - cancelTutoringSession(): void

3. Student
   - Attributes:
     - creditCardInfo: String
   - Methods:
     - browseTutoringOffers(subject: Subject): void
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, dateTime: Date): void
     - payForSession(amount: Double): void
     - cancelTutoringSession(): void

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: Date

## Attributes:
- TutoringSession
  - tutor: Tutor
  - student: Student
  - dateTime: Date
  - isConfirmed: boolean
  - isCancelled: boolean

- CancellationPolicy
  - studentCancellationPenalty: Double
  - tutorCancellationDiscount: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the expertise levels of tutors in a subject.

Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: String): Represents a tutor with bank account, expertise level, hourly price, and weekly availability for tutoring.
3. Student(creditCardInfo: String): Represents a student with credit card information.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, dateTime: Date): Represents a tutoring request made by a student to a tutor."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCardInfo 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
