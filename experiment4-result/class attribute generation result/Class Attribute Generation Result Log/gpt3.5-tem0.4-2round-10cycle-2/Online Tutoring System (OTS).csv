------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (Mathematics, Science, Literature, etc.)
2. LevelOfExpertise (Primary School Level, High School Level, University Level)
3. PaymentMethod (Credit Card, Wire Transfer)

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - tutoringSubjects: List<Subject>
     - expertiseLevels: Map<Subject, LevelOfExpertise>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends Person

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - followUpSessionScheduled: boolean

## Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - tutoringSubjects: List<Subject>
  - expertiseLevels: Map<Subject, LevelOfExpertise>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - Inherits attributes from Person

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - levelOfTutoring: LevelOfExpertise
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateTime: LocalDateTime
  - followUpSessionScheduled: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. LevelOfExpertise (Primary School Level, High School Level, University Level): Represents the expertise levels in a subject.
3. PaymentMethod (Credit Card, Wire Transfer): Represents the methods of payment for tutoring sessions.

Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor extends Person(bankAccount: String, tutoringSubjects: List<Subject>, expertiseLevels: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional attributes related to tutoring.
3. Student extends Person: Represents a student inheriting attributes from Person.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, levelOfTutoring: LevelOfExpertise, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpSessionScheduled: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
 X  Class:LevelOfExpertise 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod 
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevels 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 X  Class:Student extends Person
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of Subject, List of ExpertiseLevel, hourlyPrice, weeklyAvailability

3. Student
   - Attributes: name, email
   - Associations: List of Tutor

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: Tutor

5. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: Tutor, Student

6. TutoringSession
   - Attributes: dateTime, isConfirmed
   - Associations: Tutor, Student

7. Payment
   - Attributes: amount, paymentMethod
   - Associations: TutoringSession

### Attributes:
- User: name (String), email (String)
- Tutor: name (String), email (String), bankAccount (String), hourlyPrice (double), weeklyAvailability (List of String)
- Student: name (String), email (String)
- TutoringOffer: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- TutoringRequest: subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: dateTime (DateTime), isConfirmed (boolean)
- Payment: amount (double), paymentMethod (PaymentMethod)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject for tutors.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: double, weeklyAvailability: List<String>): Represents a tutor with additional attributes for offering tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email for registration.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring services.
5. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student for tutoring services.
6. TutoringSession(dateTime: DateTime, isConfirmed: boolean): Represents a tutoring session with date and confirmation status.
7. Payment(amount: double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrices: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

3. Student
   - Attributes:
     - creditCardInfo: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime
     - status: SessionStatus

### Attributes:
1. Tutor
   - name: String
   - email: String

2. Tutor
   - bankAccount: String

3. Tutor
   - subjectsOffered: List<Subject>

4. Tutor
   - expertiseLevels: Map<Subject, ExpertiseLevel>

5. Tutor
   - hourlyPrices: Map<Subject, Double>

6. Tutor
   - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

7. Student
   - name: String
   - email: String

8. Student
   - creditCardInfo: String

9. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - level: ExpertiseLevel
   - dateTime: LocalDateTime
   - status: SessionStatus

10. TutoringSession
    - status: SessionStatus

11. TutoringSession
    - dateTime: LocalDateTime

12. TutoringSession
    - level: ExpertiseLevel

13. TutoringSession
    - subject: Subject

14. TutoringSession
    - student: Student

15. TutoringSession
    - tutor: Tutor

16. TutoringSession
    - SessionStatus: Enum {SCHEDULED, CONFIRMED, CANCELLED}

17. TutoringSession
    - TimeSlot: Class {startTime: LocalTime, endTime: LocalTime}"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects available for tutoring.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Indicates the level of expertise a tutor has in a specific subject.
3. DayOfWeek (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for scheduling tutoring sessions.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrices: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with details such as bank account, subjects offered, expertise levels, hourly prices, and weekly availability.
3. Student(creditCardInfo: String, name: String, email: String): Represents a student with credit card information, name, and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime, status: SessionStatus): Represents a tutoring session with details of the tutor, student, subject, expertise level, date and time, and status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrices 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCardInfo 
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:status 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:DayOfWeek 
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: List of SubjectExpertise, List of Availability

3. Student
   - Associations: List of TutorRequest

4. SubjectExpertise
   - Attributes: subject, expertiseLevel, hourlyPrice

5. Availability
   - Attributes: dayOfWeek, startTime, endTime

6. TutorRequest
   - Attributes: levelOfTutoring, targetDateTime
   - Associations: Tutor

7. TutoringSession
   - Attributes: actualDateTime, paymentMethod
   - Associations: Tutor, Student

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- SubjectExpertise
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- Availability
  - dayOfWeek: String
  - startTime: Time
  - endTime: Time

- TutorRequest
  - levelOfTutoring: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - actualDateTime: DateTime
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.

Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor with a bank account and associations to SubjectExpertise and Availability.
3. Student: Represents a student with associations to TutorRequest.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents the expertise of a tutor in a subject.
5. Availability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the availability of a tutor for tutoring sessions.
6. TutorRequest(levelOfTutoring: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request from a student to a tutor.
7. TutoringSession(actualDateTime: DateTime, paymentMethod: String): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:actualDateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:TutorRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (TutoringOffer), availability (WeeklyAvailability)

3. Student
   - Associations: requests (TutoringRequest), payments (Payment)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: day, startTime, endTime
   - Associations: tutor (Tutor)

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student (Student), tutor (Tutor)

7. Payment
   - Attributes: paymentMethod
   - Associations: student (Student)

### Attributes:
- User
  - name: string
  - email: string

- Tutor
  - bankAccount: string

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: decimal

- WeeklyAvailability
  - day: string
  - startTime: time
  - endTime: time

- TutoringRequest
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: datetime

- Payment
  - paymentMethod: string"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. User(name: string, email: string): Represents a generic user with a name and email address.
2. Tutor(bankAccount: string): Represents a tutor with a bank account for payments and associations with tutoring offers and availability.
3. Student: Represents a student with associations to tutoring requests and payments.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: decimal): Represents an offer made by a tutor for tutoring sessions.
5. WeeklyAvailability(day: string, startTime: time, endTime: time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: datetime): Represents a request made by a student to a tutor for a tutoring session.
7. Payment(paymentMethod: string): Represents a payment made by a student for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:day 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Relationships:
     - Inherits from Person
     - Offers tutoring sessions in multiple subjects
     - Specifies hourly price for tutoring sessions
     - Specifies weekly availability for tutoring sessions

3. Student
   - Relationships:
     - Inherits from Person
     - Makes tutoring requests to tutors
     - Pays for tutoring sessions

4. TutoringSession
   - Attributes:
     - date: Date
     - time: Time
     - price: Double
   - Relationships:
     - Involves a tutor and a student
     - May have follow-up sessions

### Attributes (Additional to those mentioned in classes):
- Tutor
  - expertise: Map<Subject, ExpertiseLevel>
- Student
  - creditCardInfo: String
  - wireTransferInfo: String
- TutoringSession
  - status: Enum {Scheduled, Confirmed, Completed, Cancelled}
- TutoringRequest
  - subject: Subject
  - level: ExpertiseLevel
  - targetDate: Date
  - targetTime: Time

This class model captures the essential entities and their relationships as described in the given description of the Online Tutoring System (OTS)."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects for tutoring sessions.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Double, weeklyAvailability: List<Availability>): Represents a tutor who offers tutoring sessions in specific subjects with expertise levels and sets hourly prices and availability.
3. Student(creditCardInfo: String, wireTransferInfo: String): Represents a student who can make tutoring requests and payments.
4. TutoringSession(date: Date, time: Time, price: Double, status: Enum): Represents a tutoring session with date, time, price, and status.
5. TutoringRequest(subject: Subject, level: ExpertiseLevel, targetDate: Date, targetTime: Time): Represents a request made by a student to a tutor for a tutoring session.

This class model defines the key classes and enumerations for the Online Tutoring System based on the provided description."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCardInfo 
   X  Attribute:wireTransferInfo 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
   X  Attribute:status 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - tutor: Tutor

5. TutoringRequest
   - Attributes:
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: DateTime
     - tutor: Tutor
     - student: Student

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: DateTime
     - followUpScheduled: boolean
     - paymentMethod: String

### Attributes (Additional):
- TutoringSession
  - cancelledByStudent: boolean
  - cancelledByTutor: boolean
  - sessionPrice: double

- Tutor
  - name: String
  - email: String

- Student
  - name: String
  - email: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents a tutor with bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, expertise: ExpertiseLevel, hourlyPrice: double, tutor: Tutor): Represents a tutoring offer with subject, expertise level, hourly price, and associated tutor.
5. TutoringRequest(subject: Subject, level: ExpertiseLevel, targetDateTime: DateTime, tutor: Tutor, student: Student): Represents a tutoring request with subject, expertise level, target date/time, tutor, and student.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: DateTime, followUpScheduled: boolean, paymentMethod: String): Represents a tutoring session with tutor, student, date/time, follow-up status, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertise 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
   X  Attribute:tutor 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
   X  Attribute:tutor 
   X  Attribute:student 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double, availability: Map<DayOfWeek, List<LocalTime>)

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - price: Double
     - paymentMethod: PaymentMethod
   - Methods:
     - confirmSession()
     - rescheduleSession(newDateTime: LocalDateTime)
     - cancelSession(canceller: Person)

5. PaymentMethod
   - Enumerations:
     - CREDIT_CARD
     - WIRE_TRANSFER

## Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>

- Student:
  - name: String
  - email: String

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - price: Double
  - paymentMethod: PaymentMethod"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific subjects, expertise levels, hourly prices, and availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, price: Double, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student with session details and payment method.
5. PaymentMethod: Represents the payment methods available for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:price 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:PaymentMethod
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: LevelOfExpertise
     - hourlyPrice: double
     - availability: String (e.g. Thursdays from 10:00 to 11:30)

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - tutor: Tutor

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: Date

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: Date
     - isConfirmed: boolean
     - isPaid: boolean

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - expertise: LevelOfExpertise
  - hourlyPrice: double
  - availability: String

- Student
  - name: String
  - email: String

- TutoringOffer
  - subject: Subject
  - tutor: Tutor

- TutoringRequest
  - student: Student
  - tutor: Tutor
  - levelOfTutoring: LevelOfExpertise
  - targetDateTime: Date

- TutoringSession
  - tutor: Tutor
  - student: Student
  - dateTime: Date
  - isConfirmed: boolean
  - isPaid: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. LevelOfExpertise (Primary School Level, High School Level, University Level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: LevelOfExpertise, hourlyPrice: double, availability: String): Represents a tutor with bank account, expertise level, hourly price, and availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, tutor: Tutor): Represents an offer for tutoring in a specific subject by a tutor.
5. TutoringRequest(student: Student, tutor: Tutor, levelOfTutoring: LevelOfExpertise, targetDateTime: Date): Represents a request for tutoring made by a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: Date, isConfirmed: boolean, isPaid: boolean): Represents a tutoring session with tutor, student, date/time, confirmation status, and payment status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:tutor 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isPaid 
 X  Class:LevelOfExpertise 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
2. LevelOfExpertise

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, LevelOfExpertise>
     - hourlyPrice: Map<Subject, Double>
     - availability: List<String> (e.g. ""Thursdays from 10:00 to 11:30"")

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: Date

6. TutoringSession
   - Attributes:
     - student: Student
     - tutor: Tutor
     - dateTime: Date
     - followUpScheduled: boolean
     - paymentMethod: String

### Attributes not associated with a specific class:
- Payment
- CancellationReason"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject: [Represents the different subjects for tutoring offers]
2. LevelOfExpertise: [Represents the levels of expertise for tutoring sessions]

Classes:
1. User(name: String, email: String): [Represents a generic user with a name and email address]
2. Tutor(bankAccount: String, expertise: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, availability: List<String>): [Represents a tutor with bank account, expertise in subjects, hourly prices, and availability schedule]
3. Student(name: String, email: String): [Represents a student with a name and email address]
4. TutoringOffer(tutor: Tutor, subject: Subject): [Represents a tutoring offer made by a tutor for a specific subject]
5. TutoringRequest(student: Student, tutor: Tutor, levelOfTutoring: LevelOfExpertise, targetDateTime: Date): [Represents a tutoring request made by a student to a tutor]
6. TutoringSession(student: Student, tutor: Tutor, dateTime: Date, followUpScheduled: boolean, paymentMethod: String): [Represents a tutoring session with student, tutor, date and time, follow-up status, and payment method]"
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise
