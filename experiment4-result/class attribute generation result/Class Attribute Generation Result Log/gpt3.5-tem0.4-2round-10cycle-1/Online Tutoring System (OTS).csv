------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.)
2. ExpertiseLevel (primary school level, high school level, university level)
3. DayOfWeek (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Relationships: offers tutoring sessions, has weekly availability

3. Student
   - Relationships: makes tutoring requests, pays for sessions

4. TutoringSession
   - Attributes: hourlyPrice, specificSubject, specificTime, isConfirmed
   - Relationships: involves tutor, involves student

### Attributes:
1. Tutor
   - name
   - email
   - bankAccount

2. Student
   - name
   - email

3. TutoringSession
   - hourlyPrice
   - specificSubject
   - specificTime
   - isConfirmed"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature, etc.): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor has in a specific subject.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability scheduling.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional attributes for bank account details.
3. Student(name: String, email: String): Represents a student with basic attributes.
4. TutoringSession(hourlyPrice: Double, specificSubject: Subject, specificTime: DateTime, isConfirmed: Boolean): Represents a tutoring session with details like price, subject, time, and confirmation status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:hourlyPrice 
   X  Attribute:specificSubject 
   X  Attribute:specificTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - paymentMethod: PaymentMethod

### Additional Considerations:
- The User class can be an abstract class with common attributes for both tutors and students.
- The Tutor class can extend the User class, inheriting the name and email attributes.
- The TutoringSession class may include attributes for tracking the session status (confirmed, cancelled, completed) and payment status.
- The handling of cancellations and associated penalties can be implemented as methods within the TutoringSession class."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.
3. PaymentMethod (credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with basic information like name and email.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional details like expertise, hourly prices, and availability.
3. Student(name: String, email: String): Represents a student with basic information like name and email.
4. TutoringOffer(tutor: Tutor, subject: Subject): Represents an offer made by a tutor for a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request made by a student to a tutor for tutoring.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, paymentMethod: PaymentMethod): Represents a tutoring session with details like participants, subject, date, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bank account, subjectsOffered, hourlyPrice, weeklyAvailability

3. Student
   - Attributes: name, email

4. TutoringSession
   - Attributes: tutor, student, subject, level, date, time, status

### Attributes:
1. Tutor
   - subjectsOffered: List<Subject>
   - hourlyPrice: Map<Subject, Double>
   - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

2. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - level: ExpertiseLevel
   - date: LocalDate
   - time: LocalTime
   - status: SessionStatus

3. SessionStatus
   - confirmed
   - pending
   - cancelledByStudent
   - cancelledByTutor

4. Payment
   - amount
   - method: PaymentMethod

5. CancellationPolicy
   - studentCancellationPenalty: Double
   - tutorCancellationDiscount: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address for both tutors and students.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<Subject>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>): Represents a tutor with additional attributes for offering tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address for browsing and requesting tutoring sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, date: LocalDate, time: LocalTime, status: SessionStatus): Represents a tutoring session between a tutor and a student with details like subject, level, date, and time.
5. Payment(amount: Double, method: PaymentMethod): Represents a payment made for a tutoring session.
6. CancellationPolicy(studentCancellationPenalty: Double, tutorCancellationDiscount: Double): Represents the policy for cancellation penalties and discounts for students and tutors."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot>> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:method 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:CancellationPolicy
   X  Attribute:studentCancellationPenalty 
   X  Attribute:tutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - name: String
     - email: String
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<String> (e.g. ""Thursdays from 10:00 to 11:30"")
     - tutoringSessions: List<TutoringSession>

3. Student
   - Attributes:
     - name: String
     - email: String
     - tutoringRequests: List<TutoringRequest>
     - creditCardInfo: String
     - wireTransferInfo: String

4. TutoringRequest
   - Attributes:
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime
     - status: RequestStatus

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: LocalDateTime
     - followUpSession: boolean

### Attributes:
- RequestStatus: Enum {PENDING, CONFIRMED, CANCELLED}
- PaymentMethod: Enum {CREDIT_CARD, WIRE_TRANSFER}"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with basic information like name and email.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<String>, tutoringSessions: List<TutoringSession): Represents a tutor with detailed information including expertise, pricing, availability, and tutoring sessions.
3. Student(name: String, email: String, tutoringRequests: List<TutoringRequest>, creditCardInfo: String, wireTransferInfo: String): Represents a student with information on tutoring requests and payment methods.
4. TutoringRequest(subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime, status: RequestStatus): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: LocalDateTime, followUpSession: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
   X  Attribute:creditCardInfo 
   X  Attribute:wireTransferInfo 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
   X  Attribute:status 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpSession 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

## Classes:
1. User
   - Attributes:
     - name: string
     - email: string

2. Tutor extends User
   - Attributes:
     - bankAccount: string
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

3. Student extends User

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateAndTime: LocalDateTime
     - isConfirmed: boolean

## Attributes:
- User:
  - name: string
  - email: string

- Tutor:
  - bankAccount: string
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, double>
  - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

- Student:
  - None

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateAndTime: LocalDateTime
  - isConfirmed: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the expertise levels of tutors in specific subjects.

Classes:
1. User(name: string, email: string): Represents a general user with a name and email address.
2. Tutor extends User(bankAccount: string, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with additional attributes for tutoring services.
3. Student extends User: Represents a student user inheriting attributes from the User class.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateAndTime: LocalDateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateAndTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Tutor extends User
   X  Attribute:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 X  Class:Student extends User
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount, availability
   - Associations: tutoringOffers

3. Student
   - Associations: tutoringRequests

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor

5. TutoringRequest
   - Attributes: levelOfTutoring, targetDateTime
   - Associations: tutor, student

6. TutoringSession
   - Attributes: dateTime
   - Associations: tutor, student

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - availability: List<Availability>

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- TutoringRequest
  - levelOfTutoring: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - dateTime: DateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the expertise levels in a subject.
3. PaymentMethod(credit card, wire transfer): Represents the available payment methods for tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String, availability: List<Availability>): Represents a tutor with a bank account and weekly availability for tutoring sessions.
3. Student: Represents a student who can browse and request tutoring sessions.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer for tutoring in a specific subject with expertise level and hourly price.
5. TutoringRequest(levelOfTutoring: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(dateTime: DateTime): Represents a tutoring session with a specific date and time."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. Weekday (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Relationships: offers (list of TutoringOffer), availability (list of WeeklyAvailability)

3. Student
   - Attributes: name, email
   - Relationships: tutoringRequests (list of TutoringRequest)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Relationships: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: weekday, startTime, endTime
   - Relationships: tutor (Tutor)

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Relationships: student (Student), tutor (Tutor), tutoringSession (TutoringSession)

7. TutoringSession
   - Attributes: dateTime, status, paymentMethod
   - Relationships: tutor (Tutor), student (Student)

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- WeeklyAvailability
  - weekday: Weekday
  - startTime: LocalDateTime
  - endTime: LocalDateTime

- TutoringRequest
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession
  - dateTime: LocalDateTime
  - status: String
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects available for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the expertise levels at which tutors can offer tutoring.
3. Weekday(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for specifying weekly availability.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information for payment.
3. Student(name: String, email: String): Represents a student with a name and email.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor with subject, expertise level, and hourly price.
5. WeeklyAvailability(weekday: Weekday, startTime: LocalDateTime, endTime: LocalDateTime): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request made by a student to a tutor for tutoring.
7. TutoringSession(dateTime: LocalDateTime, status: String, paymentMethod: String): Represents a tutoring session with date, status, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:status 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Weekday
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:weekday 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>

3. Student extends Person

4. WeeklyAvailability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

5. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

6. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

7. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - followUpSessionScheduled: boolean
     - paymentMethod: PaymentMethod

8. PaymentMethod
   - Attributes:
     - creditCard: CreditCard
     - wireTransfer: WireTransfer

9. CreditCard
   - Attributes:
     - cardNumber: String
     - expirationDate: LocalDate

10. WireTransfer
    - Attributes:
      - bankAccount: String

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: List<WeeklyAvailability>

- Student:
  - Inherits attributes from Person

- WeeklyAvailability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime

- TutoringOffer:
  - tutor: Tutor
  - subject: Subject

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateTime: LocalDateTime
  - followUpSessionScheduled: boolean
  - paymentMethod: PaymentMethod

- PaymentMethod:
  - creditCard: CreditCard
  - wireTransfer: WireTransfer

- CreditCard:
  - cardNumber: String
  - expirationDate: LocalDate

- WireTransfer:
  - bankAccount: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with bank account details, expertise in subjects, hourly prices, and weekly availability.
3. Student(name: String, email: String): Represents a student inheriting attributes from Person.
4. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions.
5. TutoringOffer(tutor: Tutor, subject: Subject): Represents an offer made by a tutor for tutoring a specific subject.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor for a specific subject and level at a target date and time.
7. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpSessionScheduled: boolean, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student with details like date, time, and payment method.
8. PaymentMethod(creditCard: CreditCard, wireTransfer: WireTransfer): Represents the payment methods available for a tutoring session.
9. CreditCard(cardNumber: String, expirationDate: LocalDate): Represents a credit card with a card number and expiration date.
10. WireTransfer(bankAccount: String): Represents a wire transfer payment method with a bank account number."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
 X  Class:CreditCard
   X  Attribute:cardNumber 
   X  Attribute:expirationDate 
 X  Class:WireTransfer
   X  Attribute:bankAccount 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)
3. Day of the week (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - Name
     - Email address

2. Tutor
   - Inherits from Person
   - Attributes:
     - Bank account
     - List of subjects they offer tutoring in
     - List of expertise levels for each subject
     - List of hourly prices for each subject
     - Weekly availability schedule

3. Student
   - Inherits from Person
   - Attributes:
     - List of tutoring requests
     - List of completed tutoring sessions
     - List of payment transactions

4. TutoringSession
   - Attributes:
     - Tutor
     - Student
     - Subject
     - Level of tutoring
     - Date and time
     - Status (requested, confirmed, cancelled)
     - Payment status

### Attributes:
1. Tutor
   - Name
   - Email address
   - Bank account
   - List of subjects they offer tutoring in
   - List of expertise levels for each subject
   - List of hourly prices for each subject
   - Weekly availability schedule

2. Student
   - Name
   - Email address
   - List of tutoring requests
   - List of completed tutoring sessions
   - List of payment transactions

3. TutoringSession
   - Tutor
   - Student
   - Subject
   - Level of tutoring
   - Date and time
   - Status
   - Payment status"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects in which tutoring can be offered.
2. LevelOfExpertise(primary school level, high school level, university level): Represents the expertise levels at which tutoring can be offered.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for scheduling tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(name: String, email: String, bankAccount: String, subjects: List<Subject>, expertiseLevels: List<LevelOfExpertise>, hourlyPrices: List<Double>, availabilitySchedule: List<DayOfWeek>): Represents a tutor with specific attributes for offering tutoring services.
3. Student(name: String, email: String, tutoringRequests: List<TutoringSession>, completedSessions: List<TutoringSession>, paymentTransactions: List<Transaction>): Represents a student with attributes related to tutoring requests, completed sessions, and payment transactions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: LevelOfExpertise, dateTime: DateTime, status: String, paymentStatus: String): Represents a tutoring session between a tutor and a student with relevant details and statuses."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPrices 
   X  Attribute:availabilitySchedule 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
   X  Attribute:completedSessions 
   X  Attribute:paymentTransactions 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateTime 
   X  Attribute:status 
   X  Attribute:paymentStatus 
 X  Class:LevelOfExpertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. PaymentMethod (e.g. Credit Card, Wire Transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: offers (List of TutoringOffer), weeklyAvailability

3. Student
   - Attributes: name, email
   - Associations: tutoringRequests (List of TutoringRequest)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor, weeklyAvailability

5. WeeklyAvailability
   - Attributes: day, startTime, endTime
   - Associations: tutor

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student, tutor, tutoringSession

7. TutoringSession
   - Attributes: dateTime, status, paymentStatus
   - Associations: tutor, student

### Attributes:
- User: name (String), email (String)
- Tutor: bankAccount (String)
- TutoringOffer: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- WeeklyAvailability: day (String), startTime (Time), endTime (Time)
- TutoringRequest: subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: dateTime (DateTime), status (String), paymentStatus (String)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.
3. PaymentMethod(Credit Card, Wire Transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with name, email, and bank account details for offering tutoring services.
3. Student(name: String, email: String): Represents a student with name and email for browsing and requesting tutoring sessions.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring in a specific subject.
5. WeeklyAvailability(day: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(dateTime: DateTime, status: String, paymentStatus: String): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:status 
   X  Attribute:paymentStatus 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:day 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
