------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. PaymentMethod (e.g. Credit Card, Wire Transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor extends User
   - Attributes: bankAccount
   
3. Student extends User

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice, weeklyAvailability

5. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime

6. TutoringSession
   - Attributes: actualDateTime, isConfirmed

7. Payment
   - Attributes: paymentMethod, amount

### Associations:
1. Tutor has TutoringOffer
2. Tutor has TutoringSession
3. Student has TutoringRequest
4. TutoringSession has TutoringRequest
5. TutoringSession has Payment"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise a tutor can have in a subject.
3. PaymentMethod(Credit Card, Wire Transfer): Represents the different payment methods available for transactions.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor extends User(bankAccount: String): Represents a tutor who provides tutoring services and has a bank account for payments.
3. Student extends User: Represents a student who can browse and request tutoring services.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: String): Represents an offer made by a tutor for tutoring services.
5. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student for tutoring services from a tutor.
6. TutoringSession(actualDateTime: DateTime, isConfirmed: Boolean): Represents a tutoring session between a tutor and a student.
7. Payment(paymentMethod: PaymentMethod, amount: Double): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:actualDateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:Tutor extends User  Oracle:Tutor 
   O  Attribute:bankAccount  Oracle:bankAccount 
 X  Class:Student extends User
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)
3. Day of the week (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. User
   - Attributes: name, email address

2. Tutor
   - Attributes: name, email address, bank account, hourly price
   - Associations: offers tutoring in Subject, has Level of expertise, specifies weekly availability

3. Student
   - Attributes: name, email address
   - Associations: makes tutoring request, pays for session with credit card or wire transfer

4. TutoringSession
   - Attributes: date, time, subject, level of tutoring
   - Associations: involves Tutor, involves Student

### Attributes:
1. Tutor
   - name (String)
   - email address (String)
   - bank account (String)
   - hourly price (double)

2. Student
   - name (String)
   - email address (String)

3. TutoringSession
   - date (Date)
   - time (Time)
   - subject (Subject)
   - level of tutoring (Level of expertise)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. Level of expertise (primary school level, high school level, university level): Indicates the level of expertise a tutor has in a subject.
3. Day of the week (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Used for specifying weekly availability.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address for both tutors and students.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: double): Represents a tutor with specific attributes like bank account and hourly price for tutoring sessions.
3. Student(name: String, email: String): Represents a student with basic information like name and email address.
4. TutoringSession(date: Date, time: Time, subject: Subject, levelOfTutoring: Level of expertise): Represents a tutoring session with details such as date, time, subject, and level of tutoring."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
 X  Class:Level of expertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Day of the week 
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: 
     - Aggregates Subject
     - Aggregates ExpertiseLevel
     - Aggregates Availability
   
3. Student
   - Associations: 
     - Aggregates Tutor

4. TutoringOffer
   - Attributes: hourlyPrice
   - Associations: 
     - Aggregates Subject
     - Aggregates ExpertiseLevel

5. TutoringSession
   - Attributes: date, time
   - Associations: 
     - Aggregates Tutor
     - Aggregates Student
     - Aggregates TutoringOffer

6. Payment
   - Attributes: paymentMethod, amount

### Attributes:
- Person: name (String), email (String)
- Tutor: bankAccount (String)
- TutoringOffer: hourlyPrice (double)
- TutoringSession: date (Date), time (Time)
- Payment: paymentMethod (String), amount (double)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise a tutor can provide.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability scheduling.

### Classes:
1. Person(name: String, email: String): Represents a person with name and email attributes.
2. Tutor(bankAccount: String): Represents a tutor with a bank account attribute.
3. Student: Represents a student.
4. TutoringOffer(hourlyPrice: double): Represents a tutoring offer with hourly price attribute.
5. TutoringSession(date: Date, time: Time): Represents a tutoring session with date and time attributes.
6. Payment(paymentMethod: String, amount: double): Represents a payment with payment method and amount attributes."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)
3. PaymentMethod (e.g. Credit Card, Wire Transfer)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - tutoringSubjects: List<SubjectExpertise>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>

3. Student extends Person

4. SubjectExpertise
   - Attributes:
     - subject: Subject
     - levelOfExpertise: LevelOfExpertise

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - paymentMethod: PaymentMethod

7. CancellationPolicy

8. WeeklyAvailability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

### Note:
- The above class model is a high-level representation based on the provided description. Additional methods and relationships may be needed for a comprehensive implementation."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. LevelOfExpertise(Primary School Level, High School Level, University Level): Represents the expertise levels in a subject.
3. PaymentMethod(Credit Card, Wire Transfer): Represents the different methods of payment.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, tutoringSubjects: List<SubjectExpertise>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with specific attributes for tutoring.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, levelOfExpertise: LevelOfExpertise): Represents the expertise of a tutor in a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, levelOfTutoring: LevelOfExpertise, targetDateTime: LocalDateTime): Represents a request for tutoring from a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student.
7. CancellationPolicy: Represents the policy for canceling tutoring sessions.
8. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:levelOfExpertise 
 X  Class:CancellationPolicy
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount, hourlyPrice
   - Associations: 
     - Specialization: List of Subject-ExpertiseLevel pairs
     - Availability: List of weekly slots

3. Student
   - Attributes: creditCard, wireTransfer
   - Associations:
     - TutoringRequest: List of requested tutoring sessions

4. TutoringSession
   - Attributes: date, time
   - Associations:
     - Tutor: designated tutor
     - Student: requesting student

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - hourlyPrice: double

- Student
  - creditCard: String
  - wireTransfer: String

- TutoringSession
  - date: Date
  - time: Time"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a general person with a name and email address.
2. Tutor(bankAccount: String, hourlyPrice: double): Represents a tutor with additional attributes like bank account and hourly price.
3. Student(creditCard: String, wireTransfer: String): Represents a student with payment methods for tutoring sessions.
4. TutoringSession(date: Date, time: Time): Represents a tutoring session with date and time attributes."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCard 
   X  Attribute:wireTransfer 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:Enumerations:
1. Subject {mathematics, science, literature, etc.}
2. ExpertiseLevel {primary school level, high school level, university level}

Classes:
1. User
   - Attributes: name, email
   
2. Tutor extends User
   - Attributes: bankAccount
   - Relationships: offers tutoring sessions
   
3. Student extends User

4. TutoringSession
   - Attributes: subject, expertiseLevel, hourlyPrice, weeklyAvailability, targetDate, targetTime, actualDate, actualTime, isConfirmed, isCancelled
   - Relationships: tutor, student
   
5. Payment
   - Attributes: paymentMethod, amount
   - Relationships: student, tutor, tutoringSession

6. SessionCancellation
   - Attributes: cancellationReason
   - Relationships: student, tutor, tutoringSession

Attributes:
- User: name, email
- Tutor: bankAccount
- TutoringSession: subject, expertiseLevel, hourlyPrice, weeklyAvailability, targetDate, targetTime, actualDate, actualTime, isConfirmed, isCancelled
- Payment: paymentMethod, amount
- SessionCancellation: cancellationReason"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject {mathematics, science, literature, etc.}: Represents the different subjects available for tutoring.
2. ExpertiseLevel {primary school level, high school level, university level}: Represents the level of expertise a tutor can offer in a subject.

Classes:
1. User(name: String, email: String): Represents a user with basic attributes like name and email.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor who can provide tutoring sessions and has additional attribute bankAccount.
3. Student(name: String, email: String): Represents a student who can browse and request tutoring sessions.
4. TutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String, targetDate: Date, targetTime: Time, actualDate: Date, actualTime: Time, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session with various attributes related to scheduling and confirmation.
5. Payment(paymentMethod: String, amount: double): Represents a payment made for a tutoring session.
6. SessionCancellation(cancellationReason: String): Represents a cancellation of a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
   X  Attribute:actualDate 
   X  Attribute:actualTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:SessionCancellation
   X  Attribute:cancellationReason 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)

**Classes:**
1. Person
   - Attributes: name, email address

2. Tutor
   - Attributes: bank account, hourly price
   - Relationships: 
     - Offers tutoring sessions
     - Specifies weekly availability
     - Accepts tutoring requests
     - Confirms tutoring sessions
     - Cancels tutoring sessions

3. Student
   - Relationships:
     - Makes tutoring requests
     - Attends tutoring sessions
     - Pays for tutoring sessions
     - Cancels tutoring sessions

4. TutoringSession
   - Attributes: date, time
   - Relationships:
     - Involves a tutor
     - Involves a student
     - May have follow-up sessions

5. Payment
   - Attributes: payment method
   - Relationships:
     - Associated with a tutoring session

6. Availability
   - Attributes: day, start time, end time
   - Relationships:
     - Belongs to a tutor

7. CancellationPolicy
   - Attributes: cancellation window, penalty
   - Relationships:
     - Applies to tutoring sessions

**Attributes:**
- Tutor:
  - Name
  - Email address
  - Bank account
  - Hourly price
  
- Student:
  - Name
  - Email address

- TutoringSession:
  - Date
  - Time

- Payment:
  - Payment method

- Availability:
  - Day
  - Start time
  - End time

- CancellationPolicy:
  - Cancellation window
  - Penalty"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(mathematics, science, literature): Represents the different subjects for online tutoring offers.
2. LevelOfExpertise(primary school level, high school level, university level): Represents the levels of expertise a tutor can provide in a subject.

**Classes:**
1. Person(name: string, email: string): Represents a generic person with a name and an email address used by both tutors and students.
2. Tutor(name: string, email: string, bankAccount: string, hourlyPrice: double): Represents a tutor with specific attributes required for offering tutoring services.
3. Student(name: string, email: string): Represents a student with basic attributes for registration.
4. TutoringSession(date: date, time: time): Represents a tutoring session with a specific date and time.
5. Payment(paymentMethod: string): Represents a payment made for a tutoring session.
6. Availability(day: string, startTime: time, endTime: time): Represents the weekly availability of a tutor for tutoring sessions.
7. CancellationPolicy(cancellationWindow: int, penalty: double): Represents the policy for canceling tutoring sessions with specific penalties."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:day 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:CancellationPolicy
   X  Attribute:cancellationWindow 
   X  Attribute:penalty 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

## Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double, availability: Map<DayOfWeek, List<TimeSlot>>)

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - paymentMethod: PaymentMethod
     - status: SessionStatus
   - Methods:
     - scheduleSession(dateTime: LocalDateTime)
     - confirmSession()
     - cancelSession()

## Attributes: 
1. Tutor
   - name: String
   - email: String
   - bankAccount: String
   - expertise: Map<Subject, ExpertiseLevel>
   - hourlyPrice: Map<Subject, Double>
   - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

2. Student
   - name: String
   - email: String

3. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - level: ExpertiseLevel
   - scheduledDateTime: LocalDateTime
   - actualDateTime: LocalDateTime
   - paymentMethod: PaymentMethod
   - status: SessionStatus

4. TimeSlot
   - startTime: LocalTime
   - endTime: LocalTime

5. PaymentMethod
   - CreditCard
   - WireTransfer

6. SessionStatus
   - Scheduled
   - Confirmed
   - Cancelled"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (Mathematics, Science, Literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Specifies the level of expertise in a subject.

Classes:
1. User(name: String, email: String): Represents a user with a name and email address for both tutors and students.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>): Represents a tutor with bank account, expertise in subjects, hourly prices, and weekly availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, paymentMethod: PaymentMethod, status: SessionStatus): Represents a tutoring session between a tutor and a student, including subject, expertise level, scheduled and actual date/time, payment method, and status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot>> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:paymentMethod 
   X  Attribute:status 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
2. LevelOfExpertise

## Classes:
1. User
   - name: String
   - email: String
2. Tutor
   - extends User
   - bankAccount: String
   - expertise: Map<Subject, LevelOfExpertise>
   - hourlyPrice: Map<Subject, Double>
   - availability: Map<DayOfWeek, List<LocalTime>>
3. Student
   - extends User
4. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - level: LevelOfExpertise
   - date: LocalDate
   - time: LocalTime
   - confirmed: boolean
5. Payment
   - amount: Double
   - method: String
6. CancellationPolicy
   - studentCancellationPenalty: Double
   - tutorCancellationDiscount: Double

## Attributes:
- Subject: name
- LevelOfExpertise: name
- User: name, email
- Tutor: bankAccount, expertise, hourlyPrice, availability
- Student: -
- TutoringSession: tutor, student, subject, level, date, time, confirmed
- Payment: amount, method
- CancellationPolicy: studentCancellationPenalty, tutorCancellationDiscount"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (name): Represents different subjects for tutoring offers.
2. LevelOfExpertise (name): Represents different levels of expertise for tutoring.

Classes:
1. User(name: String, email: String): Represents a user with basic information like name and email.
2. Tutor(bankAccount: String, expertise: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, availability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional attributes like bank account, expertise in subjects, hourly prices, and availability.
3. Student: Represents a student inheriting from the User class.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: LevelOfExpertise, date: LocalDate, time: LocalTime, confirmed: boolean): Represents a tutoring session between a tutor and a student with specific details like date, time, and confirmation status.
5. Payment(amount: Double, method: String): Represents a payment with the amount and payment method used.
6. CancellationPolicy(studentCancellationPenalty: Double, tutorCancellationDiscount: Double): Represents the policy for cancellation penalties and discounts."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   O  Attribute:name  Oracle:name 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:availability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:confirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:method 
 O  Class:LevelOfExpertise   Oracle:Subject 
   O  Attribute:name  Oracle:name 
 X  Class:CancellationPolicy
   X  Attribute:studentCancellationPenalty 
   X  Attribute:tutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - Name: String
     - Email: String

2. Tutor
   - Attributes:
     - Name: String
     - Email: String
     - BankAccount: String
   - Relationships:
     - Offers: List of Offer
     - Availability: List of Availability

3. Student
   - Attributes:
     - Name: String
     - Email: String
   - Relationships:
     - Requests: List of Request

4. Offer
   - Attributes:
     - Subject: Subject
     - ExpertiseLevel: ExpertiseLevel
     - HourlyPrice: Double
   - Relationships:
     - Tutor: Tutor

5. Availability
   - Attributes:
     - DayOfWeek: String
     - StartTime: Time
     - EndTime: Time
   - Relationships:
     - Tutor: Tutor

6. Request
   - Attributes:
     - Subject: Subject
     - ExpertiseLevel: ExpertiseLevel
     - TargetDateTime: DateTime
   - Relationships:
     - Student: Student
     - Tutor: Tutor

7. Session
   - Attributes:
     - DateTime: DateTime
     - Price: Double
     - PaymentMethod: String
   - Relationships:
     - Tutor: Tutor
     - Student: Student

### Attributes:
- Time
- DateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor has in a subject.

Classes:
1. Person(Name: String, Email: String): Represents a generic person with a name and email address.
2. Tutor(Name: String, Email: String, BankAccount: String): Represents a tutor with additional bank account information for payments.
3. Student(Name: String, Email: String): Represents a student with a name and email address.
4. Offer(Subject: Subject, ExpertiseLevel: ExpertiseLevel, HourlyPrice: Double): Represents a tutoring offer with subject, expertise level, and price.
5. Availability(DayOfWeek: String, StartTime: Time, EndTime: Time): Represents the availability of a tutor for tutoring sessions.
6. Request(Subject: Subject, ExpertiseLevel: ExpertiseLevel, TargetDateTime: DateTime): Represents a tutoring request with subject, expertise level, and target date/time.
7. Session(DateTime: DateTime, Price: Double, PaymentMethod: String): Represents a tutoring session with date/time, price, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:Name 
   X  Attribute:Email 
   O  Attribute:BankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:Name 
   X  Attribute:Email 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:Name  Oracle:name 
   O  Attribute:Email  Oracle:email 
 X  Class:Offer
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:HourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:DayOfWeek 
   O  Attribute:StartTime  Oracle:startTime 
   O  Attribute:EndTime  Oracle:endTime 
 X  Class:Request
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:TargetDateTime 
 X  Class:Session
   X  Attribute:DateTime 
   X  Attribute:Price 
   X  Attribute:PaymentMethod 
