------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertiseMap: Map<Subject, ExpertiseLevel>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<String>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double): void
     - specifyAvailability(availability: List<String>): void
     - cancelSession(session: TutoringSession): void

3. Student
   - Attributes:
     - creditCardNumber: String
   - Methods:
     - browseTutoringOffers(subject: Subject): List<TutoringOffer>
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, dateTime: DateTime): void
     - payForSession(session: TutoringSession): void

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: DateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: DateTime
   - Methods:
     - confirmSession(): void
     - rescheduleSession(newDateTime: DateTime): void
     - agreeFollowUpSession(): void

## Attributes:
- For Person class:
  - name: String
  - email: String

- For Tutor class:
  - bankAccount: String
  - expertiseMap: Map<Subject, ExpertiseLevel>
  - hourlyPriceMap: Map<Subject, Double>
  - weeklyAvailability: List<String>

- For Student class:
  - creditCardNumber: String

- For TutoringOffer class:
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: DateTime

- For TutoringSession class:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: DateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise in a subject.

Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertiseMap: Map<Subject, ExpertiseLevel>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>): Represents a tutor with additional attributes for expertise, pricing, and availability.
3. Student(name: String, email: String, creditCardNumber: String): Represents a student with a credit card for payment.
4. TutoringOffer(tutor: Tutor, subject: Subject, level: ExpertiseLevel, dateTime: DateTime): Represents a tutoring offer with details of tutor, subject, level, and date/time.
5. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: DateTime): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertiseMap 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCardNumber 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - ...

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level
   - ...

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double): void
     - specifyAvailability(day: Day, startTime: Time, endTime: Time): void
     - cancelSession(session: TutoringSession): void

3. Student
   - Attributes:
     - name: String
     - email: String
   - Methods:
     - browseTutoringOffers(subject: Subject): List<TutoringOffer>
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, date: Date, time: Time): TutoringRequest
     - payForSession(session: TutoringSession, paymentMethod: PaymentMethod): void

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - price: Double

5. TutoringRequest
   - Attributes:
     - tutor: Tutor
     - level: ExpertiseLevel
     - targetDate: Date
     - targetTime: Time

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - date: Date
     - time: Time
     - status: SessionStatus
   - Methods:
     - confirmSession(): void
     - rescheduleSession(newDate: Date, newTime: Time): void

## Attributes:
- WeeklyAvailability
  - day: Day
  - startTime: Time
  - endTime: Time

- PaymentMethod
  - CreditCard
  - WireTransfer

- Day
  - Monday
  - Tuesday
  - Wednesday
  - Thursday
  - Friday
  - Saturday
  - Sunday

- Time
  - HH:MM

- SessionStatus
  - Scheduled
  - Confirmed
  - Cancelled"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can provide in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with bank account details, expertise in subjects, hourly pricing, and availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and an email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, level: ExpertiseLevel, price: Double): Represents an offer made by a tutor for tutoring in a specific subject at a certain level and price.
5. TutoringRequest(tutor: Tutor, level: ExpertiseLevel, targetDate: Date, targetTime: Time): Represents a request made by a student to a tutor for a tutoring session at a specific date and time.
6. TutoringSession(tutor: Tutor, student: Student, date: Date, time: Time, status: SessionStatus): Represents a tutoring session between a tutor and a student with date, time, and status information."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:price 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:tutor 
   X  Attribute:level 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
    - Attributes:
        - name: String
        - email: String

2. Tutor
    - Attributes:
        - bankAccount: String
        - expertise: LevelOfExpertise
        - hourlyPrice: Double
        - weeklyAvailability: String (e.g. Thursdays from 10:00 to 11:30)

3. Student
    - Inherits from Person

4. TutoringOffer
    - Attributes:
        - subject: Subject
        - expertise: LevelOfExpertise
        - hourlyPrice: Double

5. TutoringRequest
    - Attributes:
        - subject: Subject
        - levelOfTutoring: LevelOfExpertise
        - targetDateTime: DateTime

6. TutoringSession
    - Attributes:
        - tutor: Tutor
        - student: Student
        - dateTime: DateTime
        - followUpSessionScheduled: Boolean

7. Payment
    - Attributes:
        - paymentMethod: String (e.g. Credit Card, Wire Transfer)
        - amount: Double

### Additional Notes:
- The DateTime data type can be used to represent date and time values.
- Specific business rules and validation logic can be implemented within the methods of the classes."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. LevelOfExpertise (Primary School Level, High School Level, University Level): Represents the expertise levels for tutors and tutoring requests.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(bankAccount: String, expertise: LevelOfExpertise, hourlyPrice: Double, weeklyAvailability: String): Represents a tutor with additional attributes like bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student inheriting from Person.
4. TutoringOffer(subject: Subject, expertise: LevelOfExpertise, hourlyPrice: Double): Represents a tutoring offer with subject, expertise level, and hourly price.
5. TutoringRequest(subject: Subject, levelOfTutoring: LevelOfExpertise, targetDateTime: DateTime): Represents a tutoring request with subject, expertise level, and target date/time.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: DateTime, followUpSessionScheduled: Boolean): Represents a tutoring session between a tutor and a student with date/time and follow-up session flag.
7. Payment(paymentMethod: String, amount: Double): Represents a payment with the method and amount.

### Additional Notes:
- The DateTime data type can be used to represent date and time values.
- Specific business rules and validation logic can be implemented within the methods of the classes."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertise 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:LevelOfExpertise 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. ExpertiseLevel
   - PrimarySchool
   - HighSchool
   - University

### Classes:
1. Person
   - Attributes:
     - Name : String
     - Email : String

2. Tutor
   - Attributes:
     - BankAccount : String
   - Associations:
     - Offers : List of TutoringOffer
     - Availability : List of WeeklyAvailability

3. Student
   - Associations:
     - Requests : List of TutoringRequest
     - Payments : List of Payment

4. Subject
   - Attributes:
     - Name : String

5. TutoringOffer
   - Attributes:
     - Subject : Subject
     - ExpertiseLevel : ExpertiseLevel
     - HourlyPrice : Double

6. WeeklyAvailability
   - Attributes:
     - Day : String
     - StartTime : String
     - EndTime : String

7. TutoringRequest
   - Attributes:
     - Subject : Subject
     - ExpertiseLevel : ExpertiseLevel
     - TargetDateTime : DateTime

8. Payment
   - Attributes:
     - Amount : Double
     - PaymentMethod : String

9. TutoringSession
   - Attributes:
     - Tutor : Tutor
     - Student : Student
     - ScheduledDateTime : DateTime
     - FollowUpScheduled : Boolean

10. CancellationPolicy
    - Attributes:
      - CancellationFeePercentage : Double
      - DiscountPercentage : Double

### Attributes:
- Name : String
- Email : String
- BankAccount : String
- Day : String
- StartTime : String
- EndTime : String
- HourlyPrice : Double
- TargetDateTime : DateTime
- Amount : Double
- PaymentMethod : String
- ScheduledDateTime : DateTime
- FollowUpScheduled : Boolean
- CancellationFeePercentage : Double
- DiscountPercentage : Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. ExpertiseLevel(PrimarySchool, HighSchool, University): Represents the different levels of expertise that tutors can have in a subject.

Classes:
1. Person(Name: String, Email: String): Represents a generic person with a name and email address.
2. Tutor(BankAccount: String): Represents a tutor who offers tutoring services and has a bank account for payments.
3. Student: Represents a student who can browse tutoring offers and make requests.
4. Subject(Name: String): Represents a subject that can be tutored.
5. TutoringOffer(Subject: Subject, ExpertiseLevel: ExpertiseLevel, HourlyPrice: Double): Represents an offer made by a tutor for tutoring in a specific subject.
6. WeeklyAvailability(Day: String, StartTime: String, EndTime: String): Represents the weekly availability of a tutor for tutoring sessions.
7. TutoringRequest(Subject: Subject, ExpertiseLevel: ExpertiseLevel, TargetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session.
8. Payment(Amount: Double, PaymentMethod: String): Represents a payment made by a student for a tutoring session.
9. TutoringSession(Tutor: Tutor, Student: Student, ScheduledDateTime: DateTime, FollowUpScheduled: Boolean): Represents a scheduled tutoring session between a tutor and a student.
10. CancellationPolicy(CancellationFeePercentage: Double, DiscountPercentage: Double): Represents the policy for cancellation fees and discounts in case of canceled tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:BankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:Subject  Oracle:Subject
   O  Attribute:Name  Oracle:name 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   O  Attribute:HourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:TargetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:Amount 
   X  Attribute:PaymentMethod 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:ScheduledDateTime 
   X  Attribute:FollowUpScheduled 
 O  Class:ExpertiseLevel  Oracle:LevelOfTutoring 
   O  Attribute:PrimarySchool  Oracle:PrimarySchool 
   O  Attribute:HighSchool  Oracle:HighSchool 
   O  Attribute:University  Oracle:University 
 O  Class:Person  Oracle:User 
   O  Attribute:Name  Oracle:name 
   O  Attribute:Email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:Day 
   O  Attribute:StartTime  Oracle:startTime 
   O  Attribute:EndTime  Oracle:endTime 
 X  Class:CancellationPolicy
   X  Attribute:CancellationFeePercentage 
   X  Attribute:DiscountPercentage 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. Person
    - Attributes: name, email

2. Tutor
    - Attributes: bankAccount
    - Associations: 
        - Specialization: Subject[]
        - Expertise: ExpertiseLevel[]
        - Availability: WeeklySchedule[]

3. Student
    - Associations: 
        - Requests: TutoringRequest[]
        - Payments: Payment[]

4. TutoringOffer
    - Attributes: hourlyPrice
    - Associations: 
        - Subject
        - Tutor

5. TutoringRequest
    - Attributes: targetDateTime
    - Associations: 
        - Tutor
        - Subject
        - ExpertiseLevel

6. WeeklySchedule
    - Attributes: dayOfWeek, startTime, endTime

7. Payment
    - Attributes: amount
    - Associations: 
        - PaymentMethod

### Attributes:
- Person
    - name: String
    - email: String

- Tutor
    - bankAccount: String

- TutoringOffer
    - hourlyPrice: Double

- TutoringRequest
    - targetDateTime: DateTime

- WeeklySchedule
    - dayOfWeek: DayOfWeek
    - startTime: Time
    - endTime: Time

- Payment
    - amount: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the different levels of expertise in a subject.
3. PaymentMethod(credit card, wire transfer): Represents the different payment methods available for paying for tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email.
2. Tutor(bankAccount: String): Represents a tutor who provides tutoring services and has a bank account for payments.
3. Student: Represents a student who can browse and request tutoring sessions.
4. TutoringOffer(hourlyPrice: Double): Represents an offer made by a tutor for tutoring services at a specific price.
5. TutoringRequest(targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session at a specific date and time.
6. WeeklySchedule(dayOfWeek: DayOfWeek, startTime: Time, endTime: Time): Represents the weekly availability schedule of a tutor.
7. Payment(amount: Double): Represents a payment made for a tutoring session.

"
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:targetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklySchedule  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - Others

2. ExpertiseLevel
   - Primary school level
   - High school level
   - University level

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Subclass of Person
   - Attributes:
     - bankAccount: String
     - subjectsExpertise: List<Subject>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<String>  // e.g. ""Thursdays from 10:00 to 11:30""

3. Student
   - Subclass of Person

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: DateTime

5. Payment
   - Attributes:
     - paymentMethod: String  // ""credit card"" or ""wire transfer""
     - amount: Double

## Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjectsExpertise: List<Subject>
  - hourlyPriceMap: Map<Subject, Double>
  - weeklyAvailability: List<String>

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: DateTime

- Payment:
  - paymentMethod: String
  - amount: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, Others):Represents the different subjects that tutors can offer tutoring in.
2. ExpertiseLevel(Primary school level, High school level, University level):Represents the level of expertise a tutor has in a specific subject.

Classes:
1. Person(name: String, email: String):Represents a generic person with a name and an email address.
2. Tutor(name: String, email: String, bankAccount: String, subjectsExpertise: List<Subject>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>):Represents a tutor who provides online tutoring services in specific subjects at different expertise levels and prices.
3. Student(name: String, email: String):Represents a student who can browse and request tutoring sessions from tutors.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime):Represents a tutoring session requested by a student with a specific tutor in a subject at a certain expertise level and time.
5. Payment(paymentMethod: String, amount: Double):Represents the payment made for a tutoring session using a credit card or wire transfer."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
   X  Attribute:Others 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsExpertise 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bank account, subjectsOffered (list of Subject), expertiseLevels (list of ExpertiseLevel), hourlyPrices (map of Subject to price), weeklyAvailability

3. Student
   - Attributes: name, email

4. TutoringRequest
   - Attributes: student, tutor, subject, expertiseLevel, targetDateTime

5. TutoringSession
   - Attributes: student, tutor, subject, dateTime, paymentMethod, price

### Attributes (in addition to those already mentioned in classes):
- User: 
  - name (String)
  - email (String)

- Tutor:
  - bankAccount (String)
  - subjectsOffered (List of Subject)
  - expertiseLevels (List of ExpertiseLevel)
  - hourlyPrices (Map of Subject to Double)
  - weeklyAvailability (List of WeeklyAvailability)

- Student:
  - name (String)
  - email (String)

- TutoringRequest:
  - student (Student)
  - tutor (Tutor)
  - subject (Subject)
  - expertiseLevel (ExpertiseLevel)
  - targetDateTime (DateTime)

- TutoringSession:
  - student (Student)
  - tutor (Tutor)
  - subject (Subject)
  - dateTime (DateTime)
  - paymentMethod (PaymentMethod)
  - price (Double)

### Note:
- Additional classes like WeeklyAvailability, DateTime, etc., might need to be defined based on the requirements and design considerations."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (e.g. primary school level, high school level, university level): Denotes the level of expertise a tutor has in a subject.
3. PaymentMethod (e.g. credit card, wire transfer): Specifies the method of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address for registration.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: List<ExpertiseLevel>, hourlyPrices: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with details required for offering tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address for registration.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(student: Student, tutor: Tutor, subject: Subject, dateTime: DateTime, paymentMethod: PaymentMethod, price: Double): Represents a tutoring session between a student and a tutor.

### Note:
- Additional classes like WeeklyAvailability, DateTime, etc., may be required based on the specific implementation needs."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPrices 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
   X  Attribute:price 
 X  Class:ExpertiseLevel 
   X  Attribute:primary 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:credit 
   X  Attribute:transfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Expertise Level (e.g. primary school level, high school level, university level)
3. Payment Method (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bank account, hourly price
   - Relationships: 
     - Offers (Subject, Expertise Level)
     - Availability (Day, Time)

3. Student
   - Attributes: name, email

4. Session
   - Attributes: date, time, status, price
   - Relationships:
     - Tutor
     - Student

### Attributes:
1. User
   - name (String)
   - email (String)

2. Tutor
   - name (String)
   - email (String)
   - bank account (String)
   - hourly price (Decimal)

3. Student
   - name (String)
   - email (String)

4. Session
   - date (Date)
   - time (Time)
   - status (String)
   - price (Decimal)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for online tutoring offers.
2. Expertise Level (primary school level, high school level, university level): Describes the level of expertise a tutor has in a specific subject.
3. Payment Method (credit card, wire transfer): Enumerates the available payment methods for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address for both tutors and students.
2. Tutor(name: String, email: String, bank account: String, hourly price: Decimal): Represents a tutor with additional attributes like bank account and hourly price for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. Session(date: Date, time: Time, status: String, price: Decimal): Represents a tutoring session with details like date, time, status, and price."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bank account  Oracle:bankAccount 
   X  Attribute:hourly price 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 X  Class:Expertise Level 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Payment Method 
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:Session
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
   X  Attribute:price 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Relationships:
     - Offers tutoring sessions
     - Availability for tutoring sessions

3. Student
   - Relationships:
     - Makes tutoring requests
     - Attends tutoring sessions
     - Pays for sessions

4. TutoringSession
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: double
     - dateAndTime: Date
   - Relationships:
     - Tutor
     - Student

### Attributes:
1. Tutor
   - name: String
   - email: String
   - bankAccount: String

2. Student
   - name: String
   - email: String

3. TutoringSession
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - hourlyPrice: double
   - dateAndTime: Date"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, dateAndTime: Date): Represents a tutoring session with subject, expertise level, price, and date/time."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:dateAndTime 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - name: String
     - email: String
     - bankAccount: String
     - expertise: Map<Subject, LevelOfExpertise>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<WeeklySlot>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - dateAndTime: Date
     - status: SessionStatus

### Attributes for Classes:
- WeeklySlot
   - dayOfWeek: DayOfWeek
   - startTime: LocalTime
   - endTime: LocalTime

- SessionStatus
   - PENDING
   - CONFIRMED
   - CANCELLED_BY_STUDENT
   - CANCELLED_BY_TUTOR"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects available for tutoring.
2. LevelOfExpertise(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor may have in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklySlot>): Represents a tutor with details like bank account, expertise in subjects, hourly prices, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: LevelOfExpertise, dateAndTime: Date, status: SessionStatus): Represents a tutoring session with details like tutor, student, subject, date and time, and status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateAndTime 
   X  Attribute:status 
 X  Class:LevelOfExpertise
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
