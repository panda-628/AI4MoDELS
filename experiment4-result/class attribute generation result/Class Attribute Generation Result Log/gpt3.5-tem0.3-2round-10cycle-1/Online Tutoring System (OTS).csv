------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. PaymentMethod (e.g. Credit Card, Wire Transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers tutoring sessions, has availability

3. Student
   - Associations: makes tutoring requests, pays for sessions

4. TutoringSession
   - Attributes: date, time, price
   - Associations: tutor, student

### Attributes:
1. Tutor
   - name
   - email
   - bankAccount

2. Student
   - name
   - email

3. TutoringSession
   - date
   - time
   - price

4. TutoringRequest
   - level of tutoring
   - target date
   - target time

5. Payment
   - payment method

6. CancellationPolicy
   - student cancellation penalty
   - tutor cancellation discount"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Indicates the level of expertise a tutor has in a subject.
3. PaymentMethod(Credit Card, Wire Transfer): Specifies the method of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(date: Date, time: Time, price: Double): Represents a tutoring session with date, time, and price attributes.
5. TutoringRequest(levelOfTutoring: ExpertiseLevel, targetDate: Date, targetTime: Time): Represents a tutoring request with level of tutoring, target date, and target time.
6. Payment(paymentMethod: PaymentMethod): Represents a payment with the chosen payment method.
7. CancellationPolicy(studentCancellationPenalty: Double, tutorCancellationDiscount: Double): Represents the cancellation policy with penalties and discounts."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 X  Class:CancellationPolicy
   X  Attribute:studentCancellationPenalty 
   X  Attribute:tutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: String

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - name: String
  - email: String

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - dateTime: LocalDateTime
  - followUpScheduled: boolean
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific subject offerings, expertise levels, pricing, and availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor for a specific subject and level at a target date and time.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: String): Represents a tutoring session between a tutor and a student with details like date, time, payment method, etc."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Methods: offerTutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: string)

3. Student
   - Attributes: name, email
   - Methods: browseTutoringOffers(subject: Subject), makeTutoringRequest(tutor: Tutor, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime)

4. TutoringSession
   - Attributes: tutor, student, subject, expertiseLevel, dateTime, status
   - Methods: confirmSession(), rescheduleSession(newDateTime: DateTime), cancelSession(canceller: User)

### Attributes:
1. User
   - name: string
   - email: string

2. Tutor
   - bankAccount: string

3. Student
   - None

4. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - dateTime: DateTime
   - status: string"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: string, email: string): Represents a user with a name and email for registration.
2. Tutor(name: string, email: string, bankAccount: string): Represents a tutor with additional bank account information for payment.
3. Student(name: string, email: string): Represents a student with a name and email for registration.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, status: string): Represents a tutoring session between a tutor and a student with details such as subject, expertise level, date, and status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - expertise: ExpertiseLevel
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>
     - tutoringSessions: List<TutoringSession>

3. Student
   - Associations:
     - tutoringRequests: List<TutoringRequest>
     - creditCardInfo: CreditCardInfo

4. TutoringSession
   - Attributes:
     - date: LocalDate
     - time: LocalTime
     - status: SessionStatus
   - Associations:
     - tutor: Tutor
     - student: Student

5. TutoringRequest
   - Attributes:
     - level: ExpertiseLevel
     - targetDate: LocalDate
     - targetTime: LocalTime
   - Associations:
     - tutor: Tutor
     - student: Student

6. CreditCardInfo
   - Attributes:
     - cardNumber: String
     - expirationDate: LocalDate

### Attributes:
- SessionStatus: Enum {SCHEDULED, CONFIRMED, CANCELLED}
- DayOfWeek: Enum {MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY}
- LocalTime: Class
- LocalDate: Class"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>>, tutoringSessions: List<TutoringSession>): Represents a tutor with bank account, expertise, pricing, availability, and tutoring sessions.
3. Student(tutoringRequests: List<TutoringRequest>, creditCardInfo: CreditCardInfo): Represents a student with tutoring requests and credit card information.
4. TutoringSession(date: LocalDate, time: LocalTime, status: SessionStatus, tutor: Tutor, student: Student): Represents a tutoring session with date, time, status, tutor, and student involved.
5. TutoringRequest(level: ExpertiseLevel, targetDate: LocalDate, targetTime: LocalTime, tutor: Tutor, student: Student): Represents a tutoring request with expertise level, target date, target time, tutor, and student involved.
6. CreditCardInfo(cardNumber: String, expirationDate: LocalDate): Represents credit card information with card number and expiration date."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime>> 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:tutoringRequests 
   X  Attribute:creditCardInfo 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
   X  Attribute:tutor 
   X  Attribute:student 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:level 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
   X  Attribute:tutor 
   X  Attribute:student 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:CreditCardInfo
   X  Attribute:cardNumber 
   X  Attribute:expirationDate 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - price: Double
     - paymentMethod: PaymentMethod

### Attributes:
- PaymentMethod
- DayOfWeek
- LocalTime
- LocalDateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the different levels of expertise a tutor can have in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes related to tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, price: Double, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:price 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double, availability: Map<DayOfWeek, List<LocalTime>>): void
     - confirmTutoringRequest(student: Student, subject: Subject, level: ExpertiseLevel, date: LocalDate, time: LocalTime): void
     - rescheduleTutoring(student: Student, newDate: LocalDate, newTime: LocalTime): void
     - cancelTutoring(student: Student): void

3. Student extends Person
   - Methods:
     - browseTutoringOffers(subject: Subject): List<Tutor>
     - makeTutoringRequest(tutor: Tutor, subject: Subject, level: ExpertiseLevel, date: LocalDate, time: LocalTime): void
     - payForSession(amount: Double, paymentMethod: PaymentMethod): void

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - date: LocalDate
     - time: LocalTime
   - Methods:
     - agreeOnFollowUpSession(): void
     - cancelSession(canceller: Person): void

5. PaymentMethod
   - CreditCard
   - WireTransfer

## Attributes:
- PaymentMethod: Enum
- DayOfWeek: Enum
- LocalTime: Class
- LocalDate: Class"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>>): Represents a tutor with specific expertise, pricing, and availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address, extending the Person class.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, date: LocalDate, time: LocalTime): Represents a tutoring session between a tutor and a student.
5. PaymentMethod: Represents different payment methods for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime>> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:date 
   X  Attribute:time 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:PaymentMethod
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor extends User
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends User

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - price: Double
     - paymentMethod: PaymentMethod

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - N/A

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - price: Double
  - paymentMethod: PaymentMethod"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. User(name: String, email: String): Represents a general user with a name and email address.
2. Tutor extends User (bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional attributes like bank account, subjects they can tutor, expertise levels, hourly prices, and weekly availability.
3. Student extends User: Represents a student with inherited attributes from User.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, price: Double, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student with details such as subject, scheduled time, price, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:price 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Tutor extends User 
   X  Attribute:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 X  Class:Student extends User
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers: List of TutoringOffer
     - Availability: List of WeeklyAvailability

3. Student
   - Associations:
     - Requests: List of TutoringRequest

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double

5. WeeklyAvailability
   - Attributes:
     - dayOfWeek: String
     - startTime: String
     - endTime: String

6. TutoringRequest
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: DateTime
   - Associations:
     - Tutor: Tutor

7. TutoringSession
   - Attributes:
     - dateTime: DateTime
     - isConfirmed: Boolean
   - Associations:
     - Tutor: Tutor
     - Student: Student

8. Payment
   - Attributes:
     - paymentMethod: String
     - amount: Double

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String

- TutoringOffer:
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: Double

- WeeklyAvailability:
  - dayOfWeek: String
  - startTime: String
  - endTime: String

- TutoringRequest:
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession:
  - dateTime: DateTime
  - isConfirmed: Boolean

- Payment:
  - paymentMethod: String
  - amount: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor who offers tutoring services and provides bank account information.
3. Student: Represents a student who can make tutoring requests.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents an offer made by a tutor for tutoring in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: String, endTime: String): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student to a tutor for tutoring.
7. TutoringSession(dateTime: DateTime, isConfirmed: Boolean): Represents a tutoring session with date and confirmation status.
8. Payment(paymentMethod: String, amount: Double): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (List of TutoringOffer), availability (List of WeeklyAvailability)

3. Student
   - Associations: requests (List of TutoringRequest)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor (Tutor)

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student (Student), tutor (Tutor)

7. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: tutor (Tutor), student (Student)

### Attributes:
- Person: name (String), email (String)
- Tutor: bankAccount (String)
- TutoringOffer: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- WeeklyAvailability: dayOfWeek (String), startTime (LocalTime), endTime (LocalTime)
- TutoringRequest: subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (LocalDateTime)
- TutoringSession: dateTime (LocalDateTime), isConfirmed (boolean), isCancelled (boolean)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor with a bank account for payments.
3. Student: Represents a student.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer for tutoring in a specific subject and expertise level.
5. WeeklyAvailability(dayOfWeek: String, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request from a student to a tutor for tutoring.
7. TutoringSession(dateTime: LocalDateTime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - name: String
     - email: String
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>
     - tutoringSessions: List<TutoringSession>

3. Student
   - Attributes:
     - name: String
     - email: String
     - tutoringRequests: List<TutoringRequest>
     - tutoringSessions: List<TutoringSession>

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateAndTime: LocalDateTime
     - followUpSessionScheduled: boolean
     - paymentReceived: boolean

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

### Note:
- The classes and attributes are based on the given description of the Online Tutoring System (OTS).
- The relationships between classes are implied by the description but not explicitly defined (e.g. Tutor has tutoringSessions, Student has tutoringRequests).
- Additional methods and relationships may be needed based on the specific requirements and functionalities of the system."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>>, tutoringSessions: List<TutoringSession): Represents a tutor with specific attributes for offering tutoring services.
3. Student(name: String, email: String, tutoringRequests: List<TutoringRequest>, tutoringSessions: List<TutoringSession): Represents a student with attributes related to tutoring requests and sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateAndTime: LocalDateTime, followUpSessionScheduled: boolean, paymentReceived: boolean): Represents a tutoring session between a tutor and a student.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime>> 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
   X  Attribute:tutoringSessions 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateAndTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentReceived 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
