------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
2. LevelOfExpertise

## Classes:
1. User
    - Attributes:
        - name: String
        - email: String
2. Tutor
    - Attributes:
        - bankAccount: String
        - subjects: List<Subject>
        - expertiseLevels: List<LevelOfExpertise>
        - hourlyPriceMap: Map<Subject, Double>
        - weeklyAvailability: List<String> (e.g. ""Thursdays from 10:00 to 11:30"")
    - Methods:
        - offerTutoring(subject: Subject, level: LevelOfExpertise, price: Double)
        - confirmTutoringRequest()
        - rescheduleTutoringSession()
        - cancelTutoringSession()
3. Student extends User
    - Methods:
        - browseTutoringOffers(subject: Subject)
        - makeTutoringRequest(tutor: Tutor, level: LevelOfExpertise, targetDateTime: DateTime)
        - payForSession(paymentMethod: String)
4. TutoringSession
    - Attributes:
        - tutor: Tutor
        - student: Student
        - subject: Subject
        - level: LevelOfExpertise
        - dateTime: DateTime
    - Methods:
        - agreeUponFollowUpSession()
    - cancelSession()
5. Payment
    - Attributes:
        - paymentMethod: String
        - amount: Double

## Attributes (not associated with a specific class):
- DateTime: Represents date and time
"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject: [Represents the different subjects for tutoring offers.]
2. LevelOfExpertise: [Represents the level of expertise in a subject for tutoring.]

Classes:
1. User(name: String, email: String): [Represents a generic user with a name and email address.]
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: List<LevelOfExpertise>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>): [Represents a tutor with additional details like bank account, subjects they teach, expertise levels, hourly prices, and weekly availability.]
3. Student(name: String, email: String): [Represents a student extending the User class with additional methods for browsing offers and making requests.]
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: LevelOfExpertise, dateTime: DateTime): [Represents a tutoring session between a tutor and a student with specific details like subject, level, and date/time.]
5. Payment(paymentMethod: String, amount: Double): [Represents a payment for a tutoring session with details like payment method and amount.]"
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:LevelOfExpertise
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: List<ExpertiseLevel>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<String>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateTime: LocalDateTime

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List<Subject>
  - expertiseLevels: List<ExpertiseLevel>
  - hourlyPriceMap: Map<Subject, Double>
  - weeklyAvailability: List<String>

- Student:
  - name: String
  - email: String

- TutoringOffer:
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: Double

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - dateTime: LocalDateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: List<ExpertiseLevel>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>): Represents a tutor with specific attributes for tutoring offers.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents an offer made by a tutor for tutoring services.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request made by a student to a tutor for tutoring services.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

## Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: DateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: DateTime
     - isConfirmed: boolean

7. Payment
   - Attributes:
     - student: Student
     - tutor: Tutor
     - session: TutoringSession
     - paymentMethod: String

8. CancellationPolicy
   - Attributes:
     - cancellationType: String
     - penaltyPercentage: int

## Attributes:
- DateTime: Represents a specific date and time
- double: Represents a numerical value with decimal points"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects that can be offered for tutoring.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide in a subject.

Classes:
1. User(name: String, email: String): Represents a user with a name and an email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents a tutor with bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and an email address.
4. TutoringOffer(tutor: Tutor, subject: Subject): Represents an offer made by a tutor for a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor for a specific subject and level at a target date and time.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: DateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student for a specific subject at a specific date and time.
7. Payment(student: Student, tutor: Tutor, session: TutoringSession, paymentMethod: String): Represents a payment made by a student to a tutor for a tutoring session using a specific payment method.
8. CancellationPolicy(cancellationType: String, penaltyPercentage: int): Represents the policy for cancellations with penalty percentage based on the cancellation type."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:session 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:CancellationPolicy
   X  Attribute:cancellationType 
   X  Attribute:penaltyPercentage 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary school level, High school level, University level)

**Classes:**
1. Person
    - Attributes: name, email
    
2. Tutor
    - Attributes: bankAccount
    - Associations: 
        - Offers tutoring sessions in Subject with ExpertiseLevel and hourlyPrice
        - Specifies weekly availability
        
3. Student
    - Associations:
        - Browses tutoring offers in Subject
        - Makes tutoring request specifying tutoring level, target date, and time
        - Pays for tutoring session
        
4. TutoringSession
    - Attributes: date, time, price
    - Associations:
        - Involves a Tutor and a Student
        - Can be cancelled with cancellation policies
        
**Attributes:**
- Tutor: name, email, bankAccount
- Student: name, email
- TutoringSession: date, time, price"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(Mathematics, Science, Literature): Represents the different subjects for which tutoring sessions can be offered.
2. ExpertiseLevel(Primary school level, High school level, University level): Represents the different levels of expertise a tutor can have in a subject.

**Classes:**
1. Person(name: string, email: string): Represents a person with a name and an email address.
2. Tutor(name: string, email: string, bankAccount: string): Represents a tutor with additional attributes such as a bank account.
3. Student(name: string, email: string): Represents a student with a name and an email address.
4. TutoringSession(date: date, time: time, price: decimal): Represents a tutoring session with attributes for date, time, and price."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: offers (list of tutoring offers), availability (list of weekly availability)

3. Student
   - Attributes: name, email
   - Associations: tutoringRequests (list of tutoring requests)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor

5. Availability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student, tutor

7. TutoringSession
   - Attributes: startTime, endTime, isConfirmed, isCancelled
   - Associations: tutor, student

8. Payment
   - Attributes: paymentMethod, amount
   - Associations: student, tutor, tutoringSession

### Note:
- The associations between classes represent relationships between them, for example, a Tutor has many TutoringOffers, a Tutor has many Availabilities, a Student has many TutoringRequests, etc.
- Some attributes and associations may have additional properties or methods not explicitly mentioned in the description."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with name, email, and bank account details.
3. Student(name: String, email: String): Represents a student with name and email for registration.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents a tutoring offer with subject, expertise level, and hourly price.
5. Availability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(startTime: DateTime, endTime: DateTime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session with start time, end time, and confirmation/cancellation status.
8. Payment(paymentMethod: String, amount: double): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:startTime 
   X  Attribute:endTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers (Subject, ExpertiseLevel, hourlyPrice, weeklyAvailability)

3. Student
   - Associations:
     - Requests (Subject, ExpertiseLevel, targetDateTime)
     - Pays (paymentMethod)

4. TutoringSession
   - Attributes:
     - dateTime: DateTime
   - Associations:
     - Tutor
     - Student

### Attributes:
1. Tutor
   - name: String
   - email: String

2. Student
   - name: String
   - email: String

3. Offers
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - hourlyPrice: double
   - weeklyAvailability: String

4. Requests
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - targetDateTime: DateTime

5. Pays
   - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email attributes.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information for payment.
3. Student(name: String, email: String): Represents a student with name and email attributes.
4. TutoringSession(dateTime: DateTime): Represents a tutoring session with a specific date and time.
"
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes: name, email
   
2. Tutor (inherits from Person)
   - Attributes: bankAccount, availability
   - Methods: offerTutoringSession(), confirmTutoringSession(), cancelTutoringSession()

3. Student (inherits from Person)
   - Methods: browseTutoringOffers(), makeTutoringRequest(), payForSession()

4. TutoringSession
   - Attributes: subject, expertiseLevel, hourlyPrice, scheduledDateTime
   - Methods: scheduleFollowUpSession()

### Attributes:
1. Tutor
   - name (String)
   - email (String)
   - bankAccount (String)
   - availability (List of weekly availability)

2. Student
   - name (String)
   - email (String)

3. TutoringSession
   - subject (Subject enum)
   - expertiseLevel (ExpertiseLevel enum)
   - hourlyPrice (double)
   - scheduledDateTime (DateTime)

These classes and attributes provide a basic structure for modeling the Online Tutoring System (OTS) described in the given description."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email.
2. Tutor(name: String, email: String, bankAccount: String, availability: List): Represents a tutor with additional attributes for bank account and availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with basic attributes.
4. TutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, scheduledDateTime: DateTime): Represents a tutoring session with subject, expertise level, price, and scheduled time."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:scheduledDateTime 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Expertise Level (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes: 
     - name (String)
     - email (String)
     
2. Tutor (inherits from Person)
   - Attributes:
     - bankAccount (String)
     - tutoringSubjects (List of Subject)
     - expertiseLevels (Map<Subject, Expertise Level>)
     - hourlyPrice (Map<Subject, Double>)
     - weeklyAvailability (List of String) // Representing day and time slots
   
3. Student (inherits from Person)
   - Attributes:
     - paymentMethod (String) // credit card or wire transfer

4. TutoringSession
   - Attributes:
     - tutor (Tutor)
     - student (Student)
     - subject (Subject)
     - levelOfTutoring (Expertise Level)
     - scheduledDateTime (DateTime)
     - actualDateTime (DateTime)
     - paymentStatus (Boolean)
     - cancellationPolicy (String) // Rules for cancellation

### Attributes:
- name (String)
- email (String)
- bankAccount (String)
- tutoringSubjects (List of Subject)
- expertiseLevels (Map<Subject, Expertise Level>)
- hourlyPrice (Map<Subject, Double>)
- weeklyAvailability (List of String)
- paymentMethod (String)
- tutor (Tutor)
- student (Student)
- subject (Subject)
- levelOfTutoring (Expertise Level)
- scheduledDateTime (DateTime)
- actualDateTime (DateTime)
- paymentStatus (Boolean)
- cancellationPolicy (String)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. Expertise Level (primary school level, high school level, university level): Represents the levels of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, tutoringSubjects: List<Subject>, expertiseLevels: Map<Subject, Expertise Level>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<String>): Represents a tutor with specific details required for tutoring services.
3. Student(name: String, email: String, paymentMethod: String): Represents a student with name, email, and payment method details.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: Expertise Level, scheduledDateTime: DateTime, actualDateTime: DateTime, paymentStatus: Boolean, cancellationPolicy: String): Represents a tutoring session between a tutor and a student with associated details."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:tutoringSubjects 
   X  Attribute:expertiseLevels 
   X  Attribute:Level> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:paymentMethod 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:paymentStatus 
   X  Attribute:cancellationPolicy 
 X  Class:Expertise Level 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.)
2. ExpertiseLevel (primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: List<ExpertiseLevel>
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<String>  // e.g. ""Thursdays from 10:00 to 11:30""

3. Student extends Person
   - Attributes:
     - requests: List<TutoringRequest>
     - creditCardInfo: String
     - tutoringSessions: List<TutoringSession>

4. TutoringRequest
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: LocalDateTime
     - followUpScheduled: boolean
     - sessionPrice: Double
     - paymentMethod: String

### Note:
- LocalDateTime can be a class from the Java Time API for handling date and time.
- The attributes and classes can be further refined based on specific requirements and functionalities needed in the system."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a specific subject.

### Classes:
1. Person(name: String, email: String): Represents a general person with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: List<ExpertiseLevel>, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>): Represents a tutor with specific attributes related to tutoring.
3. Student(name: String, email: String, requests: List<TutoringRequest>, creditCardInfo: String, tutoringSessions: List<TutoringSession): Represents a student with attributes related to tutoring requests and sessions.
4. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: LocalDateTime, followUpScheduled: boolean, sessionPrice: Double, paymentMethod: String): Represents a tutoring session between a tutor and a student with relevant details."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:requests 
   X  Attribute:creditCardInfo 
   X  Attribute:tutoringSessions 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:sessionPrice 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
    - Attributes:
        - name: String
        - email: String

2. Tutor extends Person
    - Attributes:
        - bankAccount: String
        - subjectsOffered: List<Subject>
        - expertiseLevels: Map<Subject, ExpertiseLevel>
        - hourlyPrice: Map<Subject, Double>
        - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends Person

4. TutoringRequest
    - Attributes:
        - student: Student
        - tutor: Tutor
        - subject: Subject
        - expertiseLevel: ExpertiseLevel
        - targetDateTime: LocalDateTime

5. TutoringSession
    - Attributes:
        - tutor: Tutor
        - student: Student
        - subject: Subject
        - dateTime: LocalDateTime
        - followUpSessionScheduled: boolean

6. Payment
    - Attributes:
        - amount: Double
        - paymentMethod: String

### Note:
- The classes and attributes are derived based on the given description.
- Additional methods and relationships can be added based on further requirements or details."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor has in a specific subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor extends Person(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional attributes related to tutoring services.
3. Student extends Person: Represents a student inheriting attributes from the Person class.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor for a specific subject and expertise level.
5. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpSessionScheduled: boolean): Represents a tutoring session between a tutor and a student.
6. Payment(amount: Double, paymentMethod: String): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 X  Class:Student extends Person
