------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Subject
     - hourlyPrice: double
     - availability: String

3. Student
   - Attributes:
     - creditCard: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - date: Date
     - time: String
     - status: String

### Additional Attributes:
- Tutor:
  - subjects: List<Subject>
- Student:
  - name: String
  - email: String
- TutoringSession:
  - followUpSessionScheduled: boolean
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Subject, hourlyPrice: double, availability: String): Represents a tutor with specific attributes required for offering tutoring services.
3. Student(name: String, email: String, creditCard: String): Represents a student with attributes including name, email, and credit card information.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, date: Date, time: String, status: String): Represents a tutoring session with details of the tutor, student, subject, level, date, time, and status.

### Additional Attributes:
- Tutor(subjects: List<Subject>): Represents the subjects in which a tutor can offer tutoring.
- Student(name: String, email: String): Includes additional attributes for the Student class.
- TutoringSession(followUpSessionScheduled: boolean, paymentMethod: String): Contains additional attributes for the TutoringSession class."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCard 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)
3. Day of the week (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - name: string
     - email: string

2. Tutor
   - Attributes:
     - bankAccount: string
     - expertise: Level of expertise
     - hourlyPrice: decimal
     - availability: List of Day of the week

3. Student
   - Attributes:
     - name: string
     - email: string

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: Level of expertise
     - scheduledDateTime: datetime
     - actualDateTime: datetime
     - price: decimal
     - paymentMethod: string

### Additional Classes:
1. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - levelOfTutoring: Level of expertise
     - targetDateTime: datetime

2. FollowUpSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - scheduledDateTime: datetime

3. CancellationPolicy
   - Attributes:
     - cancellationType: string
     - penaltyPercentage: int

### Note:
- The classes and attributes are based on the given description and may need further refinement based on specific requirements or constraints."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. Level of expertise(primary school level, high school level, university level): Represents the expertise levels of tutors in subjects.
3. Day of the week(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability.

### Classes:
1. Person(name: string, email: string): Represents a generic person with name and email attributes.
2. Tutor(bankAccount: string, expertise: Level of expertise, hourlyPrice: decimal, availability: List of Day of the week): Represents a tutor with bank account, expertise level, hourly price, and availability.
3. Student(name: string, email: string): Represents a student with name and email attributes.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: Level of expertise, scheduledDateTime: datetime, actualDateTime: datetime, price: decimal, paymentMethod: string): Represents a tutoring session between a tutor and a student with details like subject, level, timing, and payment.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, levelOfTutoring: Level of expertise, targetDateTime: datetime): Represents a tutoring request made by a student to a tutor for a specific subject and level.
6. FollowUpSession(tutor: Tutor, student: Student, scheduledDateTime: datetime): Represents a follow-up tutoring session scheduled between a tutor and a student.
7. CancellationPolicy(cancellationType: string, penaltyPercentage: int): Represents the policy for cancellation with details like type and penalty percentage."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:price 
   X  Attribute:paymentMethod 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 X  Class:Level of expertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Day of the week
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:FollowUpSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:scheduledDateTime 
 X  Class:CancellationPolicy
   X  Attribute:cancellationType 
   X  Attribute:penaltyPercentage 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of Expertise (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers tutoring sessions in Subject
     - Specifies hourly price for tutoring sessions in Subject
     - Specifies weekly availability for tutoring sessions

3. Student
   - Associations:
     - Makes tutoring requests for Subject and Level of tutoring

4. TutoringSession
   - Attributes:
     - date: Date
     - time: Time
     - price: Double
   - Associations:
     - Involves a Tutor and a Student
     - May have follow-up TutoringSession

### Attributes:
1. Tutor
   - name: String
   - email: String

2. Student
   - name: String
   - email: String

3. TutoringSession
   - subject: Subject
   - levelOfTutoring: Level of Expertise"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. Level of Expertise (primary school level, high school level, university level): Represents different levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a general person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor who provides tutoring services and has a bank account.
3. Student(name: String, email: String): Represents a student who can browse and request tutoring sessions.
4. TutoringSession(date: Date, time: Time, price: Double, subject: Subject, levelOfTutoring: Level of Expertise): Represents a tutoring session with specific details like date, time, price, subject, and level of expertise."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
 X  Class:Level of Expertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes: name, email
   
2. Tutor extends Person
   - Attributes: bankAccount
   - Relationships: 
     - Offers (1 to many) - Tutor may offer multiple tutoring sessions
     - Availability (1 to many) - Tutor may have multiple weekly availability slots
   
3. Student extends Person

4. TutoringSession
   - Attributes: 
     - subject, expertiseLevel, hourlyPrice, timeSlot, status
   - Relationships:
     - Tutor (1) - Tutor associated with the session
     - Student (1) - Student associated with the session

### Attributes:
1. Person:
   - name (String)
   - email (String)
   
2. Tutor:
   - bankAccount (String)
   
3. TutoringSession:
   - subject (Subject)
   - expertiseLevel (ExpertiseLevel)
   - hourlyPrice (double)
   - timeSlot (DateTime)
   - status (String)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information.
3. Student(name: String, email: String): Represents a student with a name and an email address.
4. TutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, timeSlot: DateTime, status: String): Represents a tutoring session with subject, expertise level, price, time slot, and status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:timeSlot 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: string
     - email: string

2. Tutor
   - Attributes:
     - bankAccount: string
     - expertise: ExpertiseLevel
     - hourlyPrice: float
     - weeklyAvailability: string

3. Student
   - Attributes:
     - creditCard: string

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - tutor: Tutor
     - level: ExpertiseLevel
     - targetDate: date
     - targetTime: time

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - date: date
     - time: time
     - followUpScheduled: boolean

6. Payment
   - Attributes:
     - amount: float
     - paymentMethod: string

### Associations:
- Tutor can be a User
- Student can be a User
- Tutor can offer multiple TutoringOffers
- Student can make multiple TutoringRequests
- TutoringSession is associated with one Tutor and one Student
- Payment is associated with one TutoringSession"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents different levels of expertise for tutoring.

### Classes:
1. User(name: string, email: string): Represents a user with a name and email address for both tutors and students.
2. Tutor(bankAccount: string, expertise: ExpertiseLevel, hourlyPrice: float, weeklyAvailability: string): Represents a tutor with bank account details, expertise level, hourly price, and weekly availability.
3. Student(creditCard: string): Represents a student with credit card information.
4. TutoringOffer(subject: Subject, tutor: Tutor, level: ExpertiseLevel, targetDate: date, targetTime: time): Represents a tutoring offer with subject, tutor, expertise level, target date, and time.
5. TutoringSession(tutor: Tutor, student: Student, date: date, time: time, followUpScheduled: boolean): Represents a tutoring session with tutor, student, date, time, and follow-up scheduling status.
6. Payment(amount: float, paymentMethod: string): Represents a payment with amount and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:creditCard 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:tutor 
   X  Attribute:level 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:followUpScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student extends Person

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - isConfirmed: boolean

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student
  - N/A

- TutoringSession
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - isConfirmed: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor extends Person(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with additional attributes related to tutoring services.
3. Student extends Person: Represents a student inheriting attributes from Person.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 X  Class:Student extends Person
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:Enumerations:
1. Subject (e.g., Mathematics, Science, Literature)
2. ExpertiseLevel (e.g., Primary School Level, High School Level, University Level)

Classes:
1. Person
   - Attributes: 
     - Name (String)
     - EmailAddress (String)

2. Tutor extends Person
   - Attributes:
     - BankAccount (String)
   - Associations:
     - Offers (List of TutoringOffer)
     - Availability (List of WeeklyAvailability)

3. Student extends Person
   - Associations:
     - Requests (List of TutoringRequest)

4. TutoringOffer
   - Attributes:
     - Subject (Subject)
     - ExpertiseLevel (ExpertiseLevel)
     - HourlyPrice (double)

5. WeeklyAvailability
   - Attributes:
     - DayOfWeek (String)
     - StartTime (Time)
     - EndTime (Time)

6. TutoringRequest
   - Attributes:
     - Subject (Subject)
     - ExpertiseLevel (ExpertiseLevel)
     - TargetDateTime (DateTime)
   - Associations:
     - Tutor (Tutor)

7. TutoringSession
   - Attributes:
     - DateTime (DateTime)
     - Status (String)
   - Associations:
     - Tutor (Tutor)
     - Student (Student)

8. Payment
   - Attributes:
     - Amount (double)
     - PaymentMethod (String)

9. CancellationPolicy
   - Attributes:
     - CancellationThreshold (int)
     - StudentPenaltyRate (double)
     - TutorDiscountRate (double)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise in a subject.

Classes:
1. Person(Name: String, EmailAddress: String): Represents a generic person with a name and email address.
2. Tutor extends Person(BankAccount: String): Represents a tutor who provides tutoring services and has a bank account.
3. Student extends Person: Represents a student who can browse and request tutoring sessions.
4. TutoringOffer(Subject: Subject, ExpertiseLevel: ExpertiseLevel, HourlyPrice: double): Represents an offer for tutoring in a specific subject with expertise level and price.
5. WeeklyAvailability(DayOfWeek: String, StartTime: Time, EndTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(Subject: Subject, ExpertiseLevel: ExpertiseLevel, TargetDateTime: DateTime): Represents a request for tutoring from a student to a tutor.
7. TutoringSession(DateTime: DateTime, Status: String): Represents a tutoring session with date, time, and status.
8. Payment(Amount: double, PaymentMethod: String): Represents a payment made for a tutoring session.
9. CancellationPolicy(CancellationThreshold: int, StudentPenaltyRate: double, TutorDiscountRate: double): Represents the policy for cancellation penalties and discounts."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   O  Attribute:HourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:TargetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:DateTime 
   X  Attribute:Status 
 O  Class:Payment  Oracle:Payment
   X  Attribute:Amount 
   X  Attribute:PaymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:Person
   X  Attribute:Name 
   X  Attribute:EmailAddress 
 O  Class:Tutor extends Person  Oracle:Tutor 
   O  Attribute:BankAccount  Oracle:bankAccount 
 X  Class:Student extends Person
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:DayOfWeek 
   O  Attribute:StartTime  Oracle:startTime 
   O  Attribute:EndTime  Oracle:endTime 
 X  Class:CancellationPolicy
   X  Attribute:CancellationThreshold 
   X  Attribute:StudentPenaltyRate 
   X  Attribute:TutorDiscountRate 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

Classes:
1. Person
    - Attributes: name, email
2. Tutor
    - Attributes: bankAccount, hourlyPrice
    - Associations: List<Subject> subjects, List<Availability> availabilities
3. Student
    - Associations: List<TutoringRequest> tutoringRequests
4. SubjectOffer
    - Attributes: subject, expertiseLevel
    - Associations: Tutor tutor
5. Availability
    - Attributes: dayOfWeek, startTime, endTime
    - Associations: Tutor tutor
6. TutoringRequest
    - Attributes: level, targetDateTime
    - Associations: Student student, Tutor tutor
7. TutoringSession
    - Attributes: date, time, isConfirmed, isCompleted
    - Associations: Tutor tutor, Student student
8. Payment
    - Attributes: paymentMethod, amount
    - Associations: TutoringSession tutoringSession
9. CancellationPolicy
    - Attributes: cancellationType, penaltyPercentage
    - Associations: Tutor tutor, Student student

Please note that the associations mentioned are based on the relationships described in the description."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, hourlyPrice: double): Represents a tutor with a bank account and hourly price for tutoring sessions.
3. Student: Represents a student.
4. SubjectOffer(subject: Subject, expertiseLevel: ExpertiseLevel): Represents a tutoring offer for a specific subject and expertise level.
5. Availability(dayOfWeek: String, startTime: String, endTime: String): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(level: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(date: DateTime, time: String, isConfirmed: boolean, isCompleted: boolean): Represents a tutoring session between a tutor and a student.
8. Payment(paymentMethod: String, amount: double): Represents a payment made for a tutoring session.
9. CancellationPolicy(cancellationType: String, penaltyPercentage: int): Represents the cancellation policy for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:isConfirmed 
   X  Attribute:isCompleted 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:SubjectOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:CancellationPolicy
   X  Attribute:cancellationType 
   X  Attribute:penaltyPercentage 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. **Subject**
   - Mathematics
   - Science
   - Literature
   - etc.

2. **ExpertiseLevel**
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. **Person**
   - Attributes:
     - name: String
     - email: String

2. **Tutor**
   - Inherits: Person
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List\<SubjectExpertise>
     - hourlyPrice: Map\<Subject, Double>
     - weeklyAvailability: List\<String>

3. **Student**
   - Inherits: Person

4. **TutoringSession**
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - paymentMethod: String
     - price: Double

### Attributes:
- **SubjectExpertise**
  - subject: Subject
  - level: ExpertiseLevel

- **LocalDateTime**
  - dayOfWeek: String
  - startTime: LocalTime
  - endTime: LocalTime

- **Map\<K, V>**
  - key: K
  - value: V

- **List\<T>**
  - elements: List of T

- **String**
- **Double**"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the expertise levels in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with name and email attributes.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<SubjectExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<String>): Represents a tutor with specific attributes for tutoring services.
3. Student(name: String, email: String): Represents a student with name and email attributes.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, paymentMethod: String, price: Double): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:paymentMethod 
   X  Attribute:price 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (list of TutoringOffer), availability (list of WeeklyAvailability)

3. Student
   - Associations: requests (list of TutoringRequest), payments (list of Payment)

4. TutoringOffer
   - Attributes: subject, levelOfExpertise, hourlyPrice
   - Associations: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor (Tutor)

6. TutoringRequest
   - Attributes: subject, levelOfTutoring, targetDateTime
   - Associations: student (Student), tutor (Tutor)

7. Payment
   - Attributes: amount, paymentMethod
   - Associations: student (Student)

### Attributes:
- Person: name (String), email (String)
- Tutor: bankAccount (String)
- TutoringOffer: subject (Subject), levelOfExpertise (LevelOfExpertise), hourlyPrice (double)
- WeeklyAvailability: dayOfWeek (String), startTime (Time), endTime (Time)
- TutoringRequest: subject (Subject), levelOfTutoring (LevelOfExpertise), targetDateTime (DateTime)
- Payment: amount (double), paymentMethod (String)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. LevelOfExpertise (Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email.
2. Tutor(bankAccount: String): Represents a tutor who can offer tutoring services.
3. Student: Represents a student who can browse and request tutoring sessions.
4. TutoringOffer(subject: Subject, levelOfExpertise: LevelOfExpertise, hourlyPrice: double): Represents an offer made by a tutor for tutoring in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, levelOfTutoring: LevelOfExpertise, targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session.
7. Payment(amount: double, paymentMethod: String): Represents a payment made by a student for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:levelOfExpertise 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
