------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List\<Subject\>
     - expertiseLevels: List\<ExpertiseLevel\>
     - hourlyPrice: Map\<Subject, Double\>
     - weeklyAvailability: Map\<DayOfWeek, List\<TimeRange\>\>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateAndTime: LocalDateTime

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateAndTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateAndTime: LocalDateTime
     - followUpSessionScheduled: boolean
     - paymentMethod: PaymentMethod

7. PaymentMethod
   - Attributes:
     - type: String

8. TimeRange
   - Attributes:
     - startTime: LocalTime
     - endTime: LocalTime

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List\<Subject\>
  - expertiseLevels: List\<ExpertiseLevel\>
  - hourlyPrice: Map\<Subject, Double\>
  - weeklyAvailability: Map\<DayOfWeek, List\<TimeRange\>\>

- Student:
  - name: String
  - email: String

- TutoringOffer:
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateAndTime: LocalDateTime

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateAndTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - dateAndTime: LocalDateTime
  - followUpSessionScheduled: boolean
  - paymentMethod: PaymentMethod

- PaymentMethod:
  - type: String

- TimeRange:
  - startTime: LocalTime
  - endTime: LocalTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (e.g. mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (e.g. primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: List<ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeRange>): Represents a tutor with specific attributes for tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateAndTime: LocalDateTime): Represents an offer made by a tutor for tutoring services.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateAndTime: LocalDateTime): Represents a request made by a student for tutoring services.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateAndTime: LocalDateTime, followUpSessionScheduled: boolean, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student.
7. PaymentMethod(type: String): Represents the payment method used for a tutoring session.
8. TimeRange(startTime: LocalTime, endTime: LocalTime): Represents a time range for availability or scheduling."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeRange> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateAndTime 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateAndTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateAndTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:primary 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:PaymentMethod
   X  Attribute:type 
 O  Class:TimeRange  Oracle:TutorAvailability 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - paymentMethod: PaymentMethod

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - followUpScheduled: boolean
     - price: Double

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - paymentMethod: PaymentMethod

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - followUpScheduled: boolean
  - price: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific subject expertise, hourly rates, and availability.
3. Student(paymentMethod: PaymentMethod): Represents a student with a chosen payment method.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, followUpScheduled: boolean, price: Double): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:paymentMethod 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:price 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: 
     - Offers: List of TutoringOffer
     - Availability: List of WeeklyAvailability

3. Student
   - Associations: 
     - Requests: List of TutoringRequest

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: 
     - Tutor: Tutor

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: 
     - Tutor: Tutor

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: 
     - Student: Student
     - Tutor: Tutor

7. TutoringSession
   - Attributes: dateTime, isConfirmed
   - Associations: 
     - Student: Student
     - Tutor: Tutor

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- WeeklyAvailability
  - dayOfWeek: String
  - startTime: String
  - endTime: String

- TutoringRequest
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - dateTime: DateTime
  - isConfirmed: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor can offer.
3. PaymentMethod (credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor with a bank account for payment.
3. Student: Represents a student who can make tutoring requests.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring services.
5. WeeklyAvailability(dayOfWeek: String, startTime: String, endTime: String): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(dateTime: DateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - name: String
     - email: String
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime
     - status: SessionStatus

5. WeeklyAvailability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

6. SessionStatus
   - Enum Values:
     - REQUESTED
     - CONFIRMED
     - CANCELLED_BY_STUDENT
     - CANCELLED_BY_TUTOR

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - name: String
  - email: String
  - bankAccount: String
  - expertise: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: List<WeeklyAvailability>

- Student:
  - name: String
  - email: String

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: LocalDateTime
  - status: SessionStatus

- WeeklyAvailability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime

- SessionStatus:
  - REQUESTED
  - CONFIRMED
  - CANCELLED_BY_STUDENT
  - CANCELLED_BY_TUTOR"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can have in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with specific attributes required for tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime, status: SessionStatus): Represents a tutoring session between a tutor and a student.
5. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions.
6. SessionStatus: Enum with values REQUESTED, CONFIRMED, CANCELLED_BY_STUDENT, CANCELLED_BY_TUTOR: Represents the status of a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:status 
 O  Class:SessionStatus  Oracle:SessionStatus
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - availability: List<Availability>

3. Student extends Person

4. Availability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

5. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

6. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

7. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - isConfirmed: boolean

8. Payment
   - Attributes:
     - student: Student
     - amount: double
     - paymentMethod: PaymentMethod

9. PaymentMethod
   - Attributes:
     - method: String

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPrice: double
  - availability: List<Availability>

- Student:
  - Inherits attributes from Person

- Availability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime

- TutoringOffer:
  - tutor: Tutor
  - subject: Subject

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateTime: LocalDateTime
  - isConfirmed: boolean

- Payment:
  - student: Student
  - amount: double
  - paymentMethod: PaymentMethod

- PaymentMethod:
  - method: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, availability: List<Availability>): Represents a tutor with additional attributes for tutoring services.
3. Student(name: String, email: String): Represents a student inheriting attributes from Person.
4. Availability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the availability of a tutor for tutoring sessions.
5. TutoringOffer(tutor: Tutor, subject: Subject): Represents an offer made by a tutor for a specific subject.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request made by a student to a tutor for tutoring.
7. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student.
8. Payment(student: Student, amount: double, paymentMethod: PaymentMethod): Represents a payment made by a student for a tutoring session.
9. PaymentMethod(method: String): Represents the method of payment used for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:PaymentMethod
   X  Attribute:method 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary school level
   - High school level
   - University level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>
   - Methods:
     - offerTutoring(subject: Subject, level: ExpertiseLevel, price: Double)
     - specifyAvailability(day: DayOfWeek, timeSlot: TimeSlot)

3. Student
   - Attributes:
     - name: String
     - email: String
   - Methods:
     - browseTutoringOffers(subject: Subject)
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, targetDateTime: LocalDateTime)
     - payForSession(paymentMethod: PaymentMethod)

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime
   - Methods:
     - confirmSession()
     - rescheduleSession(newDateTime: LocalDateTime)
     - cancelSession(canceller: Person)

5. PaymentMethod
   - CreditCard
   - WireTransfer

### Attributes:
- TimeSlot
  - startTime: LocalTime
  - endTime: LocalTime

- DayOfWeek
- LocalDateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary school level, High school level, University level): Represents the levels of expertise in a subject for tutors.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with bank account details, expertise in subjects, hourly prices, and weekly availability for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime): Represents a tutoring session between a tutor and a student with details such as subject, expertise level, and date/time.
5. PaymentMethod: Represents different payment methods like CreditCard and WireTransfer."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:PaymentMethod
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: Double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - expertise: ExpertiseLevel
     - hourlyPrice: Double

5. TutoringRequest
   - Attributes:
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: Date

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: Date
     - followUpScheduled: Boolean
     - paymentMethod: String

### Additional Notes:
- The `Tutor` class is associated with the `Person` class as tutors and students share common attributes like name and email.
- The `TutoringOffer` class represents the tutoring services offered by tutors in specific subjects.
- The `TutoringRequest` class is used by students to request tutoring sessions from designated tutors.
- The `TutoringSession` class represents an actual tutoring session between a tutor and a student, including details like date, payment method, etc."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: String): Represents a tutor with specific attributes like bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email.
4. TutoringOffer(subject: Subject, expertise: ExpertiseLevel, hourlyPrice: Double): Represents a tutoring offer with subject, expertise level, and hourly price.
5. TutoringRequest(subject: Subject, level: ExpertiseLevel, targetDateTime: Date): Represents a tutoring request with subject, expertise level, and target date/time.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: Date, followUpScheduled: Boolean, paymentMethod: String): Represents a tutoring session between a tutor and a student with details like date, follow-up scheduling, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertise 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateTime: LocalDateTime
     - followUpScheduled: boolean

7. Payment
   - Attributes:
     - student: Student
     - amount: Double
     - paymentMethod: PaymentMethod

8. PaymentMethod
   - Attributes:
     - creditCard: String
     - wireTransfer: String

### Attributes:
- DayOfWeek: Enum (e.g. MONDAY, TUESDAY, etc.)
- LocalTime: Class (from java.time package)
- LocalDateTime: Class (from java.time package)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific subject expertise, hourly prices, and availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents a tutoring offer made by a tutor for a specific subject and expertise level.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime, followUpScheduled: boolean): Represents a tutoring session between a tutor and a student.
7. Payment(student: Student, amount: Double, paymentMethod: PaymentMethod): Represents a payment made by a student for a tutoring session.
8. PaymentMethod(creditCard: String, wireTransfer: String): Represents the payment methods available for transactions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:**Enumerations:**
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

**Classes:**
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of SubjectExpertise, List of Availability

3. Student
   - Attributes: name, email

4. SubjectExpertise
   - Attributes: subject, expertiseLevel, hourlyPrice

5. Availability
   - Attributes: dayOfWeek, startTime, endTime

6. TutoringRequest
   - Attributes: student, tutor, subject, expertiseLevel, targetDateTime

7. TutoringSession
   - Attributes: student, tutor, subject, expertiseLevel, dateTime, paymentMethod
   - Associations: List of FollowUpTutoringSession

8. FollowUpTutoringSession
   - Attributes: dateTime

**Attributes:**
- User: name (String), email (String)
- Tutor: bankAccount (String)
- SubjectExpertise: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- Availability: dayOfWeek (String), startTime (Time), endTime (Time)
- TutoringRequest: student (Student), tutor (Tutor), subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: student (Student), tutor (Tutor), subject (Subject), expertiseLevel (ExpertiseLevel), dateTime (DateTime), paymentMethod (PaymentMethod)
- FollowUpTutoringSession: dateTime (DateTime)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:**Enumerations:**
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

**Classes:**
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with name, email, and bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents the expertise of a tutor in a specific subject.
5. Availability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, paymentMethod: PaymentMethod): Represents a tutoring session between a student and a tutor.
8. FollowUpTutoringSession(dateTime: DateTime): Represents a follow-up tutoring session scheduled after an initial session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:FollowUpTutoringSession
   X  Attribute:dateTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. PaymentMethod (e.g. Credit Card, Wire Transfer)

### Classes:
1. User
   - Attributes: name, email
   
2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: offers (List of TutoringOffer), availability (List of WeeklyAvailability)
   
3. Student
   - Attributes: name, email
   - Associations: tutoringRequests (List of TutoringRequest)
   
4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor (Tutor)
   
5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor (Tutor)
   
6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student (Student), tutor (Tutor), tutoringSession (TutoringSession)
   
7. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: tutor (Tutor), student (Student), followUpSession (TutoringSession), payment (Payment)
   
8. Payment
   - Attributes: amount, paymentMethod
   - Associations: tutoringSession (TutoringSession)

### Attributes (Additional to the ones mentioned in classes):
- Tutor: offers, availability
- Student: tutoringRequests
- TutoringRequest: tutoringSession
- TutoringSession: followUpSession, payment"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.
3. PaymentMethod(Credit Card, Wire Transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents an offer made by a tutor for tutoring in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session.
7. TutoringSession(dateTime: DateTime, isConfirmed: Boolean, isCancelled: Boolean): Represents a tutoring session between a tutor and a student.
8. Payment(amount: Double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
