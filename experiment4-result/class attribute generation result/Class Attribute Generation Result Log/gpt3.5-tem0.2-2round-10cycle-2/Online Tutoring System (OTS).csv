------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers: List of TutoringOffer
     - Availability: List of WeeklyAvailability

3. Student
   - Associations:
     - Requests: List of TutoringRequest

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: double

5. WeeklyAvailability
   - Attributes:
     - dayOfWeek: String
     - startTime: String
     - endTime: String

6. TutoringRequest
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: DateTime
   - Associations:
     - Tutor: Tutor

7. TutoringSession
   - Attributes:
     - dateTime: DateTime
     - isConfirmed: boolean
   - Associations:
     - Tutor: Tutor
     - Student: Student

8. Payment
   - Attributes:
     - paymentMethod: String
     - amount: double

### Note:
- The attributes and associations mentioned in the classes are based on the provided description.
- Additional methods and validations can be added to the classes based on the specific requirements of the system."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the expertise levels for tutoring offers.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor who offers tutoring services.
3. Student: Represents a student who can browse and request tutoring sessions.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: String, endTime: String): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session.
7. TutoringSession(dateTime: DateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student.
8. Payment(paymentMethod: String, amount: double): Represents a payment made for a tutoring session.

### Note:
- The classes and enumerations are designed based on the provided description of the Online Tutoring System.
- Additional attributes, associations, and methods can be added to the classes as needed for the system's functionality."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - availability: List\<WeeklyAvailability>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - followUpSession: boolean
     - paymentMethod: PaymentMethod

7. PaymentMethod
   - Attributes:
     - creditCard: String
     - wireTransfer: String

8. WeeklyAvailability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPrice: double
  - availability: List\<WeeklyAvailability>

- Student:
  - name: String
  - email: String

- TutoringOffer:
  - tutor: Tutor
  - subject: Subject

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateTime: LocalDateTime
  - followUpSession: boolean
  - paymentMethod: PaymentMethod

- PaymentMethod:
  - creditCard: String
  - wireTransfer: String

- WeeklyAvailability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the expertise levels of tutors in specific subjects.

Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, availability: List<WeeklyAvailability>): Represents a tutor with bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject): Represents a tutoring offer by a tutor for a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpSession: boolean, paymentMethod: PaymentMethod): Represents a tutoring session with tutor, student, subject, date/time, follow-up session flag, and payment method.
7. PaymentMethod(creditCard: String, wireTransfer: String): Represents the payment methods available for tutoring sessions.
8. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpSession 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (List of TutoringOffer), availability (List of WeeklyAvailability)

3. Student
   - Associations: requests (List of TutoringRequest)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor (Tutor)

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor (Tutor)

6. TutoringRequest
   - Attributes: levelOfTutoring, targetDateTime
   - Associations: student (Student), tutor (Tutor), tutoringSession (TutoringSession)

7. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: tutor (Tutor), student (Student)

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- TutoringOffer
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- WeeklyAvailability
  - dayOfWeek: DayOfWeek
  - startTime: Time
  - endTime: Time

- TutoringRequest
  - levelOfTutoring: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - dateTime: DateTime
  - isConfirmed: boolean
  - isCancelled: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week.

Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(bankAccount: String): Represents a tutor with a bank account for payment.
3. Student: Represents a student.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents a tutoring offer with subject, expertise level, and hourly price.
5. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(levelOfTutoring: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request with the level of tutoring and target date/time.
7. TutoringSession(dateTime: DateTime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session with date/time, confirmation status, and cancellation status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of SubjectExpertise, List of Availability

3. Student
   - Attributes: name, email
   - Associations: List of TutoringRequest

4. SubjectExpertise
   - Attributes: subject, expertiseLevel, hourlyPrice

5. Availability
   - Attributes: dayOfWeek, startTime, endTime

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: Tutor, Student, TutoringSession

7. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: Tutor, Student, Payment

8. Payment
   - Attributes: amount, paymentMethod

### Attributes:
- User: name (String), email (String)
- Tutor: bankAccount (String)
- SubjectExpertise: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- Availability: dayOfWeek (String), startTime (Time), endTime (Time)
- TutoringRequest: subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: dateTime (DateTime), isConfirmed (boolean), isCancelled (boolean)
- Payment: amount (double), paymentMethod (PaymentMethod)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.
3. PaymentMethod (credit card, wire transfer): Represents different payment methods for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with name, email, and bank account details.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents the expertise of a tutor in a specific subject.
5. Availability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the availability of a tutor for tutoring sessions.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(dateTime: DateTime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session with date and confirmation status.
8. Payment(amount: double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - paymentMethod: PaymentMethod
     - price: Double

5. PaymentMethod
   - Attributes:
     - creditCard: String
     - wireTransfer: String

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjects: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - name: String
  - email: String

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - paymentMethod: PaymentMethod
  - price: Double

- PaymentMethod:
  - creditCard: String
  - wireTransfer: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with bank account, subjects they can tutor, expertise levels, hourly prices, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, paymentMethod: PaymentMethod, price: Double): Represents a tutoring session with tutor, student, subject, level, scheduled and actual date/time, payment method, and price.
5. PaymentMethod(creditCard: String, wireTransfer: String): Represents payment methods for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:paymentMethod 
   X  Attribute:price 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of SubjectExpertise, List of WeeklyAvailability

3. Student
   - Attributes: name, email

4. SubjectExpertise
   - Attributes: subject, expertiseLevel, hourlyPrice

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime

6. TutoringRequest
   - Attributes: student, tutor, subject, expertiseLevel, targetDateTime

7. TutoringSession
   - Attributes: student, tutor, subject, expertiseLevel, dateTime, paymentMethod
   - Associations: List of FollowUpTutoringSession

8. FollowUpTutoringSession
   - Attributes: dateTime

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- SubjectExpertise
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- WeeklyAvailability
  - dayOfWeek: String
  - startTime: String
  - endTime: String

- TutoringRequest
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - dateTime: LocalDateTime
  - paymentMethod: PaymentMethod

- FollowUpTutoringSession
  - dateTime: LocalDateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the levels of expertise in a subject.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with name, email, and bank account information.
3. Student(name: String, email: String): Represents a student with name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents the expertise of a tutor in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: String, endTime: String): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime, paymentMethod: PaymentMethod): Represents a tutoring session between a student and a tutor.
8. FollowUpTutoringSession(dateTime: LocalDateTime): Represents a follow-up tutoring session scheduled after an initial tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:FollowUpTutoringSession
   X  Attribute:dateTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bank account, hourly price
   - Associations: Subject expertise, weekly availability

3. Student
   - Attributes: name, email
   - Associations: Tutoring request

4. TutoringSession
   - Attributes: date, time, status
   - Associations: Tutor, Student

### Attributes:
1. User
   - name: String
   - email: String

2. Tutor
   - bank account: String
   - hourly price: Double

3. Student
   - N/A

4. TutoringSession
   - date: Date
   - time: Time
   - status: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can provide.
3. PaymentMethod(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address for both tutors and students.
2. Tutor(name: String, email: String, bank account: String, hourly price: Double): Represents a tutor with additional attributes like bank account and hourly price for tutoring sessions.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(date: Date, time: Time, status: String): Represents a tutoring session with date, time, and status information."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bank account  Oracle:bankAccount 
   X  Attribute:hourly price 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:card 
   X  Attribute:transfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)
3. Payment method (e.g. credit card, wire transfer)

### Classes:
1. Person
   - Attributes: name, email address

2. Tutor
   - Attributes: bank account, hourly price
   - Associations: Subject expertise, Weekly availability

3. Student
   - Associations: Tutoring request, Payment

4. TutoringSession
   - Attributes: date, time
   - Associations: Tutor, Student

5. TutoringRequest
   - Attributes: level of tutoring, target date, target time
   - Associations: Tutor, Student

6. Payment
   - Attributes: payment method, amount

### Attributes:
1. Person
   - name: String
   - email address: String

2. Tutor
   - bank account: String
   - hourly price: double

3. TutoringSession
   - date: Date
   - time: Time

4. TutoringRequest
   - level of tutoring: Level of expertise
   - target date: Date
   - target time: Time

5. Payment
   - payment method: Payment method
   - amount: double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. Level of expertise(primary school level, high school level, university level): Represents the expertise levels in a subject.
3. Payment method(credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: double): Represents a tutor with additional attributes like bank account and hourly price for tutoring.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(date: Date, time: Time): Represents a tutoring session with a specific date and time.
5. TutoringRequest(levelOfTutoring: Level of expertise, targetDate: Date, targetTime: Time): Represents a tutoring request with the level of tutoring, target date, and time.
6. Payment(paymentMethod: Payment method, amount: double): Represents a payment with the method and amount."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:Level of expertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Payment method
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Relationships: 
     - Offers tutoring sessions in Subject with ExpertiseLevel and hourlyPrice
     - Specifies weekly availability for tutoring sessions

3. Student
   - Relationships: 
     - Makes tutoring requests for Subject with ExpertiseLevel
     - Pays for tutoring sessions

4. TutoringSession
   - Attributes: date, time
   - Relationships: 
     - Involves a Tutor and a Student
     - May have follow-up sessions

### Attributes:
1. Tutor
   - name
   - email
   - bankAccount

2. Student
   - name
   - email

3. TutoringSession
   - date
   - time
"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: string, email: string): Represents a generic person with a name and email.
2. Tutor(name: string, email: string, bankAccount: string): Represents a tutor who offers tutoring services and provides bank account information.
3. Student(name: string, email: string): Represents a student who can browse tutoring offers and make requests.
4. TutoringSession(date: date, time: time): Represents a tutoring session with a specific date and time involving a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrices: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateTime: LocalDateTime
     - followUpScheduled: boolean

7. Payment
   - Attributes:
     - student: Student
     - amount: Double
     - paymentMethod: PaymentMethod

8. PaymentMethod
   - Attributes:
     - method: String

### Attributes:
- name: String (User, Student)
- email: String (User, Student)
- bankAccount: String (Tutor)
- subjects: List<Subject> (Tutor)
- expertiseLevels: Map<Subject, ExpertiseLevel> (Tutor)
- hourlyPrices: Map<Subject, Double> (Tutor)
- weeklyAvailability: Map<DayOfWeek, List<LocalTime>> (Tutor)
- tutor: Tutor (TutoringOffer, TutoringRequest, TutoringSession)
- subject: Subject (TutoringOffer, TutoringRequest, TutoringSession)
- expertiseLevel: ExpertiseLevel (TutoringOffer, TutoringRequest, TutoringSession)
- hourlyPrice: Double (TutoringOffer)
- student: Student (TutoringRequest, TutoringSession, Payment)
- targetDateTime: LocalDateTime (TutoringRequest)
- dateTime: LocalDateTime (TutoringSession)
- followUpScheduled: boolean (TutoringSession)
- amount: Double (Payment)
- paymentMethod: PaymentMethod (Payment)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrices: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes for offering tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents an offer made by a tutor for tutoring services in a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a request made by a student to a tutor for tutoring services.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime, followUpScheduled: boolean): Represents a tutoring session between a tutor and a student.
7. Payment(student: Student, amount: Double, paymentMethod: PaymentMethod): Represents a payment made by a student for a tutoring session.
8. PaymentMethod(method: String): Represents the method of payment for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrices 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod
   X  Attribute:method 
