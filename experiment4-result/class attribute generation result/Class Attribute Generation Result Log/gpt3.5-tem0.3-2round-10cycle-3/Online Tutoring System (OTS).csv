------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of Subject, List of ExpertiseLevel, List of Availability, List of TutoringOffer

3. Student
   - Attributes: name, email
   - Associations: List of TutoringRequest

4. Availability
   - Attributes: dayOfWeek, startTime, endTime

5. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: Tutor

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: Tutor, Student

7. TutoringSession
   - Attributes: dateTime, status
   - Associations: Tutor, Student

8. Payment
   - Attributes: amount, paymentMethod
   - Associations: TutoringSession

### Attributes:
- User: name (String), email (String)
- Tutor: bankAccount (String)
- Availability: dayOfWeek (String), startTime (DateTime), endTime (DateTime)
- TutoringOffer: subject (Subject), expertiseLevel (ExpertiseLevel), hourlyPrice (double)
- TutoringRequest: subject (Subject), expertiseLevel (ExpertiseLevel), targetDateTime (DateTime)
- TutoringSession: dateTime (DateTime), status (String)
- Payment: amount (double), paymentMethod (PaymentMethod)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject for tutoring offers.
3. PaymentMethod (credit card, wire transfer): Represents the methods of payment for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email for registration.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information for registration.
3. Student(name: String, email: String): Represents a student with a name and email for registration.
4. Availability(dayOfWeek: String, startTime: DateTime, endTime: DateTime): Represents the availability of a tutor for tutoring sessions.
5. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring in a specific subject.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request made by a student for tutoring from a specific tutor.
7. TutoringSession(dateTime: DateTime, status: String): Represents a tutoring session with date/time and status information.
8. Payment(amount: double, paymentMethod: PaymentMethod): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:status 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount, hourlyPrice
   - Associations: availability (WeeklyAvailability), tutoringSubjects (List of SubjectExpertise)

3. Student
   - Attributes: name, email
   - Associations: tutoringRequests (List of TutoringRequest)

4. SubjectExpertise
   - Attributes: subject, expertiseLevel

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime

6. TutoringRequest
   - Attributes: student, tutor, subject, expertiseLevel, targetDateTime
   - Associations: tutoringSession (TutoringSession)

7. TutoringSession
   - Attributes: tutor, student, subject, expertiseLevel, dateTime, status (e.g. requested, confirmed, cancelled)

### Attributes:
- User
   - name: String
   - email: String

- Tutor
   - bankAccount: String
   - hourlyPrice: double

- Student
   - None specific to this class

- SubjectExpertise
   - None specific to this class

- WeeklyAvailability
   - dayOfWeek: String
   - startTime: Time
   - endTime: Time

- TutoringRequest
   - None specific to this class

- TutoringSession
   - dateTime: DateTime
   - status: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: double): Represents a tutor with additional attributes for bank account and hourly price.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel): Represents the expertise level of a tutor in a specific subject.
5. WeeklyAvailability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, status: String): Represents a tutoring session between a tutor and a student with status information."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:status 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: LevelOfExpertise
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - tutor: Tutor

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: DateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: DateTime
     - followUpSessionScheduled: boolean

### Attributes:
- DateTime: Represents date and time for scheduling tutoring sessions."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. LevelOfExpertise(Primary School Level, High School Level, University Level): Represents the level of expertise for tutors in a given subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address for both tutors and students.
2. Tutor(bankAccount: String, expertise: LevelOfExpertise, hourlyPrice: double, weeklyAvailability: String): Represents a tutor with additional attributes like bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, tutor: Tutor): Represents an offer for tutoring in a specific subject by a tutor.
5. TutoringRequest(student: Student, tutor: Tutor, levelOfTutoring: LevelOfExpertise, targetDateTime: DateTime): Represents a request made by a student to a tutor for a tutoring session with specified details.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: DateTime, followUpSessionScheduled: boolean): Represents a tutoring session between a tutor and a student with date and time details."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:tutor 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
 X  Class:LevelOfExpertise
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor extends Person
   - Attributes:
     - bankAccount: String
     - hourlyPrice: double
     - weeklyAvailability: List<Availability>
     - subjectsOffered: List<SubjectExpertise>

3. Student extends Person

4. SubjectExpertise
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel

5. Availability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

6. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

7. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - followUpScheduled: boolean

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - hourlyPrice: double
  - weeklyAvailability: List<Availability>
  - subjectsOffered: List<SubjectExpertise>

- Student:
  - None

- SubjectExpertise:
  - subject: Subject
  - expertiseLevel: ExpertiseLevel

- Availability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - followUpScheduled: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor extends Person (bankAccount: String, hourlyPrice: double, weeklyAvailability: List<Availability>, subjectsOffered: List<SubjectExpertise): Represents a tutor with additional attributes like bank account, hourly price, weekly availability, and subjects offered.
3. Student extends Person: Represents a student with basic attributes inherited from Person.
4. SubjectExpertise (subject: Subject, expertiseLevel: ExpertiseLevel): Represents the expertise level of a tutor in a specific subject.
5. Availability (dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the availability of a tutor for tutoring sessions.
6. TutoringRequest (student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession (tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, scheduledDateTime: LocalDateTime, followUpScheduled: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringRequest   Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession   Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:scheduledDateTime 
   X  Attribute:followUpScheduled 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person 
   X  Attribute:bankAccount 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
   X  Attribute:subjectsOffered 
 X  Class:Student extends Person
 X  Class:SubjectExpertise 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
 O  Class:Availability   Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
2. LevelOfExpertise

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjects: List<Subject>
     - expertiseLevels: Map<Subject, LevelOfExpertise>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - dateAndTime: LocalDateTime

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: LevelOfExpertise
     - dateAndTime: LocalDateTime
     - followUpSessionScheduled: boolean

7. Payment
   - Attributes:
     - student: Student
     - tutor: Tutor
     - amount: Double
     - paymentMethod: String

8. CancellationPolicy
   - Attributes:
     - cancellationTimeLimit: Duration
     - studentCancellationPenalty: Double
     - tutorCancellationDiscount: Double

## Attributes:
- DayOfWeek: Enum
- LocalTime: Class
- LocalDateTime: Class
- Duration: Class"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject: [Represents the different subjects for tutoring offers.]
2. LevelOfExpertise: [Represents the level of expertise in a subject for tutoring.]

Classes:
1. Person(name: String, email: String): [Represents a generic person with a name and email address.]
2. Tutor(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, LevelOfExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): [Represents a tutor with specific attributes related to tutoring services.]
3. Student(name: String, email: String): [Represents a student with a name and email address.]
4. TutoringOffer(tutor: Tutor, subject: Subject, levelOfTutoring: LevelOfExpertise, dateAndTime: LocalDateTime): [Represents an offer made by a tutor for tutoring services in a specific subject.]
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, levelOfTutoring: LevelOfExpertise, targetDateTime: LocalDateTime): [Represents a request made by a student for tutoring services from a specific tutor.]
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: LevelOfExpertise, dateAndTime: LocalDateTime, followUpSessionScheduled: boolean): [Represents a tutoring session between a tutor and a student.]
7. Payment(student: Student, tutor: Tutor, amount: Double, paymentMethod: String): [Represents a payment made for a tutoring session.]
8. CancellationPolicy(cancellationTimeLimit: Duration, studentCancellationPenalty: Double, tutorCancellationDiscount: Double): [Represents the cancellation policy for tutoring sessions.]"
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:LevelOfExpertise> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateAndTime 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateAndTime 
   X  Attribute:followUpSessionScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:LevelOfExpertise
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:CancellationPolicy
   X  Attribute:cancellationTimeLimit 
   X  Attribute:studentCancellationPenalty 
   X  Attribute:tutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
2. ExpertiseLevel

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers tutoring sessions
     - Specifies weekly availability

3. Student
   - Associations:
     - Makes tutoring requests
     - Pays for tutoring sessions

4. TutoringSession
   - Attributes:
     - dateAndTime: Date
     - price: Double
   - Associations:
     - Involves a tutor and a student

### Attributes:
1. Tutor
   - expertise: Map<Subject, ExpertiseLevel>
   - hourlyPrice: Map<Subject, Double>
   - weeklyAvailability: List<WeeklyAvailability>

2. Student
   - creditCardInfo: String
   - wireTransferInfo: String

3. TutoringSession
   - status: String
   - followUpScheduled: Boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor who offers tutoring sessions, specifies expertise, hourly prices, and weekly availability.
3. Student(name: String, email: String, creditCardInfo: String, wireTransferInfo: String): Represents a student who makes tutoring requests and pays for sessions.
4. TutoringSession(dateAndTime: Date, price: Double, status: String, followUpScheduled: Boolean): Represents a tutoring session involving a tutor and a student, with date/time, price, status, and follow-up scheduling."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCardInfo 
   X  Attribute:wireTransferInfo 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateAndTime 
   X  Attribute:price 
   X  Attribute:status 
   X  Attribute:followUpScheduled 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: string
     - email: string

2. Tutor
   - Attributes:
     - bankAccount: string
     - subjects: list of Subject
     - expertiseLevels: list of ExpertiseLevel
     - hourlyPrice: decimal
     - weeklyAvailability: list of strings

3. Student
   - Attributes:
     - name: string
     - email: string

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: datetime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: datetime
     - followUpScheduled: boolean
     - paymentMethod: string

### Attributes (Additional):
- TutoringSession
  - cancelledBy: string (possible values: ""student"", ""tutor"")
  - cancellationPolicy: string

These are the classes and attributes based on the provided description."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: string, email: string): Represents a generic person with a name and email address.
2. Tutor(bankAccount: string, subjects: list of Subject, expertiseLevels: list of ExpertiseLevel, hourlyPrice: decimal, weeklyAvailability: list of strings): Represents a tutor who can offer tutoring in specific subjects at different expertise levels.
3. Student(name: string, email: string): Represents a student with a name and email address.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel): Represents an offer made by a tutor for tutoring in a specific subject and expertise level.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: datetime): Represents a request made by a student to a tutor for a tutoring session.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: datetime, followUpScheduled: boolean, paymentMethod: string): Represents a tutoring session between a tutor and a student.

These are the classes and enumerations based on the provided description."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. LevelOfExpertise (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount, hourlyPrice
   - Associations: List of Subject expertise, List of weekly availability

3. Student
   - Attributes: name, email
   - Associations: List of Tutor requests

4. TutoringSession
   - Attributes: date, time, status (confirmed, cancelled)
   - Associations: Tutor, Student

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - hourlyPrice: Double

- Student
  - N/A

- TutoringSession
  - date: Date
  - time: Time
  - status: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. LevelOfExpertise(Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, hourlyPrice: Double): Represents a tutor with additional attributes like bank account and hourly price.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(date: Date, time: Time, status: String): Represents a tutoring session with date, time, and status attributes."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:status 
 X  Class:LevelOfExpertise
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: ExpertiseLevel
     - dateAndTime: Date
     - isConfirmed: boolean

### Attributes:
- Tutor
  - name: String
  - email: String
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPrice: double
  - weeklyAvailability: String

- Student
  - name: String
  - email: String

- TutoringSession
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - levelOfTutoring: ExpertiseLevel
  - dateAndTime: Date
  - isConfirmed: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents a tutor who can offer online tutoring in specific subjects.
3. Student(name: String, email: String): Represents a student who can browse and request tutoring sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: ExpertiseLevel, dateAndTime: Date, isConfirmed: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateAndTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - name: String
     - email: String
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrices: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>
     - tutoringSessions: List<TutoringSession>

3. Student
   - Attributes:
     - name: String
     - email: String
     - tutoringRequests: List<TutoringRequest>
     - tutoringSessions: List<TutoringSession>

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateAndTime: LocalDateTime
     - isConfirmed: boolean
     - isCancelled: boolean
     - paymentAmount: Double
     - paymentMethod: PaymentMethod

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateAndTime: LocalDateTime
     - isConfirmed: boolean

6. TimeSlot
   - Attributes:
     - startTime: LocalTime
     - endTime: LocalTime

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - name: String
  - email: String
  - bankAccount: String
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrices: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>
  - tutoringSessions: List<TutoringSession>

- Student:
  - name: String
  - email: String
  - tutoringRequests: List<TutoringRequest>
  - tutoringSessions: List<TutoringSession>

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateAndTime: LocalDateTime
  - isConfirmed: boolean
  - isCancelled: boolean
  - paymentAmount: Double
  - paymentMethod: PaymentMethod

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateAndTime: LocalDateTime
  - isConfirmed: boolean

- TimeSlot:
  - startTime: LocalTime
  - endTime: LocalTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise a tutor can have in a subject.
3. PaymentMethod (credit card, wire transfer): Represents the different methods of payment available for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrices: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>, tutoringSessions: List<TutoringSession>): Represents a tutor with details such as bank account, subjects offered, expertise levels, hourly prices, availability, and tutoring sessions.
3. Student(name: String, email: String, tutoringRequests: List<TutoringRequest>, tutoringSessions: List<TutoringSession>): Represents a student with details such as tutoring requests and sessions.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateAndTime: LocalDateTime, isConfirmed: boolean, isCancelled: boolean, paymentAmount: Double, paymentMethod: PaymentMethod): Represents a tutoring session with details like tutor, student, subject, date and time, confirmation status, cancellation status, payment amount, and payment method.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateAndTime: LocalDateTime, isConfirmed: boolean): Represents a tutoring request made by a student to a tutor with details like subject, expertise level, target date and time, and confirmation status.
6. TimeSlot(startTime: LocalTime, endTime: LocalTime): Represents a time slot with start and end times."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrices 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
   X  Attribute:tutoringSessions 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateAndTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
   X  Attribute:paymentAmount 
   X  Attribute:paymentMethod 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateAndTime 
   X  Attribute:isConfirmed 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
 O  Class:TimeSlot  Oracle:TutorAvailability 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
