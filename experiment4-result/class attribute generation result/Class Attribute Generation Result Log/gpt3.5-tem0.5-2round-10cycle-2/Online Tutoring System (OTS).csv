------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of Expertise (e.g. primary school level, high school level, university level)

## Classes:
1. Person
   - Attributes:
     - Name
     - Email Address

2. Tutor
   - Attributes:
     - Bank Account
     - List of Subjects they offer tutoring in
     - List of Expertise Levels for each subject
     - List of Hourly Prices for each subject
     - Weekly Availability

3. Student
   - Attributes:
     - List of Tutoring Requests
     - List of Tutoring Sessions
     - Credit Card Information

4. TutoringRequest
   - Attributes:
     - Subject
     - Level of Tutoring
     - Target Date and Time
     - Status (Pending, Confirmed, Rescheduled, Cancelled)

5. TutoringSession
   - Attributes:
     - Tutor
     - Student
     - Date and Time
     - Follow-up Session Schedule
     - Payment Information
     - Status (Scheduled, Completed, Cancelled)

## Additional Attributes:
- Tutoring Session Price
- Payment Method (Credit Card, Wire Transfer)
- Cancellation Policy
- Discount Policy"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects in which tutoring can be offered.
2. Level of Expertise(primary school level, high school level, university level): Represents the levels of expertise a tutor can have in a subject.

Classes:
1. Person(Name: String, EmailAddress: String): Represents a person with a name and an email address.
2. Tutor(BankAccount: String, Subjects: List<Subject>, ExpertiseLevels: List<Level of Expertise>, HourlyPrices: List<Double>, WeeklyAvailability: List<String>): Represents a tutor with bank account details, subjects they offer tutoring in, expertise levels, hourly prices, and weekly availability.
3. Student(TutoringRequests: List<TutoringRequest>, TutoringSessions: List<TutoringSession>, CreditCardInfo: String): Represents a student with tutoring requests, sessions, and credit card information.
4. TutoringRequest(Subject: Subject, LevelOfTutoring: Level of Expertise, TargetDateTime: DateTime, Status: String): Represents a tutoring request with subject, level of tutoring, target date and time, and status.
5. TutoringSession(Tutor: Tutor, Student: Student, DateTime: DateTime, FollowUpSessionSchedule: DateTime, PaymentInfo: String, Status: String): Represents a tutoring session with tutor, student, date and time, follow-up session schedule, payment information, and status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:BankAccount  Oracle:bankAccount 
   X  Attribute:Subjects 
   X  Attribute:ExpertiseLevels 
   X  Attribute:HourlyPrices 
   X  Attribute:WeeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:TutoringRequests 
   X  Attribute:TutoringSessions 
   X  Attribute:CreditCardInfo 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Subject 
   X  Attribute:LevelOfTutoring 
   X  Attribute:TargetDateTime 
   X  Attribute:Status 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:DateTime 
   X  Attribute:FollowUpSessionSchedule 
   X  Attribute:PaymentInfo 
   X  Attribute:Status 
 X  Class:Level of Expertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:Person
   X  Attribute:Name 
   X  Attribute:EmailAddress 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)

### Classes:
1. User
    - Attributes:
        - name: String
        - email: String

2. Tutor
    - Attributes:
        - name: String
        - email: String
        - bankAccount: String
        - expertise: Level of expertise
        - hourlyPrice: Double
        - availability: List of tuples (Day, Time)

3. Student
    - Attributes:
        - name: String
        - email: String

4. TutoringOffer
    - Attributes:
        - tutor: Tutor
        - subject: Subject
        - level: Level of expertise

5. TutoringRequest
    - Attributes:
        - student: Student
        - tutor: Tutor
        - subject: Subject
        - level: Level of expertise
        - targetDateTime: Date

6. TutoringSession
    - Attributes:
        - tutor: Tutor
        - student: Student
        - subject: Subject
        - level: Level of expertise
        - dateTime: Date
        - followUpScheduled: Boolean
        - paymentMethod: String
        - price: Double

### Additional Notes:
- The User class can be a base class for both Tutor and Student classes.
- The Tutor class has additional attributes related to tutoring services.
- The availability attribute in the Tutor class can be represented as a list of tuples where each tuple contains the day and time slot available for tutoring.
- The TutoringOffer class represents the tutoring services offered by a tutor in a specific subject and expertise level.
- The TutoringRequest class represents a request made by a student to a tutor for a tutoring session.
- The TutoringSession class represents an actual tutoring session between a tutor and a student, including details such as date, time, payment, etc."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects available for tutoring services.
2. Level of expertise (primary school level, high school level, university level): Represents the expertise levels offered by tutors.

### Classes:
1. User(name: String, email: String): Represents a user with basic information like name and email.
2. Tutor(name: String, email: String, bankAccount: String, expertise: Level of expertise, hourlyPrice: Double, availability: List of tuples (Day, Time)): Represents a tutor with details such as expertise, pricing, and availability.
3. Student(name: String, email: String): Represents a student with basic information like name and email.
4. TutoringOffer(tutor: Tutor, subject: Subject, level: Level of expertise): Represents a tutoring offer made by a tutor for a specific subject and expertise level.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: Level of expertise, targetDateTime: Date): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: Level of expertise, dateTime: Date, followUpScheduled: Boolean, paymentMethod: String, price: Double): Represents a tutoring session between a tutor and a student with details like date, time, payment, etc."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
   X  Attribute:price 
 X  Class:Level of expertise 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. Level of expertise (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - Name (String)
     - Email Address (String)

2. Tutor
   - Attributes:
     - Name (String)
     - Email Address (String)
     - Bank Account (String)
     - List of Subjects (List of Subject)
     - List of Expertise Levels (List of Level of Expertise)
     - List of Hourly Prices (Map<Subject, Double>)
     - Weekly Availability (Map<Day, Time Slot>)

3. Student
   - Attributes:
     - Name (String)
     - Email Address (String)

4. TutoringOffer
   - Attributes:
     - Tutor (Tutor)
     - Subject (Subject)
     - Level of Tutoring (Level of Expertise)
     - Target Date and Time (DateTime)
     - Status (enum: REQUESTED, CONFIRMED, CANCELLED)

5. TutoringSession
   - Attributes:
     - Tutor (Tutor)
     - Student (Student)
     - Subject (Subject)
     - Date and Time (DateTime)
     - Status (enum: SCHEDULED, COMPLETED, CANCELLED)
     - Payment Method (enum: CREDIT_CARD, WIRE_TRANSFER)

### Note:
- The classes and attributes are based on the provided description and may need further refinement based on additional requirements or constraints."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. Level of expertise(primary school level, high school level, university level): Represents the expertise levels in a subject.

### Classes:
1. User(Name: String, Email Address: String): Represents a user with a name and email address.
2. Tutor(Name: String, Email Address: String, Bank Account: String, Subjects: List<Subject>, Expertise Levels: List<Level of Expertise>, Hourly Prices: Map<Subject, Double>, Weekly Availability: Map<Day, Time Slot>): Represents a tutor with details like bank account, subjects they can teach, expertise levels, hourly prices, and availability.
3. Student(Name: String, Email Address: String): Represents a student with a name and email address.
4. TutoringOffer(Tutor: Tutor, Subject: Subject, Level of Tutoring: Level of Expertise, Target Date and Time: DateTime, Status: enum): Represents a tutoring offer with details like tutor, subject, level of tutoring, target date and time, and status.
5. TutoringSession(Tutor: Tutor, Student: Student, Subject: Subject, Date and Time: DateTime, Status: enum, Payment Method: enum): Represents a tutoring session with tutor, student, subject, date and time, status, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:Name  Oracle:name 
   X  Attribute:Email Address 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:Name 
   X  Attribute:Email Address 
   O  Attribute:Bank Account  Oracle:bankAccount 
   X  Attribute:Subjects 
   X  Attribute:Expertise Levels 
   X  Attribute:Hourly Prices 
   X  Attribute:Double> 
   X  Attribute:Weekly Availability 
   X  Attribute:Slot> 
 O  Class:Student  Oracle:Student
   X  Attribute:Name 
   X  Attribute:Email Address 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:Tutor 
   X  Attribute:Subject 
   X  Attribute:Level of Tutoring 
   X  Attribute:Target Date and Time 
   X  Attribute:Status 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:Subject 
   X  Attribute:Date and Time 
   X  Attribute:Status 
   X  Attribute:Payment Method 
 X  Class:Level of expertise
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: string
     - email: string

2. Tutor
   - Attributes:
     - name: string
     - email: string
     - bankAccount: string
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - availability: string (weekly availability)

3. Student
   - Attributes:
     - name: string
     - email: string

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateAndTime: DateTime
     - status: string (confirmed, cancelled, completed)

### Attributes:
- User
  - name: string
  - email: string

- Tutor
  - name: string
  - email: string
  - bankAccount: string
  - expertise: ExpertiseLevel
  - hourlyPrice: double
  - availability: string

- Student
  - name: string
  - email: string

- TutoringSession
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateAndTime: DateTime
  - status: string"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. User(name: string, email: string): Represents a user with basic information like name and email.
2. Tutor(name: string, email: string, bankAccount: string, expertise: ExpertiseLevel, hourlyPrice: double, availability: string): Represents a tutor with specific details such as bank account, expertise level, hourly price, and availability.
3. Student(name: string, email: string): Represents a student with basic information like name and email.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateAndTime: DateTime, status: string): Represents a tutoring session between a tutor and a student with details like subject, expertise level, date and time, and status."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateAndTime 
   X  Attribute:status 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers (Subject, ExpertiseLevel, hourlyPrice)
     - Availability (dayOfWeek, startTime, endTime)
     - TutoringSession
     - CancellationPolicy

3. Student
   - Associations:
     - TutoringRequest
     - TutoringSession

4. TutoringRequest
   - Attributes:
     - level: ExpertiseLevel
     - targetDateTime: DateTime
   - Associations:
     - Tutor

5. TutoringSession
   - Attributes:
     - dateTime: DateTime
     - paymentMethod: String
   - Associations:
     - Tutor
     - Student

6. CancellationPolicy
   - Attributes:
     - studentCancellationPenalty: double
     - tutorCancellationDiscount: double

### Attributes (not associated with a specific class):
- hourlyPrice (associated with Offers)
- dayOfWeek (associated with Availability)
- startTime (associated with Availability)
- endTime (associated with Availability)
- creditCardInfo (associated with TutoringSession)
- wireTransferInfo (associated with TutoringSession)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects available for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the levels of expertise a tutor can have in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(bankAccount: String): Represents a tutor who offers tutoring services and provides bank account information.
3. Student: Represents a student who can browse tutoring offers and make tutoring requests.
4. TutoringRequest(level: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(dateTime: DateTime, paymentMethod: String): Represents a tutoring session between a tutor and a student.
6. CancellationPolicy(studentCancellationPenalty: double, tutorCancellationDiscount: double): Represents the cancellation policies for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:CancellationPolicy
   X  Attribute:studentCancellationPenalty 
   X  Attribute:tutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes: name, email

2. Tutor
   - Attributes: bankAccount
   - Associations: offers (list of TutoringOffer), availability (list of WeeklyAvailability)

3. Student
   - Associations: requests (list of TutoringRequest)

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice
   - Associations: tutor

5. WeeklyAvailability
   - Attributes: dayOfWeek, startTime, endTime
   - Associations: tutor

6. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Associations: student, tutor

7. TutoringSession
   - Attributes: dateTime, isConfirmed, isCancelled
   - Associations: tutor, student

8. Payment
   - Attributes: amount, paymentMethod
   - Associations: student, tutor, tutoringSession

### Associations:
- Tutor offers TutoringOffer
- Tutor has WeeklyAvailability
- Student makes TutoringRequest
- TutoringRequest is related to TutoringOffer
- TutoringSession is related to TutoringRequest
- TutoringSession involves Student and Tutor
- Payment is related to TutoringSession"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability.

### Classes:
1. Person(name: string, email: string): Represents a general person with a name and email.
2. Tutor(bankAccount: string): Represents a tutor with a bank account for payments.
3. Student: Represents a student in the system.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents an offer made by a tutor for tutoring.
5. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: time, endTime: time): Represents the weekly availability of a tutor.
6. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: datetime): Represents a request made by a student to a tutor.
7. TutoringSession(dateTime: datetime, isConfirmed: boolean, isCancelled: boolean): Represents a tutoring session between a student and a tutor.
8. Payment(amount: double, paymentMethod: string): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCancelled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. **Subject**:
   - Mathematics
   - Science
   - Literature
   - etc.
   
2. **ExpertiseLevel**:
   - Primary school level
   - High school level
   - University level

### Classes:
1. **Person**:
   - Attributes:
     - Name (String)
     - Email (String)

2. **Tutor**:
   - Inherits from Person
   - Attributes:
     - BankAccount (String)
     - SubjectsOffered (List of Subject)
     - ExpertiseLevels (List of ExpertiseLevel)
     - HourlyPriceMap (Map<Subject, Double>)
     - WeeklyAvailability (List of Availability)

3. **Student**:
   - Inherits from Person

4. **Availability**:
   - Attributes:
     - DayOfWeek (String)
     - StartTime (Time)
     - EndTime (Time)

5. **TutoringRequest**:
   - Attributes:
     - Tutor (Tutor)
     - LevelOfTutoring (ExpertiseLevel)
     - TargetDateTime (DateTime)

6. **TutoringSession**:
   - Attributes:
     - Tutor (Tutor)
     - Student (Student)
     - ScheduledDateTime (DateTime)
     - FollowUpSessionScheduled (boolean)

### Attributes:
- **Person**:
  - Name (String)
  - Email (String)
  
- **Tutor**:
  - BankAccount (String)
  - SubjectsOffered (List of Subject)
  - ExpertiseLevels (List of ExpertiseLevel)
  - HourlyPriceMap (Map<Subject, Double>)
  - WeeklyAvailability (List of Availability)
  
- **Availability**:
  - DayOfWeek (String)
  - StartTime (Time)
  - EndTime (Time)
  
- **TutoringRequest**:
  - Tutor (Tutor)
  - LevelOfTutoring (ExpertiseLevel)
  - TargetDateTime (DateTime)
  
- **TutoringSession**:
  - Tutor (Tutor)
  - Student (Student)
  - ScheduledDateTime (DateTime)
  - FollowUpSessionScheduled (boolean)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.
   
2. ExpertiseLevel(Primary school level, High school level, University level): Represents the levels of expertise in a subject for tutors.

### Classes:
1. Person(Name: String, Email: String): Represents a person with a name and email address.

2. Tutor(Name: String, Email: String, BankAccount: String, SubjectsOffered: List of Subject, ExpertiseLevels: List of ExpertiseLevel, HourlyPriceMap: Map<Subject, Double>, WeeklyAvailability: List of Availability): Represents a tutor with registration details, subjects offered, expertise levels, pricing, and availability.

3. Student(Name: String, Email: String): Represents a student with a name and email address.

4. Availability(DayOfWeek: String, StartTime: Time, EndTime: Time): Represents the weekly availability for tutoring sessions.

5. TutoringRequest(Tutor: Tutor, LevelOfTutoring: ExpertiseLevel, TargetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.

6. TutoringSession(Tutor: Tutor, Student: Student, ScheduledDateTime: DateTime, FollowUpSessionScheduled: boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:Name 
   X  Attribute:Email 
   O  Attribute:BankAccount  Oracle:bankAccount 
   X  Attribute:SubjectsOffered 
   X  Attribute:ExpertiseLevels 
   X  Attribute:HourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:WeeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:Name 
   X  Attribute:Email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Tutor 
   X  Attribute:LevelOfTutoring 
   X  Attribute:TargetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:ScheduledDateTime 
   X  Attribute:FollowUpSessionScheduled 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:Name  Oracle:name 
   O  Attribute:Email  Oracle:email 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:DayOfWeek 
   O  Attribute:StartTime  Oracle:startTime 
   O  Attribute:EndTime  Oracle:endTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - ...

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level
   - ...

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Inherits from Person
   - Attributes:
     - creditCard: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime
     - confirmed: boolean
     - cancelledByStudent: boolean
     - cancelledByTutor: boolean

## Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

- Student:
  - creditCard: String

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: LocalDateTime
  - confirmed: boolean
  - cancelledByStudent: boolean
  - cancelledByTutor: boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, ...): Represents the different subjects available for tutoring.
2. ExpertiseLevel(Primary School Level, High School Level, University Level, ...): Represents the expertise levels a tutor can have in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with bank account details, expertise in subjects, hourly prices, and weekly availability.
3. Student(name: String, email: String, creditCard: String): Represents a student inheriting from Person with a credit card attribute.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime, confirmed: boolean, cancelledByStudent: boolean, cancelledByTutor: boolean): Represents a tutoring session between a tutor and a student with details such as subject, date, and confirmation status."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCard 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:confirmed 
   X  Attribute:cancelledByStudent 
   X  Attribute:cancelledByTutor 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
   X  Attribute:... 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevel: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: ExpertiseLevel
     - dateTime: LocalDateTime
     - confirmed: Boolean

### Attributes:
1. Person
   - name: String
   - email: String

2. Tutor
   - bankAccount: String
   - subjectsOffered: List<Subject>
   - expertiseLevel: Map<Subject, ExpertiseLevel>
   - hourlyPrice: Map<Subject, Double>
   - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - name: String
   - email: String

4. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - levelOfTutoring: ExpertiseLevel
   - dateTime: LocalDateTime
   - confirmed: Boolean"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise a tutor can have in a subject.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevel: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes for offering tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: ExpertiseLevel, dateTime: LocalDateTime, confirmed: Boolean): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevel 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:dateTime 
   X  Attribute:confirmed 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Subjects: List<Subject>
     - ExpertiseLevels: List<ExpertiseLevel>
     - HourlyPrices: Map<Subject, Double>
     - WeeklyAvailability: List<String> (e.g. ""Thursday 10:00-11:30"")

3. Student
   - Associations:
     - TutorRequests: List<TutorRequest>
     - CreditCardInfo: CreditCard
     - BankAccountInfo: BankAccount

4. TutorRequest
   - Attributes:
     - levelOfTutoring: ExpertiseLevel
     - targetDateTime: DateTime

5. TutoringSession
   - Attributes:
     - startTime: DateTime
     - endTime: DateTime
   - Associations:
     - Tutor: Tutor
     - Student: Student

6. CreditCard
   - Attributes:
     - cardNumber: String
     - expiryDate: DateTime

7. BankAccount
   - Attributes:
     - accountNumber: String

### Attributes (Additional to the classes):
- Tutor
  - name: String
  - email: String

- Student
  - name: String
  - email: String

- TutorRequest
  - student: Student

- TutoringSession
  - sessionPrice: Double

- CreditCard
  - cvv: String

- BankAccount
  - ownerName: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the different levels of expertise a tutor can have in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with a name, email address, and bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutorRequest(levelOfTutoring: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request from a student to a tutor.
5. TutoringSession(startTime: DateTime, endTime: DateTime, sessionPrice: Double): Represents a tutoring session between a tutor and a student.
6. CreditCard(cardNumber: String, expiryDate: DateTime, cvv: String): Represents credit card information for payment.
7. BankAccount(accountNumber: String, ownerName: String): Represents bank account information for payment."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:startTime 
   X  Attribute:endTime 
   X  Attribute:sessionPrice 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:TutorRequest
   X  Attribute:levelOfTutoring 
   X  Attribute:targetDateTime 
 X  Class:CreditCard
   X  Attribute:cardNumber 
   X  Attribute:expiryDate 
   X  Attribute:cvv 
 X  Class:BankAccount
   X  Attribute:accountNumber 
   X  Attribute:ownerName 
