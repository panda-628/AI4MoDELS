------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - levelOfTutoring: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: String
     - price: Double

### Attributes:
- Person
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

- Student
  - name: String
  - email: String

- TutoringSession
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - levelOfTutoring: ExpertiseLevel
  - scheduledDateTime: LocalDateTime
  - actualDateTime: LocalDateTime
  - followUpScheduled: boolean
  - paymentMethod: String
  - price: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.
3. DayOfWeek (Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for availability.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with specific subject expertise, pricing, and availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, levelOfTutoring: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: String, price: Double): Represents a tutoring session between a tutor and a student with details such as subject, timing, and payment."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:levelOfTutoring 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
   X  Attribute:price 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:DayOfWeek 
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - tutor: Tutor

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - level: ExpertiseLevel
     - targetDateTime: DateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: DateTime
     - followUpSessionScheduled: boolean
     - paymentMethod: String

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPrice: double
  - weeklyAvailability: String

- Student
  - name: String
  - email: String

- TutoringOffer
  - subject: Subject
  - tutor: Tutor

- TutoringRequest
  - student: Student
  - tutor: Tutor
  - level: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - tutor: Tutor
  - student: Student
  - dateTime: DateTime
  - followUpSessionScheduled: boolean
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents a tutor with bank account, expertise level, hourly price, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, tutor: Tutor): Represents a tutoring offer with a subject and associated tutor.
5. TutoringRequest(student: Student, tutor: Tutor, level: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request with student, tutor, expertise level, and target date/time.
6. TutoringSession(tutor: Tutor, student: Student, dateTime: DateTime, followUpSessionScheduled: boolean, paymentMethod: String): Represents a tutoring session with tutor, student, date/time, follow-up session status, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:tutor 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Methods: offerTutoringSession(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: string)

3. Student
   - Attributes: name, email
   - Methods: browseTutoringOffers(subject: Subject), makeTutoringRequest(tutor: Tutor, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime)

4. TutoringSession
   - Attributes: tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, status
   - Methods: confirmSession(), rescheduleSession(newDateTime: DateTime), cancelSession(canceller: User)

5. Payment
   - Attributes: amount: double, paymentMethod

### Attributes:
1. Tutor
   - name: string
   - email: string
   - bankAccount: string

2. Student
   - name: string
   - email: string

3. TutoringSession
   - tutor: Tutor
   - student: Student
   - subject: Subject
   - expertiseLevel: ExpertiseLevel
   - dateTime: DateTime
   - status: string

4. Payment
   - amount: double
   - paymentMethod: string"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: string, email: string): Represents a generic user with a name and email.
2. Tutor(name: string, email: string, bankAccount: string): Represents a tutor with additional bank account information for payments.
3. Student(name: string, email: string): Represents a student with a name and email.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, status: string): Represents a tutoring session between a tutor and a student.
5. Payment(amount: double, paymentMethod: string): Represents a payment made for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:status 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: PaymentMethod
     - sessionPrice: Double
     - sessionStatus: SessionStatus

### Attributes:
1. Tutor
   - name: String
   - email: String

2. Tutor
   - bankAccount: String

3. Tutor
   - subjectsOffered: List<Subject>

4. Tutor
   - expertiseLevels: Map<Subject, ExpertiseLevel>

5. Tutor
   - hourlyPrice: Map<Subject, Double>

6. Tutor
   - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

7. Student
   - name: String
   - email: String

8. TutoringSession
   - tutor: Tutor

9. TutoringSession
   - student: Student

10. TutoringSession
    - subject: Subject

11. TutoringSession
    - level: ExpertiseLevel

12. TutoringSession
    - scheduledDateTime: LocalDateTime

13. TutoringSession
    - actualDateTime: LocalDateTime

14. TutoringSession
    - followUpScheduled: boolean

15. TutoringSession
    - paymentMethod: PaymentMethod

16. TutoringSession
    - sessionPrice: Double

17. TutoringSession
    - sessionStatus: SessionStatus"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (Mathematics, Science, Literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (Primary School Level, High School Level, University Level): Represents the levels of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a generic user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with registration details and tutoring information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: PaymentMethod, sessionPrice: Double, sessionStatus: SessionStatus): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
   X  Attribute:sessionPrice 
   O  Attribute:sessionStatus  Oracle:sessionStatus 
 X  Class:ExpertiseLevel 
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)
3. PaymentMethod (e.g. credit card, wire transfer)

### Classes:
1. User
   - Attributes: name, email

2. Tutor
   - Attributes: name, email, bankAccount
   - Associations: List of SubjectExpertise, List of Availability

3. Student
   - Attributes: name, email

4. SubjectExpertise
   - Attributes: subject, expertiseLevel, hourlyPrice

5. Availability
   - Attributes: dayOfWeek, startTime, endTime

6. TutoringRequest
   - Attributes: student, tutor, subject, expertiseLevel, targetDateTime

7. TutoringSession
   - Attributes: student, tutor, subject, expertiseLevel, dateTime, paymentMethod
   - Associations: List of FollowUpSession

8. FollowUpSession
   - Attributes: dateTime

### Attributes:
- User
  - name: String
  - email: String

- Tutor
  - bankAccount: String

- SubjectExpertise
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - hourlyPrice: double

- Availability
  - dayOfWeek: String
  - startTime: Time
  - endTime: Time

- TutoringRequest
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: DateTime

- TutoringSession
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - dateTime: DateTime
  - paymentMethod: PaymentMethod

- FollowUpSession
  - dateTime: DateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.
3. PaymentMethod (credit card, wire transfer): Represents different payment methods for tutoring sessions.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account information.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double): Represents the expertise of a tutor in a specific subject.
5. Availability(dayOfWeek: String, startTime: Time, endTime: Time): Represents the weekly availability of a tutor for tutoring sessions.
6. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
7. TutoringSession(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: DateTime, paymentMethod: PaymentMethod): Represents a tutoring session between a student and a tutor.
8. FollowUpSession(dateTime: DateTime): Represents a follow-up tutoring session scheduled after the initial session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:PaymentMethod 
   X  Attribute:card 
   X  Attribute:transfer 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
 O  Class:Availability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:FollowUpSession
   X  Attribute:dateTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. Mathematics, Science, Literature)
2. ExpertiseLevel (e.g. Primary School Level, High School Level, University Level)
3. DayOfWeek (e.g. Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

3. Student extends Person
   - Attributes:
     - tutoringRequests: List<TutoringRequest>
     - creditCardInfo: String

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - followUpSessionScheduled: boolean
     - paymentMethod: String

### Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjectsOffered: List<Subject>
  - expertiseLevels: Map<Subject, ExpertiseLevel>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

- Student:
  - tutoringRequests: List<TutoringRequest>
  - creditCardInfo: String

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - dateTime: LocalDateTime
  - followUpSessionScheduled: boolean
  - paymentMethod: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the levels of expertise a tutor can have in a subject.
3. DayOfWeek(Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday): Represents the days of the week for scheduling tutoring sessions.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with specific subject expertise, pricing, and availability.
3. Student(name: String, email: String, tutoringRequests: List<TutoringRequest>, creditCardInfo: String): Represents a student with tutoring requests and payment information.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor for a specific subject and expertise level.
5. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, followUpSessionScheduled: boolean, paymentMethod: String): Represents a tutoring session between a tutor and a student with details such as date, time, and payment method."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:tutoringRequests 
   X  Attribute:creditCardInfo 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:DayOfWeek
   X  Attribute:Monday 
   X  Attribute:Tuesday 
   X  Attribute:Wednesday 
   X  Attribute:Thursday 
   X  Attribute:Friday 
   X  Attribute:Saturday 
   X  Attribute:Sunday 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - scheduledDateTime: LocalDateTime
     - actualDateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: String
     - price: Double
     - status: SessionStatus

### Attributes:
- SessionStatus: Enum {SCHEDULED, CONFIRMED, CANCELLED}
- DayOfWeek: Enum {MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY}
- LocalTime: Class from Java.time package
- LocalDateTime: Class from Java.time package"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor has in a specific subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes related to tutoring offers.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, actualDateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: String, price: Double, status: SessionStatus): Represents a tutoring session between a tutor and a student with relevant details."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
   X  Attribute:price 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.)
2. ExpertiseLevel (primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevel: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<LocalTime>>

3. Student
   - Attributes:
     - name: String
     - email: String

4. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - targetDateTime: LocalDateTime

5. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - dateTime: LocalDateTime
     - followUpScheduled: boolean
     - paymentMethod: PaymentMethod

6. PaymentMethod
   - Attributes:
     - creditCard: CreditCard
     - wireTransfer: WireTransfer

7. CreditCard
   - Attributes:
     - cardNumber: String
     - expiryDate: LocalDate

8. WireTransfer
   - Attributes:
     - accountNumber: String

### Attributes:
- Tutor:
  - name: String
  - email: String

- Student:
  - name: String
  - email: String

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - dateTime: LocalDateTime
  - followUpScheduled: boolean
  - paymentMethod: PaymentMethod

- CreditCard:
  - cardNumber: String
  - expiryDate: LocalDate

- WireTransfer:
  - accountNumber: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature, etc.): Represents the different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String, subjectsOffered: List<Subject>, expertiseLevel: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>): Represents a tutor with specific attributes for tutoring services.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
5. TutoringSession(tutor: Tutor, student: Student, dateTime: LocalDateTime, followUpScheduled: boolean, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student.
6. PaymentMethod(creditCard: CreditCard, wireTransfer: WireTransfer): Represents the payment methods available for tutoring sessions.
7. CreditCard(cardNumber: String, expiryDate: LocalDate): Represents a credit card with a card number and expiry date.
8. WireTransfer(accountNumber: String): Represents a wire transfer account with an account number."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevel 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:dateTime 
   X  Attribute:followUpScheduled 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
 X  Class:CreditCard
   X  Attribute:cardNumber 
   X  Attribute:expiryDate 
 X  Class:WireTransfer
   X  Attribute:accountNumber 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<Subject>
     - expertiseLevels: Map<Subject, ExpertiseLevel>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>
   - Methods:
     - offerTutoringSession(subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime): void
     - confirmTutoringSession(request: TutoringRequest): void
     - offerAlternativeSession(request: TutoringRequest, dateTime: LocalDateTime): void
     - cancelTutoringSession(session: TutoringSession): void

3. Student extends Person
   - Methods:
     - browseTutoringOffers(subject: Subject): List<TutoringOffer>
     - makeTutoringRequest(offer: TutoringOffer, level: ExpertiseLevel, dateTime: LocalDateTime): TutoringRequest
     - payForSession(session: TutoringSession, paymentMethod: PaymentMethod): void

4. TutoringOffer
   - Attributes:
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - dateTime: LocalDateTime
     - status: SessionStatus
   - Methods:
     - scheduleFollowUpSession(dateTime: LocalDateTime): void

### Attributes:
- SessionStatus: Enum { SCHEDULED, CONFIRMED, CANCELLED }
- TimeSlot: Class { startTime: LocalTime, endTime: LocalTime }
- DayOfWeek: Enum { MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY }
- PaymentMethod: Enum { CREDIT_CARD, WIRE_TRANSFER }"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the level of expertise a tutor can offer in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with specific attributes related to tutoring services.
3. Student(name: String, email: String): Represents a student inheriting from Person class with additional methods for browsing and making tutoring requests.
4. TutoringOffer(tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double): Represents an offer made by a tutor for tutoring services in a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime): Represents a request made by a student to a tutor for a tutoring session.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, dateTime: LocalDateTime, status: SessionStatus): Represents a tutoring session with attributes related to the session and methods for scheduling follow-up sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:dateTime 
   X  Attribute:status 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - subjectsOffered: List<SubjectExpertise>
     - hourlyPrice: Map<Subject, Double>
     - weeklyAvailability: List<WeeklyAvailability>

3. Student
   - Attributes:
     - name: String
     - email: String

4. SubjectExpertise
   - Attributes:
     - subject: Subject
     - expertiseLevel: ExpertiseLevel

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - targetDateTime: LocalDateTime

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - expertiseLevel: ExpertiseLevel
     - dateTime: LocalDateTime
     - followUpSessionScheduled: boolean

7. Payment
   - Attributes:
     - student: Student
     - amount: Double
     - paymentMethod: PaymentMethod

8. WeeklyAvailability
   - Attributes:
     - dayOfWeek: DayOfWeek
     - startTime: LocalTime
     - endTime: LocalTime

9. PaymentMethod
   - Enum Values:
     - CREDIT_CARD
     - WIRE_TRANSFER

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - subjectsOffered: List<SubjectExpertise>
  - hourlyPrice: Map<Subject, Double>
  - weeklyAvailability: List<WeeklyAvailability>

- Student:
  - name: String
  - email: String

- SubjectExpertise:
  - subject: Subject
  - expertiseLevel: ExpertiseLevel

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - targetDateTime: LocalDateTime

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - expertiseLevel: ExpertiseLevel
  - dateTime: LocalDateTime
  - followUpSessionScheduled: boolean

- Payment:
  - student: Student
  - amount: Double
  - paymentMethod: PaymentMethod

- WeeklyAvailability:
  - dayOfWeek: DayOfWeek
  - startTime: LocalTime
  - endTime: LocalTime

- PaymentMethod:
  - Enum Values:
    - CREDIT_CARD
    - WIRE_TRANSFER"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise in a subject.

### Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(bankAccount: String, subjectsOffered: List<SubjectExpertise>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: List<WeeklyAvailability>): Represents a tutor with bank account details, subjects offered, hourly prices, and weekly availability.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. SubjectExpertise(subject: Subject, expertiseLevel: ExpertiseLevel): Represents the expertise level of a tutor in a specific subject.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, dateTime: LocalDateTime, followUpSessionScheduled: boolean): Represents a tutoring session between a tutor and a student.
7. Payment(student: Student, amount: Double, paymentMethod: PaymentMethod): Represents a payment made by a student for a tutoring session.
8. WeeklyAvailability(dayOfWeek: DayOfWeek, startTime: LocalTime, endTime: LocalTime): Represents the weekly availability of a tutor for tutoring sessions.
9. PaymentMethod(Enum Values: CREDIT_CARD, WIRE_TRANSFER): Represents the payment methods available for making payments."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:dateTime 
   X  Attribute:followUpSessionScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 X  Class:SubjectExpertise
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
 O  Class:WeeklyAvailability  Oracle:TutorAvailability 
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 X  Class:PaymentMethod
   X  Attribute:Enum Values 
   X  Attribute:WIRE_TRANSFER 
