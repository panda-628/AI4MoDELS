------------------------------------------------------------
------------------------------------------------------------
---------------------1/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - ...

2. ExpertiseLevel
   - Primary School Level
   - High School Level
   - University Level
   - ...

3. PaymentMethod
   - Credit Card
   - Wire Transfer

## Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPriceMap: Map<Subject, Double>
     - weeklyAvailability: List<String>
     - tutoringSessions: List<TutoringSession>
   - Methods:
     - offerTutoringSession()
     - confirmTutoringSession()
     - cancelTutoringSession()

3. Student
   - Attributes:
     - tutoringRequests: List<TutoringRequest>
     - paymentMethod: PaymentMethod
   - Methods:
     - browseTutoringOffers()
     - makeTutoringRequest()
     - scheduleFollowUpSession()
     - payForSession()

4. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime
     - isConfirmed: boolean

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: LocalDateTime

## Attributes:
- Person:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String
  - expertise: ExpertiseLevel
  - hourlyPriceMap: Map<Subject, Double>
  - weeklyAvailability: List<String>
  - tutoringSessions: List<TutoringSession>

- Student:
  - tutoringRequests: List<TutoringRequest>
  - paymentMethod: PaymentMethod

- TutoringSession:
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: LocalDateTime
  - isConfirmed: boolean

- TutoringRequest:
  - student: Student
  - tutor: Tutor
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: LocalDateTime"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature, ...): Represents the different subjects in which tutoring can be offered.
2. ExpertiseLevel(Primary School Level, High School Level, University Level, ...): Represents the expertise level of tutors in a specific subject.
3. PaymentMethod(Credit Card, Wire Transfer): Represents the different payment methods available for tutoring sessions.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and an email address.
2. Tutor(bankAccount: String, expertise: ExpertiseLevel, hourlyPriceMap: Map<Subject, Double>, weeklyAvailability: List<String>, tutoringSessions: List<TutoringSession>): Represents a tutor who offers tutoring sessions in various subjects.
3. Student(tutoringRequests: List<TutoringRequest>, paymentMethod: PaymentMethod): Represents a student who can browse tutoring offers and make tutoring requests.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime, isConfirmed: boolean): Represents a tutoring session between a tutor and a student.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, dateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPriceMap 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:tutoringRequests 
   X  Attribute:paymentMethod 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
   X  Attribute:... 
 X  Class:PaymentMethod
   X  Attribute:Card 
   X  Attribute:Transfer 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
------------------------------------------------------------
------------------------------------------------------------
---------------------2/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. **Subject**
   - Mathematics
   - Science
   - Literature
   - etc.

2. **ExpertiseLevel**
   - Primary school level
   - High school level
   - University level

### Classes:
1. **Person**
   - Attributes:
     - Name (String)
     - Email (String)

2. **Tutor**
   - Inherits from: Person
   - Attributes:
     - BankAccount (String)
     - TutoringSubjects (List of Subject)
     - TutoringExpertiseLevels (Map of Subject to ExpertiseLevel)
     - HourlyPricePerSubject (Map of Subject to Double)
     - WeeklyAvailability (List of WeeklyTimeSlot)

3. **Student**
   - Inherits from: Person

4. **TutoringOffer**
   - Attributes:
     - Tutor (Tutor)
     - Subject (Subject)
     - ExpertiseLevel (ExpertiseLevel)
     - HourlyPrice (Double)

5. **TutoringRequest**
   - Attributes:
     - Student (Student)
     - Tutor (Tutor)
     - Subject (Subject)
     - ExpertiseLevel (ExpertiseLevel)
     - TargetDateTime (DateTime)

6. **TutoringSession**
   - Attributes:
     - Tutor (Tutor)
     - Student (Student)
     - Subject (Subject)
     - ExpertiseLevel (ExpertiseLevel)
     - ScheduledDateTime (DateTime)
     - FollowUpScheduled (Boolean)
     - PaymentMethod (String)

7. **Payment**
   - Attributes:
     - Student (Student)
     - Tutor (Tutor)
     - Amount (Double)
     - PaymentMethod (String)

8. **CancellationPolicy**
   - Attributes:
     - CancellationTimeThreshold (Time)
     - StudentCancellationPenalty (Double)
     - TutorCancellationDiscount (Double)

### Attributes (Additional to those in classes):
- **WeeklyTimeSlot**
  - DayOfWeek (Enum)
  - StartTime (Time)
  - EndTime (Time)

- **DateTime**
  - Date (Date)
  - Time (Time)

- **Time**
  - Hours (int)
  - Minutes (int)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents different subjects that can be tutored.
2. ExpertiseLevel(Primary school level, High school level, University level): Represents the level of expertise a tutor has in a specific subject.

### Classes:
1. Person(Name: String, Email: String): Represents a generic person with a name and email address.
2. Tutor(Name: String, Email: String, BankAccount: String, TutoringSubjects: List of Subject, TutoringExpertiseLevels: Map of Subject to ExpertiseLevel, HourlyPricePerSubject: Map of Subject to Double, WeeklyAvailability: List of WeeklyTimeSlot): Represents a tutor with specific attributes related to tutoring services.
3. Student(Name: String, Email: String): Represents a student with a name and email address.
4. TutoringOffer(Tutor: Tutor, Subject: Subject, ExpertiseLevel: ExpertiseLevel, HourlyPrice: Double): Represents an offer made by a tutor for tutoring services.
5. TutoringRequest(Student: Student, Tutor: Tutor, Subject: Subject, ExpertiseLevel: ExpertiseLevel, TargetDateTime: DateTime): Represents a request made by a student to a tutor for tutoring services.
6. TutoringSession(Tutor: Tutor, Student: Student, Subject: Subject, ExpertiseLevel: ExpertiseLevel, ScheduledDateTime: DateTime, FollowUpScheduled: Boolean, PaymentMethod: String): Represents a tutoring session between a tutor and a student.
7. Payment(Student: Student, Tutor: Tutor, Amount: Double, PaymentMethod: String): Represents a payment made for a tutoring session.
8. CancellationPolicy(CancellationTimeThreshold: Time, StudentCancellationPenalty: Double, TutorCancellationDiscount: Double): Represents the policy for cancellation of tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:Name 
   X  Attribute:Email 
   O  Attribute:BankAccount  Oracle:bankAccount 
   X  Attribute:TutoringSubjects 
   X  Attribute:TutoringExpertiseLevels 
   X  Attribute:HourlyPricePerSubject 
   X  Attribute:WeeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:Name 
   X  Attribute:Email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:Tutor 
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   O  Attribute:HourlyPrice  Oracle:hourlyPrice 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Student 
   X  Attribute:Tutor 
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:TargetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:ScheduledDateTime 
   X  Attribute:FollowUpScheduled 
   X  Attribute:PaymentMethod 
 O  Class:Payment  Oracle:Payment
   X  Attribute:Student 
   X  Attribute:Tutor 
   X  Attribute:Amount 
   X  Attribute:PaymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:Name  Oracle:name 
   O  Attribute:Email  Oracle:email 
 X  Class:CancellationPolicy
   X  Attribute:CancellationTimeThreshold 
   X  Attribute:StudentCancellationPenalty 
   X  Attribute:TutorCancellationDiscount 
------------------------------------------------------------
------------------------------------------------------------
---------------------3/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
2. TutoringLevel

### Classes:
1. User
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
   - Associations:
     - Offers tutoring in multiple subjects
     - Specifies expertise level for each subject
     - Sets hourly price for tutoring sessions
     - Specifies weekly availability

3. Student
   - Associations:
     - Makes tutoring requests to tutors

4. TutoringSession
   - Attributes:
     - date: Date
     - time: Time
     - price: Double
   - Associations:
     - Involves a tutor and a student

### Attributes:
- User:
  - name: String
  - email: String

- Tutor:
  - bankAccount: String

- TutoringSession:
  - date: Date
  - time: Time
  - price: Double"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature, etc.): Represents different subjects for tutoring offers.
2. TutoringLevel(primary school level, high school level, university level): Represents the level of expertise a tutor has in a subject.

### Classes:
1. User(name: String, email: String): Represents a user in the system with a name and an email address.
2. Tutor(bankAccount: String): Represents a tutor who provides tutoring services, specifies expertise level, hourly price, and weekly availability.
3. Student: Represents a student who can browse tutoring offers and make tutoring requests.
4. TutoringSession(date: Date, time: Time, price: Double): Represents a tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:price 
 X  Class:TutoringLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------4/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:Enumerations:
1. Subject (e.g., Mathematics, Science, Literature)
2. ExpertiseLevel (e.g., Primary School Level, High School Level, University Level)

Classes:
1. User
   - Attributes: name, email

2. Tutor (inherits from User)
   - Attributes: bankAccount, hourlyPrice
   - Relationships: List of Subjects, List of WeeklyAvailability

3. Student (inherits from User)

4. TutoringOffer
   - Attributes: Subject, ExpertiseLevel

5. TutoringRequest
   - Attributes: Tutor, Subject, ExpertiseLevel, TargetDateTime

6. TutoringSession
   - Attributes: Tutor, Student, ScheduledDateTime, FollowUpScheduled

7. Payment
   - Attributes: PaymentMethod

8. CancellationPolicy
   - Attributes: CancellationPenalty

Attributes:
- name (String): Name of the user
- email (String): Email address of the user
- bankAccount (String): Bank account information of the tutor
- hourlyPrice (double): Hourly price for tutoring sessions
- List of Subjects: List of subjects in which the tutor offers tutoring
- List of WeeklyAvailability: List of weekly availability slots for tutoring sessions
- ScheduledDateTime: Date and time of the tutoring session
- FollowUpScheduled (boolean): Indicates if a follow-up session is scheduled
- PaymentMethod: Method of payment for the tutoring session
- CancellationPenalty: Penalty rules for session cancellations"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(Mathematics, Science, Literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level): Represents the level of expertise a tutor can provide.

Classes:
1. User(name: String, email: String): Represents a user with a name and email address.
2. Tutor(bankAccount: String, hourlyPrice: double): Represents a tutor with bank account information and hourly price for tutoring sessions. Inherits from User.
3. Student: Represents a student user. Inherits from User.
4. TutoringOffer(Subject: Subject, ExpertiseLevel: ExpertiseLevel): Represents a tutoring offer with subject and expertise level specified.
5. TutoringRequest(Tutor: Tutor, Subject: Subject, ExpertiseLevel: ExpertiseLevel, TargetDateTime: DateTime): Represents a tutoring request made by a student to a tutor.
6. TutoringSession(Tutor: Tutor, Student: Student, ScheduledDateTime: DateTime, FollowUpScheduled: boolean): Represents a tutoring session between a tutor and a student.
7. Payment(PaymentMethod: String): Represents a payment made for a tutoring session.
8. CancellationPolicy(CancellationPenalty: String): Represents the policy for session cancellations."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:hourlyPrice 
 O  Class:Student  Oracle:Student
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:Tutor 
   X  Attribute:Subject 
   X  Attribute:ExpertiseLevel 
   X  Attribute:TargetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:Tutor 
   X  Attribute:Student 
   X  Attribute:ScheduledDateTime 
   X  Attribute:FollowUpScheduled 
 O  Class:Payment  Oracle:Payment
   X  Attribute:PaymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 X  Class:CancellationPolicy
   X  Attribute:CancellationPenalty 
------------------------------------------------------------
------------------------------------------------------------
---------------------5/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject
2. ExpertiseLevel

## Classes:
1. User
2. Tutor
3. Student
4. TutoringSession

## Attributes:
### User:
- name: string
- email: string

### Tutor:
- bankAccount: string
- subjectsOffered: List<Subject>
- expertiseLevels: Map<Subject, ExpertiseLevel>
- hourlyPrice: Map<Subject, double>
- weeklyAvailability: Map<DayOfWeek, List<TimeSlot>>

### Student:
- name: string
- email: string

### TutoringSession:
- tutor: Tutor
- student: Student
- subject: Subject
- expertiseLevel: ExpertiseLevel
- targetDateTime: LocalDateTime
- actualDateTime: LocalDateTime
- paymentMethod: PaymentMethod

### PaymentMethod (Enum):
- CREDIT_CARD
- WIRE_TRANSFER"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature, etc.): Represents different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Indicates the level of expertise a tutor has in a specific subject.

Classes:
1. User(name: string, email: string): Represents a generic user with a name and email address.
2. Tutor(bankAccount: string, subjectsOffered: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, double>, weeklyAvailability: Map<DayOfWeek, List<TimeSlot>): Represents a tutor with specific attributes related to tutoring services.
3. Student(name: string, email: string): Represents a student with a name and email address.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: LocalDateTime, actualDateTime: LocalDateTime, paymentMethod: PaymentMethod): Represents a tutoring session between a tutor and a student with relevant details."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:subjectsOffered 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<TimeSlot> 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
   X  Attribute:actualDateTime 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
------------------------------------------------------------
------------------------------------------------------------
---------------------6/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject
   - Mathematics
   - Science
   - Literature
   - etc.

2. ExpertiseLevel
   - Primary school level
   - High school level
   - University level

### Classes:
1. Person
   - Attributes:
     - name: String
     - email: String

2. Tutor
   - Attributes:
     - bankAccount: String
     - expertise: ExpertiseLevel
     - hourlyPrice: double
     - weeklyAvailability: String

3. Student
   - Attributes:
     - creditCardInfo: String

4. TutoringOffer
   - Attributes:
     - subject: Subject
     - tutor: Tutor

5. TutoringRequest
   - Attributes:
     - student: Student
     - tutor: Tutor
     - level: ExpertiseLevel
     - targetDateTime: Date

6. TutoringSession
   - Attributes:
     - tutor: Tutor
     - student: Student
     - scheduledDateTime: Date
     - followUpSession: boolean

### Additional Considerations:
- Payment: Payment details and logic can be modeled in a separate Payment class with appropriate attributes and methods.
- CancellationPolicy: Cancellation rules and penalties can be modeled in a separate CancellationPolicy class with methods to calculate penalties based on the cancellation timing."
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, etc.): Represents the different subjects for tutoring offers.

2. ExpertiseLevel(Primary school level, High school level, University level): Represents the levels of expertise in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with name and email attributes.

2. Tutor(name: String, email: String, bankAccount: String, expertise: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents a tutor with specific attributes required for tutoring.

3. Student(name: String, email: String, creditCardInfo: String): Represents a student with name, email, and credit card information.

4. TutoringOffer(subject: Subject, tutor: Tutor): Represents an offer for tutoring in a specific subject by a tutor.

5. TutoringRequest(student: Student, tutor: Tutor, level: ExpertiseLevel, targetDateTime: Date): Represents a request for tutoring from a student to a tutor.

6. TutoringSession(tutor: Tutor, student: Student, scheduledDateTime: Date, followUpSession: boolean): Represents a tutoring session between a tutor and a student with scheduling details.

7. Payment(amount: double, paymentMethod: String): Represents a payment made for a tutoring session with the amount and payment method.

8. CancellationPolicy(): Represents the rules and penalties for canceling a tutoring session, determining the refund or discount amount."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
   X  Attribute:creditCardInfo 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:tutor 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:scheduledDateTime 
   X  Attribute:followUpSession 
 O  Class:Payment  Oracle:Payment
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:CancellationPolicy
------------------------------------------------------------
------------------------------------------------------------
---------------------7/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

### Classes:
1. Person
   - Attributes:
     - name : String
     - email : String

2. Tutor extends Person
   - Attributes:
     - bankAccount : String
     - subjects : List<Subject>
     - expertiseLevels : Map<Subject, ExpertiseLevel>
     - hourlyPrice : Map<Subject, Double>
     - weeklyAvailability : Map<DayOfWeek, List<LocalTime>>
     - tutoringSessions : List<TutoringSession>

3. Student extends Person
   - Attributes:
     - tutoringRequests : List<TutoringRequest>

4. TutoringSession
   - Attributes:
     - tutor : Tutor
     - student : Student
     - subject : Subject
     - level : ExpertiseLevel
     - scheduledDateTime : LocalDateTime
     - followUpSessionScheduled : boolean
     - paymentStatus : PaymentStatus

5. TutoringRequest
   - Attributes:
     - student : Student
     - tutor : Tutor
     - subject : Subject
     - level : ExpertiseLevel
     - targetDateTime : LocalDateTime

6. PaymentStatus
   - Enum Values:
     - PENDING
     - PAID
     - CANCELLED

7. DayOfWeek
   - Enum Values:
     - MONDAY
     - TUESDAY
     - WEDNESDAY
     - THURSDAY
     - FRIDAY
     - SATURDAY
     - SUNDAY

### Attributes:
- Person:
  - name : String
  - email : String

- Tutor:
  - bankAccount : String
  - subjects : List<Subject>
  - expertiseLevels : Map<Subject, ExpertiseLevel>
  - hourlyPrice : Map<Subject, Double>
  - weeklyAvailability : Map<DayOfWeek, List<LocalTime>>
  - tutoringSessions : List<TutoringSession>

- Student:
  - tutoringRequests : List<TutoringRequest>

- TutoringSession:
  - tutor : Tutor
  - student : Student
  - subject : Subject
  - level : ExpertiseLevel
  - scheduledDateTime : LocalDateTime
  - followUpSessionScheduled : boolean
  - paymentStatus : PaymentStatus

- TutoringRequest:
  - student : Student
  - tutor : Tutor
  - subject : Subject
  - level : ExpertiseLevel
  - targetDateTime : LocalDateTime

- PaymentStatus:
  - PENDING
  - PAID
  - CANCELLED

- DayOfWeek:
  - MONDAY
  - TUESDAY
  - WEDNESDAY
  - THURSDAY
  - FRIDAY
  - SATURDAY
  - SUNDAY"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Represents the different levels of expertise a tutor can have in a subject.

### Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor extends Person(bankAccount: String, subjects: List<Subject>, expertiseLevels: Map<Subject, ExpertiseLevel>, hourlyPrice: Map<Subject, Double>, weeklyAvailability: Map<DayOfWeek, List<LocalTime>, tutoringSessions: List<TutoringSession>): Represents a tutor with additional attributes related to tutoring services.
3. Student extends Person(tutoringRequests: List<TutoringRequest): Represents a student with a list of tutoring requests.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, scheduledDateTime: LocalDateTime, followUpSessionScheduled: boolean, paymentStatus: PaymentStatus): Represents a tutoring session between a tutor and a student.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDateTime: LocalDateTime): Represents a tutoring request made by a student to a tutor.
6. PaymentStatus: Represents the status of payment for a tutoring session.
7. DayOfWeek: Represents the days of the week for specifying weekly availability."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:scheduledDateTime 
   X  Attribute:followUpSessionScheduled 
   X  Attribute:paymentStatus 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDateTime 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:Tutor extends Person
   X  Attribute:bankAccount 
   X  Attribute:subjects 
   X  Attribute:expertiseLevels 
   X  Attribute:ExpertiseLevel> 
   X  Attribute:hourlyPrice 
   X  Attribute:Double> 
   X  Attribute:weeklyAvailability 
   X  Attribute:List<LocalTime> 
   X  Attribute:tutoringSessions 
 X  Class:Student extends Person
   X  Attribute:tutoringRequests 
 X  Class:PaymentStatus
 X  Class:DayOfWeek
------------------------------------------------------------
------------------------------------------------------------
---------------------8/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

Classes:
1. Person
   - Attributes: name, email

2. Tutor (inherits from Person)
   - Attributes: bankAccount
   - Relationships: offers multiple TutoringOffer

3. Student (inherits from Person)
   - Relationships: makes multiple TutoringRequest, pays multiple TutoringSession

4. TutoringOffer
   - Attributes: subject, expertiseLevel, hourlyPrice, weeklyAvailability

5. TutoringRequest
   - Attributes: subject, expertiseLevel, targetDateTime
   - Relationships: from Student, to Tutor

6. TutoringSession
   - Attributes: dateTime
   - Relationships: tutor, student

7. Payment
   - Attributes: paymentMethod, amount

8. CancellationPolicy
   - Attributes: cancellationTimeFrame, cancellationPenaltyPercentage

9. FollowUpSession
   - Attributes: agreedDateTime
   - Relationships: tutor, student

Attributes:
- name (String): name of a person
- email (String): email address of a person
- bankAccount (String): bank account details of a tutor
- subject (Subject): subject for tutoring
- expertiseLevel (ExpertiseLevel): level of expertise in a subject
- hourlyPrice (double): hourly price of tutoring session
- weeklyAvailability (String): weekly availability for tutoring sessions
- targetDateTime (DateTime): target date and time of the tutoring session
- dateTime (DateTime): date and time of the tutoring session
- paymentMethod (String): method of payment for the tutoring session
- amount (double): amount to be paid for the tutoring session
- cancellationTimeFrame (int): time frame for cancellation in hours
- cancellationPenaltyPercentage (int): percentage of penalty for cancellation
- agreedDateTime (DateTime): agreed date and time for follow-up session"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject(mathematics, science, literature): Represents the different subjects for tutoring offers.
2. ExpertiseLevel(primary school level, high school level, university level): Indicates the level of expertise a tutor has in a subject.

Classes:
1. Person(name: String, email: String): Represents a general person with a name and email address.
2. Tutor(name: String, email: String, bankAccount: String): Represents a tutor with additional bank account details.
3. Student(name: String, email: String): Represents a student with a name and email address.
4. TutoringOffer(subject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, weeklyAvailability: String): Represents an offer for tutoring in a specific subject.
5. TutoringRequest(subject: Subject, expertiseLevel: ExpertiseLevel, targetDateTime: DateTime): Represents a request for tutoring from a student to a tutor.
6. TutoringSession(dateTime: DateTime): Represents a tutoring session between a tutor and a student.
7. Payment(paymentMethod: String, amount: double): Represents a payment made for a tutoring session.
8. CancellationPolicy(cancellationTimeFrame: int, cancellationPenaltyPercentage: int): Represents the policy for cancellation of a tutoring session.
9. FollowUpSession(agreedDateTime: DateTime): Represents a follow-up tutoring session between a tutor and a student."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringOffer  Oracle:TutoringOffer
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   O  Attribute:hourlyPrice  Oracle:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:subject 
   X  Attribute:expertiseLevel 
   X  Attribute:targetDateTime 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:dateTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:paymentMethod 
   X  Attribute:amount 
 X  Class:ExpertiseLevel
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 X  Class:CancellationPolicy
   X  Attribute:cancellationTimeFrame 
   X  Attribute:cancellationPenaltyPercentage 
 X  Class:FollowUpSession
   X  Attribute:agreedDateTime 
------------------------------------------------------------
------------------------------------------------------------
---------------------9/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:### Enumerations:
1. **Subject**
   - Mathematics
   - Science
   - Literature
   - Others

2. **ExpertiseLevel**
   - Primary School Level
   - High School Level
   - University Level

### Classes:
1. **User**
   - Attributes:
     - name: String
     - email: String

2. **Tutor** (inherits from User)
   - Attributes:
     - bankAccount: String
     - expertiseSubject: Subject
     - expertiseLevel: ExpertiseLevel
     - hourlyPrice: Double
     - weeklyAvailability: List\<TutorAvailability\>
   - Methods:
     - offerTutoringSession(subject: Subject, level: ExpertiseLevel, price: Double, availability: TutorAvailability)

3. **TutorAvailability**
   - Attributes:
     - dayOfWeek: String
     - startTime: Time
     - endTime: Time

4. **Student** (inherits from User)
   - Methods:
     - browseTutoringOffers(subject: Subject)
     - makeTutoringRequest(tutor: Tutor, level: ExpertiseLevel, targetDateTime: DateTime)
     - payForSession(amount: Double, paymentMethod: PaymentMethod)

5. **TutoringSession**
   - Attributes:
     - tutor: Tutor
     - student: Student
     - subject: Subject
     - level: ExpertiseLevel
     - dateTime: DateTime
     - isConfirmed: Boolean
     - isCompleted: Boolean
   - Methods:
     - confirmSession()
     - rescheduleSession(newDateTime: DateTime)
     - cancelSession(canceller: User)

6. **PaymentMethod**
   - Attributes:
     - creditCard: String
     - wireTransfer: String

### Attributes:
- **TutorAvailability**
  - dayOfWeek: String
  - startTime: Time
  - endTime: Time

- **TutoringSession**
  - tutor: Tutor
  - student: Student
  - subject: Subject
  - level: ExpertiseLevel
  - dateTime: DateTime
  - isConfirmed: Boolean
  - isCompleted: Boolean

- **PaymentMethod**
  - creditCard: String
  - wireTransfer: String"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:### Enumerations:
1. Subject(Mathematics, Science, Literature, Others):Represent different subjects for tutoring offers.
2. ExpertiseLevel(Primary School Level, High School Level, University Level):Indicate the level of expertise a tutor has in a subject.

### Classes:
1. User(name: String, email: String):Base class for both tutors and students with basic user information.
2. Tutor(name: String, email: String, bankAccount: String, expertiseSubject: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: Double, weeklyAvailability: List<TutorAvailability>):Represents a tutor providing online tutoring services.
3. TutorAvailability(dayOfWeek: String, startTime: Time, endTime: Time):Specifies the availability of a tutor for tutoring sessions.
4. Student(name: String, email: String):Represents a student who can browse and request tutoring sessions.
5. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, dateTime: DateTime, isConfirmed: Boolean, isCompleted: Boolean):Tracks the details and status of a tutoring session.
6. PaymentMethod(creditCard: String, wireTransfer: String):Stores the payment methods available for a student to pay for tutoring sessions."
"
"
------------------------------------------------------------
 O  Class:Subject  Oracle:Subject
   X  Attribute:Mathematics 
   X  Attribute:Science 
   X  Attribute:Literature 
   X  Attribute:Others 
 O  Class:User  Oracle:User
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
 O  Class:Tutor  Oracle:Tutor
   X  Attribute:name 
   X  Attribute:email 
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertiseSubject 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:weeklyAvailability 
 O  Class:TutorAvailability  Oracle:TutorAvailability
   X  Attribute:dayOfWeek 
   O  Attribute:startTime  Oracle:startTime 
   O  Attribute:endTime  Oracle:endTime 
 O  Class:Student  Oracle:Student
   X  Attribute:name 
   X  Attribute:email 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:dateTime 
   X  Attribute:isConfirmed 
   X  Attribute:isCompleted 
 X  Class:ExpertiseLevel
   X  Attribute:School 
   X  Attribute:School 
   X  Attribute:Level 
 O  Class:PaymentMethod  Oracle:PaymentKind 
   O  Attribute:creditCard  Oracle:CreditCard 
   O  Attribute:wireTransfer  Oracle:WireTransfer 
------------------------------------------------------------
------------------------------------------------------------
---------------------10/10------Online Tutoring System (OTS):
------------------------------------------------------------
---------------------Prediction AI:
"User:Generate the lists of enumerations, classes and attributes from a given <Description>.
#Description 
The OTS is used by students and tutors where a tutor may also be a student. At registration, tutors need to provide their name, email address and bank account. After that, tutors may offer online tutoring in different subjects (e.g. mathematics, science, literature, etc.) by providing their level of expertise (e.g. primary school level, high school level, university level) in the given subject and their hourly price of a tutoring session (which may again be subject specific). Tutors may specify their weekly availability for tutoring sessions (e.g. Thursdays from 10:00 to 11:30).
Registered students (with a name and an email address) may browse available tutoring offers in a specific subject and then make a tutoring request from the designated tutor by specifying the level of tutoring. This request should suggest the target date and time of the first tutoring session. The tutor may confirm the requested tutoring session or offer a session at another slot. Once the session is agreed, the tutor and the student is expected to turn up at the given time for tutoring. During the tutoring session, the student and the tutor may agree upon to schedule follow-up a tutoring session. After the actual tutoring session, the student pays for the session (with a credit card or wire transfer).
A tutoring session may be cancelled by either the student or the tutor. However, if the student cancels less than 24 hours prior to the session then 75% of the session's price has to be paid. If the tutor cancels within 24 hours then he/she needs to offer a 25% discount for his/her next session to the same student.

AI:## Enumerations:
1. Subject (e.g. mathematics, science, literature)
2. ExpertiseLevel (e.g. primary school level, high school level, university level)

## Classes:
1. Person
   - Attributes:
     - name : String
     - email : String

2. Tutor
   - Attributes:
     - bankAccount : String
     - expertise : Subject
     - expertiseLevel : ExpertiseLevel
     - hourlyPrice : double
     - availability : List<String>  // Weekly availability for tutoring sessions
     - tutoringSessions : List<TutoringSession>
   
3. Student
   - Attributes:
     - tutoringRequests : List<TutoringRequest>
     - payments : List<Payment>

4. TutoringSession
   - Attributes:
     - tutor : Tutor
     - student : Student
     - subject : Subject
     - level : ExpertiseLevel
     - date : Date
     - time : Time
     - followUpSession : boolean

5. TutoringRequest
   - Attributes:
     - student : Student
     - tutor : Tutor
     - subject : Subject
     - level : ExpertiseLevel
     - targetDate : Date
     - targetTime : Time

6. Payment
   - Attributes:
     - student : Student
     - amount : double
     - paymentMethod : String

## Attributes:
- name : String (in Person)
- email : String (in Person)
- bankAccount : String (in Tutor)
- expertise : Subject (in Tutor)
- expertiseLevel : ExpertiseLevel (in Tutor)
- hourlyPrice : double (in Tutor)
- availability : List<String> (in Tutor)
- tutoringSessions : List<TutoringSession> (in Tutor)
- tutoringRequests : List<TutoringRequest> (in Student)
- payments : List<Payment> (in Student)
- tutor : Tutor (in TutoringSession)
- student : Student (in TutoringSession)
- subject : Subject (in TutoringSession)
- level : ExpertiseLevel (in TutoringSession)
- date : Date (in TutoringSession)
- time : Time (in TutoringSession)
- followUpSession : boolean (in TutoringSession)
- targetDate : Date (in TutoringRequest)
- targetTime : Time (in TutoringRequest)
- amount : double (in Payment)
- paymentMethod : String (in Payment)"
"
"
"User:List all the classes and enumerations using format:
Enumerations:
1.enumeration(literals):[one-sentence rationale]
2.enumeration(literals):[one-sentence rationale]
...
Classes:
1.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
2.classname(attributeName1: attributeType1, attributeName2: attributeType2 ):[one-sentence rationale]
...

AI:Enumerations:
1. Subject (mathematics, science, literature): Represents different subjects for tutoring offers.
2. ExpertiseLevel (primary school level, high school level, university level): Represents the level of expertise a tutor can offer.

Classes:
1. Person(name: String, email: String): Represents a generic person with a name and email address.
2. Tutor(bankAccount: String, expertise: Subject, expertiseLevel: ExpertiseLevel, hourlyPrice: double, availability: List<String>, tutoringSessions: List<TutoringSession>): Represents a tutor with specific attributes for tutoring offers.
3. Student(tutoringRequests: List<TutoringRequest>, payments: List<Payment>): Represents a student with attributes related to tutoring requests and payments.
4. TutoringSession(tutor: Tutor, student: Student, subject: Subject, level: ExpertiseLevel, date: Date, time: Time, followUpSession: boolean): Represents a tutoring session between a tutor and a student.
5. TutoringRequest(student: Student, tutor: Tutor, subject: Subject, level: ExpertiseLevel, targetDate: Date, targetTime: Time): Represents a tutoring request made by a student to a tutor.
6. Payment(student: Student, amount: double, paymentMethod: String): Represents a payment made by a student for a tutoring session."
"
"
------------------------------------------------------------
 O  Class:Subject   Oracle:Subject
   X  Attribute:mathematics 
   X  Attribute:science 
   X  Attribute:literature 
 O  Class:Tutor  Oracle:Tutor
   O  Attribute:bankAccount  Oracle:bankAccount 
   X  Attribute:expertise 
   X  Attribute:expertiseLevel 
   X  Attribute:hourlyPrice 
   X  Attribute:availability 
   X  Attribute:tutoringSessions 
 O  Class:Student  Oracle:Student
   X  Attribute:tutoringRequests 
   X  Attribute:payments 
 O  Class:TutoringSession  Oracle:TutoringSession
   X  Attribute:tutor 
   X  Attribute:student 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:date 
   X  Attribute:time 
   X  Attribute:followUpSession 
 O  Class:TutoringRequest  Oracle:TutoringRequest
   X  Attribute:student 
   X  Attribute:tutor 
   X  Attribute:subject 
   X  Attribute:level 
   X  Attribute:targetDate 
   X  Attribute:targetTime 
 O  Class:Payment  Oracle:Payment
   X  Attribute:student 
   X  Attribute:amount 
   X  Attribute:paymentMethod 
 X  Class:ExpertiseLevel 
   X  Attribute:school 
   X  Attribute:school 
   X  Attribute:level 
 O  Class:Person  Oracle:User 
   O  Attribute:name  Oracle:name 
   O  Attribute:email  Oracle:email 
